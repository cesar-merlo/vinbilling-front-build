{"version":3,"sources":["./src/app/company/users/new-user-dialog/new-user-dialog.component.ts","./src/app/company/users/new-user-dialog/new-user-dialog.component.html","./src/app/company/rates/edit-rate-dialog/edit-rate-dialog.component.ts","./src/app/company/rates/edit-rate-dialog/edit-rate-dialog.component.html","./src/app/company/customers/customer.component.ts","./src/app/company/customers/customers.component.html","./src/app/company/customers/new-customer-dialog/new-customer-dialog.component.ts","./src/app/company/customers/new-customer-dialog/new-customer-dialog.component.html","./src/app/company/users/users.component.ts","./src/app/company/users/users.component.html","./src/app/company/company.module.ts","./src/app/company/rates/new-rate-dialog/new-rate-dialog.component.ts","./src/app/company/rates/new-rate-dialog/new-rate-dialog.component.html","./src/app/company/users/edit-user-dialog/edit-user-dialog.component.ts","./src/app/company/users/edit-user-dialog/edit-user-dialog.component.html","./src/app/company/rates/rates.component.ts","./src/app/company/rates/rates.component.html","./src/app/company/customers/edit-customer-dialog/edit-customer-dialog.component.ts","./src/app/company/customers/edit-customer-dialog/edit-customer-dialog.component.html","./src/app/company/profile/profile.component.ts","./src/app/company/profile/profile.component.html"],"names":[],"mappings":"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","file":"company-company-module-es2015.js","sourcesContent":["import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatStepper } from \"@angular/material/stepper\";\nimport { Subscription } from \"rxjs\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { UserService } from \"src/app/business/services/user.service\";\nimport { ValidatorsService } from \"src/app/core/validators.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { regexs } from \"src/app/core/config/constants\";\n\n@Component({\n  selector: \"app-new-user-dialog\",\n  templateUrl: \"./new-user-dialog.component.html\",\n  styleUrls: [\"./new-user-dialog.component.scss\"],\n})\nexport class NewUserDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  userForm: FormGroup;\n  options: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedState: string;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<NewUserDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private userService: UserService,\n    private geoService: GeoService,\n    public notificationService: NotificationService,\n    private validatorsService: ValidatorsService\n  ) {\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  private buildForms() {\n    this.userForm = this.fb.group(\n      {\n        email: [\"\", [Validators.required, Validators.email]],\n        password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n        confirm_password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n        first_name: [\"\", [Validators.required]],\n        last_name: [\"\", [Validators.required]],\n        phone: [\"\", [Validators.required,Validators.pattern(regexs.numbers)]],\n        office_phone: [\"\",[Validators.pattern(regexs.numbers)]],\n        city: [\"\", [Validators.required, Validators.pattern(regexs.mongoId)]],\n        commission: [\"\"],\n      },\n      {\n        validators: this.validatorsService.equalPasswords(\"password\", \"confirm_password\"),\n      }\n    );\n\n    this.options = this.fb.group({\n      canEmailInvoices: [false],\n      canModifyCustomers: [false],\n      isManager: [false],\n      isAdmin: [false],\n      isDriver: [true],\n      receiveEmail: [false],\n    });\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.userForm.controls.city.reset();\n  }\n\n  goBack(stepper: MatStepper) {\n    stepper.previous();\n  }\n\n  saveFirst(stepper: MatStepper) {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      stepper.next();\n    }\n  }\n\n  onSubmit(stepper: MatStepper) {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const body = {\n        ...this.userForm.value,\n        commission: this.userForm.value.commission > 0 ? this.userForm.value.commission : 0,\n        options: this.options.value,\n      };\n      delete body.confirm_password;\n\n      this.userService.saveUser(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"User added\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          if (err?.error?.message === \"Email already taken\") {\n            this.notificationService.error(err?.error?.message);\n            this.userForm.controls.email.setErrors({ alreadyTaken: true });\n            this.goBack(stepper);\n          } else {\n            this.notificationService.error();\n          }\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content custom-scroll\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>New User</h3>\n  <mat-horizontal-stepper linear #stepper>\n    <!-- STEP 1 -->\n    <!-- customer data -->\n    <mat-step label=\"User data\" [completed]=\"userForm.valid\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"userForm\" (ngSubmit)=\"saveFirst(stepper)\">\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n          <input\n            id=\"first_name\"\n            name=\"first_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"first_name\"\n            [class.is-invalid]=\"userForm.controls.first_name.touched && userForm.controls.first_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n          <input\n            id=\"last_name\"\n            name=\"last_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"last_name\"\n            [class.is-invalid]=\"userForm.controls.last_name.touched && userForm.controls.last_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"email\" class=\"text-dark text-base\">Email address</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            formControlName=\"email\"\n            [class.is-invalid]=\"userForm.controls.email.touched && userForm.controls.email.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"password\" class=\"text-dark text-base\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            class=\"form-control\"\n            formControlName=\"password\"\n            [class.is-invalid]=\"userForm.controls.password.touched && userForm.controls.password.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n            {{userForm.controls.password.errors?.minlength || userForm.controls.password.errors?.maxlength ? \"Min 8 characters and max 20\" : \"Invalid field\" }}\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"confirm_password\" class=\"text-dark text-base\">Confirm password</label>\n          <input\n            id=\"confirm_password\"\n            name=\"confirm_password\"\n            type=\"password\"\n            class=\"form-control\"\n            formControlName=\"confirm_password\"\n            [class.is-invalid]=\"userForm.controls.confirm_password.touched && userForm.controls.confirm_password.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n            {{userForm.controls.confirm_password.errors?.minlength || userForm.controls.confirm_password.errors?.maxlength ? \"Min 8 characters and max 20\" : \"Invalid field\" }}\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone\" class=\"text-dark text-base\">Mobile phone</label>\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"phone\"\n            [class.is-invalid]=\"userForm.controls.phone.touched && userForm.controls.phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n          <input\n            id=\"office_phone\"\n            name=\"office_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone\"\n            [class.is-invalid]=\"userForm.controls.office_phone.touched && userForm.controls.office_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">State</label>\n          <div class=\"custom-select-wrapper\">\n            <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n              <option selected value=\"\">Select state...</option>\n              <option *ngFor=\"let state of states\" [value]=\"state.code\">{{ state.name }}</option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">City</label>\n          <div class=\"custom-select-wrapper\">\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"city\"\n              [class.is-invalid]=\"userForm.controls.city.touched && userForm.controls.city.invalid\"\n            >\n              <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\">{{ city.name }}</option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"driver_commission\" class=\"text-dark text-base\">Driver commission</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">%</span>\n            </div>\n            <input\n              id=\"commission\"\n              name=\"commission\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"commission\"\n              [class.is-invalid]=\"userForm.controls.commission.touched && userForm.controls.commission.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-primary\" type=\"submit\">Next</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n    <!-- STEP 2 -->\n    <!-- cutomer contact data -->\n    <mat-step label=\"Permissions\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"options\" (ngSubmit)=\"onSubmit(stepper)\">\n        <div class=\"col-12 px-2 py-2\">\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"canEmailInvoices\" formControlName=\"canEmailInvoices\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"canEmailInvoices\">Can Email Invoices?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"canModifyCustomers\" formControlName=\"canModifyCustomers\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"canModifyCustomers\">Can Modify Customer List?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isManager\" formControlName=\"isManager\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isManager\">Is Manager?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isAdmin\" formControlName=\"isAdmin\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isAdmin\">Is Admin?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isDriver\" formControlName=\"isDriver\" disabled />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isDriver\">Is Driver?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"receiveEmail\" formControlName=\"receiveEmail\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"receiveEmail\">Receive Email After Submit </label>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"goBack(stepper)\">Back</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n  </mat-horizontal-stepper>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Subscription } from \"rxjs\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { Rate } from \"src/app/business/models/rate.models\";\nimport { RateService } from \"src/app/business/services/rate.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\n\nexport interface EditRateDialogData {\n  rate: any;\n}\n\n@Component({\n  selector: \"app-edit-rate-dialog\",\n  templateUrl: \"./edit-rate-dialog.component.html\",\n  styleUrls: [\"./edit-rate-dialog.component.scss\"],\n})\nexport class EditRateDialogComponent implements OnDestroy {\n  subscriptions: Subscription[] = [];\n  rateForm: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  rate: Rate;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditRateDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: EditRateDialogData,\n    private fb: FormBuilder,\n    private rateService: RateService,\n    public notificationService: NotificationService\n  ) {\n    this.rate = this.data.rate;\n    this.buildForms();\n  }\n\n  private buildForms() {\n    this.rateForm = this.fb.group({\n      amount: [this.rate.amount, [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    if (this.rateForm.invalid) {\n      return Object.values(this.rateForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const body = this.rateForm.value;\n      this.rateService.updateRate(body, this.rate.id).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Rate updated\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>Edit Rate</h3>\n  <form class=\"form-group row mt-4 new-rate-form\" [formGroup]=\"rateForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Origination state</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" disabled>\n          <option value=\"\" selected>{{ rate.origination_city.state_name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Origination city</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" disabled>\n          <option value=\"\" selected>{{ rate.origination_city.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Destination state</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" disabled>\n          <option value=\"\" selected>{{ rate.destination_city.state_name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Destination city</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" disabled>\n          <option value=\"\" selected>{{ rate.destination_city.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"amount\" class=\"text-dark text-base\">Amount</label>\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">$</span>\n        </div>\n        <input\n          id=\"amount\"\n          name=\"amount\"\n          type=\"number\"\n          class=\"form-control\"\n          formControlName=\"amount\"\n          [class.is-invalid]=\"rateForm.controls.amount.touched && rateForm.controls.amount.invalid\"\n        />\n        <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n      </div>\n    </div>\n\n    <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n      <div class=\"col-5\">\n        <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n      </div>\n      <div class=\"col-5\">\n        <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { MatDialog } from '@angular/material/dialog'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { MatSort } from '@angular/material/sort'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { Subscription } from 'rxjs'\nimport { CustomerService } from 'src/app/business/services/customer.service'\nimport { Customer } from 'src/app/business/models/customer.models'\nimport { DialogService } from 'src/app/shared/dialogs/dialog.service'\nimport { NotificationService } from 'src/app/shared/notifications/notification.service'\nimport {\n  EditCustomerDialogComponent,\n  EditCustomerDialogData,\n} from './edit-customer-dialog/edit-customer-dialog.component'\nimport { NewCustomerDialogComponent } from './new-customer-dialog/new-customer-dialog.component'\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n})\nexport class CustomersComponent implements AfterViewInit, OnInit, OnDestroy {\n  displayedColumns = ['name', 'address', 'contact_name', 'actions']\n  pageSizeOptions: number[] = [12, 24, 50, 100]\n\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatPaginator) paginator: MatPaginator\n\n  subscriptions: Subscription[] = []\n  items: MatTableDataSource<any>\n  customers: Customer[]\n  loading: boolean\n\n  constructor(\n    public dialog: MatDialog,\n    private dialogService: DialogService,\n    private customerService: CustomerService,\n    public notificationService: NotificationService\n  ) {\n    this.items = new MatTableDataSource([])\n    const sub = customerService.customers.subscribe((data) => {\n      this.customers = data\n      this.items.data = data\n    })\n    this.subscriptions.push(sub)\n  }\n\n  ngOnInit() {\n    this.dialogService.showLoader()\n    this.customerService.fetchCustomers().finally(() => {\n      this.dialogService.hideLoader()\n    })\n\n    //custom table filters\n    this.items.filterPredicate = (data: Customer, filter: string) => {\n      return (\n        data.name?.toLowerCase().indexOf(filter) !== -1 ||\n        data.address_line_1?.toLowerCase().indexOf(filter) !== -1 ||\n        data.primary_contact?.first_name.toString().toLowerCase().indexOf(filter) !== -1 ||\n        data.primary_contact?.last_name.toString().toLowerCase().indexOf(filter) !== -1\n      )\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.items.filter = filterValue.trim().toLocaleLowerCase()\n  }\n\n  openNewDialog() {\n    this.dialog.open<NewCustomerDialogComponent, any>(NewCustomerDialogComponent, {\n      width: '700px',\n    })\n  }\n\n  openEditDialog(customer: Customer) {\n    this.dialog.open<EditCustomerDialogComponent, EditCustomerDialogData>(EditCustomerDialogComponent, {\n      width: '700px',\n      data: {\n        customer,\n      },\n    })\n  }\n\n  onDelete(customer: Customer) {\n    this.dialogService.showConfirm({ title: 'Delete customer', msg: 'Are you sure?' }, () => {\n      this.loading = true\n      this.customerService.deleteCustomer(customer.id).subscribe(\n        (res) => {\n          this.loading = false\n          this.notificationService.success('Customer deleted')\n        },\n        (err) => {\n          this.loading = false\n          this.notificationService.error()\n        }\n      )\n    })\n  }\n\n  ngAfterViewInit() {\n    this.items.sort = this.sort\n    this.items.paginator = this.paginator\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe())\n  }\n}\n","<div class=\"px-2 px-md-5 py-3 position-relative\">\n  <div *ngIf=\"loading\" class=\"loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <div class=\"d-flex flex-wrap w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block content-title\">Customers</h1>\n    <div class=\"d-flex content-options-bar\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">\n            <i class=\"fas fa-search\"></i>\n          </span>\n        </div>\n        <input type=\"text\" class=\"form-control\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter by any field...\" />\n      </div>\n      <button (click)=\"openNewDialog()\" class=\"btn font-weight-bold bg-blue-main text-light ml-3\">+Add</button>\n    </div>\n  </div>\n\n  <div class=\"row mb-4\">\n    <div class=\"col-12 table-wrapper table-responsive\">\n      <table mat-table [dataSource]=\"items\" class=\"table table-borderless table-striped\" matSort>\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef>Name</th>\n          <td mat-cell *matCellDef=\"let customer\">{{ customer.name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"address\">\n          <th mat-header-cell *matHeaderCellDef>Address</th>\n          <td mat-cell *matCellDef=\"let customer\">{{ customer.address_line_1 }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"contact_name\">\n          <th mat-header-cell *matHeaderCellDef>Contact name</th>\n          <td mat-cell *matCellDef=\"let customer\">\n            {{ customer.primary_contact?.first_name + \" \" + customer.primary_contact?.last_name }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let customer\">\n            <div class=\"action-buttons\">\n              <button (click)=\"openEditDialog(customer)\" class=\"text-dark mr-4\" aria-label=\"edit\">\n                <i class=\"fas fa-edit text-xl\"></i>\n              </button>\n              <button (click)=\"onDelete(customer)\" class=\"text-dark\" aria-label=\"edit\">\n                <i class=\"fas fa-trash-alt text-xl\"></i>\n              </button>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <div *ngIf=\"!items.data.length || !items.filteredData.length\" class=\"text-center border py-3 mt-n3 table-width\">No customers found</div>\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"> </mat-paginator>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatStepper } from \"@angular/material/stepper\";\nimport { Subscription } from \"rxjs\";\nimport { CustomerService } from \"src/app/business/services/customer.service\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { regexs } from \"src/app/core/config/constants\";\n\n@Component({\n  selector: \"app-new-customer-dialog\",\n  templateUrl: \"./new-customer-dialog.component.html\",\n  styleUrls: [\"./new-customer-dialog.component.scss\"],\n})\nexport class NewCustomerDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  customerDataForm: FormGroup;\n  primaryContactForm: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedState: string;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<NewCustomerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private customerService: CustomerService,\n    private geoService: GeoService,\n    public notificationService: NotificationService\n  ) {\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  private buildForms() {\n    this.customerDataForm = this.fb.group({\n      name: [\"\", [Validators.required]],\n      address_line_1: [\"\", [Validators.required]],\n      address_line_2: [\"\", []],\n      city_id: [\"\", [Validators.required, Validators.pattern(regexs.mongoId)]],\n      zip: [\"\", [Validators.required, Validators.pattern(regexs.zip)]],\n      main_phone: [\"\", [Validators.required,Validators.pattern(regexs.numbers)]],\n      main_phone_extension: [\"\", [Validators.pattern(regexs.numbers)]],\n      fax: [\"\", [Validators.pattern(regexs.numbers)]],\n    });\n\n    this.primaryContactForm = this.fb.group({\n      first_name: [\"\", []],\n      last_name: [\"\", []],\n      email: [\"\", [, Validators.email]],\n      office_phone: [\"\", [Validators.pattern(regexs.numbers)]],\n      office_phone_extension: [\"\", [Validators.pattern(regexs.numbers)]],\n      fax: [\"\", [Validators.pattern(regexs.numbers)]],\n      mobile_phone: [\"\", [Validators.pattern(regexs.numbers)]],\n      mobile_phone_extension: [\"\", [Validators.pattern(regexs.numbers)]],\n    });\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.customerDataForm.controls.city_id.reset();\n  }\n\n  goBack(stepper: MatStepper) {\n    stepper.previous();\n  }\n\n  saveFirst(stepper: MatStepper) {\n    if (this.customerDataForm.invalid) {\n      return Object.values(this.customerDataForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      stepper.next();\n    }\n  }\n\n  onSubmit() {\n    if (this.primaryContactForm.invalid) {\n      return Object.values(this.primaryContactForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      //save customer\n      this.isLoading = true;\n      const body = {\n        ...this.customerDataForm.value,\n        primary_contact: this.primaryContactForm.value,\n      };\n      this.customerService.saveCustomer(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Customer added\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content custom-scroll\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>New Customer</h3>\n  <mat-horizontal-stepper linear #stepper>\n    <!-- STEP 1 -->\n    <!-- customer data -->\n    <mat-step label=\"Customer data\" [completed]=\"customerDataForm.valid\">\n      <form class=\"form-group row mt-4 new-customer-form custom-scroll\" [formGroup]=\"customerDataForm\" (ngSubmit)=\"saveFirst(stepper)\">\n        <div class=\"col-12 mb-3\">\n          <label for=\"name\" class=\"text-dark text-base\">Customer name</label>\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"name\"\n            [class.is-invalid]=\"customerDataForm.controls.name.touched && customerDataForm.controls.name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address1\" class=\"text-dark text-base\">Address Line 1</label>\n          <input\n            id=\"address1\"\n            name=\"address1\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"address_line_1\"\n            [class.is-invalid]=\"customerDataForm.controls.address_line_1.touched && customerDataForm.controls.address_line_1.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">Address Line 2</label>\n          <input\n            id=\"address2\"\n            name=\"address2\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"address_line_2\"\n            [class.is-invalid]=\"customerDataForm.controls.address_line_2.touched && customerDataForm.controls.address_line_2.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"state\" class=\"text-dark text-base\">State</label>\n          <div class=\"custom-select-wrapper\">\n            <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n              <option selected value=\"\">Select state...</option>\n              <option *ngFor=\"let state of states\" [value]=\"state.code\">{{ state.name }}</option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"city_id\" class=\"text-dark text-base\">City</label>\n          <div class=\"custom-select-wrapper\">\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"city_id\"\n              [class.is-invalid]=\"customerDataForm.controls.city_id.touched && customerDataForm.controls.city_id.invalid\"\n            >\n              <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\">{{ city.name }}</option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"zip\" class=\"text-dark text-base\">Zip</label>\n          <input\n            id=\"zip\"\n            name=\"zip\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"zip\"\n            [class.is-invalid]=\"customerDataForm.controls.zip.touched && customerDataForm.controls.zip.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone\" class=\"text-dark text-base\">Main phone</label>\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"main_phone\"\n            [class.is-invalid]=\"customerDataForm.controls.main_phone.touched && customerDataForm.controls.main_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone_extension\" class=\"text-dark text-base\">Main phone extension</label>\n          <input\n            id=\"phone_extension\"\n            name=\"phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"main_phone_extension\"\n            [class.is-invalid]=\"\n              customerDataForm.controls.main_phone_extension.touched && customerDataForm.controls.main_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n          <input\n            id=\"fax\"\n            name=\"fax\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"fax\"\n            [class.is-invalid]=\"customerDataForm.controls.fax.touched && customerDataForm.controls.fax.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-primary\" type=\"submit\">Next</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n    <!-- STEP 2 -->\n    <!-- cutomer contact data -->\n    <mat-step label=\"Primary contact\">\n      <form class=\"form-group row mt-4 new-customer-form custom-scroll\" [formGroup]=\"primaryContactForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"col-6 mb-3\">\n          <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n          <input\n            id=\"first_name\"\n            name=\"first_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"first_name\"\n            [class.is-invalid]=\"primaryContactForm.controls.first_name.touched && primaryContactForm.controls.first_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-6 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n          <input\n            id=\"last_name\"\n            name=\"last_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"last_name\"\n            [class.is-invalid]=\"primaryContactForm.controls.last_name.touched && primaryContactForm.controls.last_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Email</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            formControlName=\"email\"\n            [class.is-invalid]=\"primaryContactForm.controls.email.touched && primaryContactForm.controls.email.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n          <input\n            id=\"office_phone\"\n            name=\"office_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone\"\n            [class.is-invalid]=\"primaryContactForm.controls.office_phone.touched && primaryContactForm.controls.office_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone_extension\" class=\"text-dark text-base\">Office phone extension</label>\n          <input\n            id=\"office_phone_extension\"\n            name=\"office_phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone_extension\"\n            [class.is-invalid]=\"\n              primaryContactForm.controls.office_phone_extension.touched && primaryContactForm.controls.office_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n          <input\n            id=\"fax\"\n            name=\"fax\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"fax\"\n            [class.is-invalid]=\"primaryContactForm.controls.fax.touched && primaryContactForm.controls.fax.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"mobile_phone\" class=\"text-dark text-base\">Mobile phone</label>\n          <input\n            id=\"mobile_phone\"\n            name=\"mobile_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"mobile_phone\"\n            [class.is-invalid]=\"primaryContactForm.controls.mobile_phone.touched && primaryContactForm.controls.mobile_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"mobile_phone_extension\" class=\"text-dark text-base\">Mobile phone extension</label>\n          <input\n            id=\"mobile_phone_extension\"\n            name=\"mobile_phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"mobile_phone_extension\"\n            [class.is-invalid]=\"\n              primaryContactForm.controls.mobile_phone_extension.touched && primaryContactForm.controls.mobile_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"goBack(stepper)\">Back</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n  </mat-horizontal-stepper>\n</div>\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { MatDialog } from '@angular/material/dialog'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { MatSort } from '@angular/material/sort'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { Subscription } from 'rxjs'\nimport { AuthenticationService } from 'src/app/authentication/authentication.service'\nimport { User } from 'src/app/business/models/user.models'\nimport { UserService } from 'src/app/business/services/user.service'\nimport { DialogService } from 'src/app/shared/dialogs/dialog.service'\nimport { NotificationService } from 'src/app/shared/notifications/notification.service'\nimport { EditUserDialogComponent, EditUserDialogData } from './edit-user-dialog/edit-user-dialog.component'\nimport { NewUserDialogComponent } from './new-user-dialog/new-user-dialog.component'\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements AfterViewInit, OnInit, OnDestroy {\n  displayedColumns = ['first_name', 'last_name', 'email', 'role', 'actions']\n  pageSizeOptions: number[] = [12, 24, 50, 100]\n\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatPaginator) paginator: MatPaginator\n\n  subscriptions: Subscription[] = []\n  items: MatTableDataSource<User>\n  users: User[]\n  loading: boolean = false\n  isEditionAble = false\n\n  constructor(\n    public dialog: MatDialog,\n    private dialogService: DialogService,\n    private userService: UserService,\n    private notificationService: NotificationService,\n    private authService: AuthenticationService\n  ) {\n    this.isEditionAble = this.authService.isAdmin()\n    this.items = new MatTableDataSource([])\n    const sub = userService.users.subscribe((data) => {\n      if (data) {\n        this.users = data.map((user) => ({\n          ...user,\n          mainRole: user.roles.includes('ADMIN') ? 'Admin' : user.roles.includes('MANAGER') ? 'Manager' : 'Driver',\n        }))\n        this.items.data = this.users?.sort((a, b) =>\n          a.updatedAt < b.updatedAt ? 1 : a.updatedAt > b.updatedAt ? -1 : 0\n        )\n      }\n    })\n    this.subscriptions.push(sub)\n  }\n\n  ngOnInit() {\n    this.dialogService.showLoader()\n    this.userService.fetchUsers().finally(() => {\n      this.dialogService.hideLoader()\n    })\n  }\n\n  applyFilter(filterValue: string) {\n    this.items.filter = filterValue.trim().toLocaleLowerCase()\n  }\n\n  openNewDialog() {\n    if (!this.isEditionAble) return\n\n    this.dialog.open<NewUserDialogComponent, any>(NewUserDialogComponent, {\n      width: '700px',\n    })\n  }\n\n  openEditDialog(user: any) {\n    if (!this.isEditionAble) return\n\n    this.dialog.open<EditUserDialogComponent, EditUserDialogData>(EditUserDialogComponent, {\n      width: '700px',\n      data: {\n        user,\n      },\n    })\n  }\n\n  onDelete(user: User) {\n    if (!this.isEditionAble) return\n\n    this.dialogService.showConfirm({ title: 'Delete user', msg: 'Are you sure?' }, () => {\n      this.loading = true\n      this.userService.deleteUser(user.id).subscribe(\n        (res) => {\n          this.loading = false\n          this.notificationService.success('User deleted')\n        },\n        (err) => {\n          this.loading = false\n          this.notificationService.error()\n        }\n      )\n    })\n  }\n\n  ngAfterViewInit() {\n    this.items.sort = this.sort\n    this.items.paginator = this.paginator\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe())\n  }\n}\n","<div class=\"px-2 px-md-5 py-3\">\n  <div *ngIf=\"loading\" class=\"loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <!-- content topbar -->\n  <div class=\"d-flex flex-wrap w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block content-title\">Users</h1>\n    <div class=\"d-flex content-options-bar\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">\n            <i class=\"fas fa-search\"></i>\n          </span>\n        </div>\n        <input type=\"text\" class=\"form-control\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter by any field...\" />\n      </div>\n      <button (click)=\"openNewDialog()\" class=\"btn font-weight-bold bg-blue-main text-light ml-3\" [disabled]=\"!isEditionAble\">+Add</button>\n    </div>\n  </div>\n\n  <!-- TABLE -->\n  <div class=\"row mb-4\">\n    <div class=\"col-12 table-wrapper table-responsive\">\n      <table mat-table [dataSource]=\"items\" class=\"table table-borderless table-striped\" matSort>\n        <ng-container matColumnDef=\"first_name\">\n          <th mat-header-cell *matHeaderCellDef>First name</th>\n          <td mat-cell *matCellDef=\"let user\" class=\"capitalize\">{{ user.first_name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"last_name\">\n          <th mat-header-cell *matHeaderCellDef>Last name</th>\n          <td mat-cell *matCellDef=\"let user\" class=\"capitalize\">{{ user.last_name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef>Email address</th>\n          <td mat-cell *matCellDef=\"let user\">{{ user.email }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"role\">\n          <th mat-header-cell *matHeaderCellDef>Role</th>\n          <td mat-cell *matCellDef=\"let user\">{{ user.mainRole }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let user\">\n            <div class=\"action-buttons\" [class.text-dark]=\"isEditionAble\" [class.text-secondary]=\"!isEditionAble\">\n              <button (click)=\"openEditDialog(user)\" class=\"mr-4\" aria-label=\"edit\" [disabled]=\"!isEditionAble\">\n                <i class=\"fas fa-user-edit text-xl\"></i>\n              </button>\n              <button (click)=\"onDelete(user)\" aria-label=\"edit\" [disabled]=\"!isEditionAble\">\n                <i class=\"fas fa-trash-alt text-xl\"></i>\n              </button>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <div *ngIf=\"!items.data.length || !items.filteredData.length\" class=\"table-width text-center border py-3 mt-n3\">No users found</div>\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"> </mat-paginator>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { CustomersComponent } from \"./customers/customer.component\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport { RatesComponent } from \"./rates/rates.component\";\nimport { UsersComponent } from \"./users/users.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { RouterModule } from \"@angular/router\";\nimport { NewCustomerDialogComponent } from \"./customers/new-customer-dialog/new-customer-dialog.component\";\nimport { EditCustomerDialogComponent } from \"./customers/edit-customer-dialog/edit-customer-dialog.component\";\nimport { NewRateDialogComponent } from \"./rates/new-rate-dialog/new-rate-dialog.component\";\nimport { EditRateDialogComponent } from \"./rates/edit-rate-dialog/edit-rate-dialog.component\";\nimport { NewUserDialogComponent } from \"./users/new-user-dialog/new-user-dialog.component\";\nimport { EditUserDialogComponent } from \"./users/edit-user-dialog/edit-user-dialog.component\";\n\nexport const companyRoutes = [\n  {\n    path: \"\",\n    redirectTo: \"customers\",\n  },\n  {\n    path: \"customers\",\n    component: CustomersComponent,\n  },\n  {\n    path: \"profile\",\n    component: ProfileComponent,\n  },\n  {\n    path: \"rates\",\n    component: RatesComponent,\n  },\n  {\n    path: \"users\",\n    component: UsersComponent,\n  }\n];\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    ProfileComponent,\n    RatesComponent,\n    UsersComponent,\n    NewCustomerDialogComponent,\n    EditCustomerDialogComponent,\n    NewRateDialogComponent,\n    EditRateDialogComponent,\n    NewUserDialogComponent,\n    EditUserDialogComponent,\n  ],\n  imports: [CommonModule, RouterModule.forChild(companyRoutes), SharedModule],\n})\nexport class CompanyModule {}\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Subscription } from \"rxjs\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { RateBody } from \"src/app/business/models/rate.models\";\nimport { RateService } from \"src/app/business/services/rate.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\n\n@Component({\n  selector: \"app-new-rate-dialog\",\n  templateUrl: \"./new-rate-dialog.component.html\",\n  styleUrls: [\"./new-rate-dialog.component.scss\"],\n})\nexport class NewRateDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  rateForm: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedOrigState: string;\n  selectedDestState: string;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<NewRateDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private rateService: RateService,\n    private geoService: GeoService,\n    public notificationService: NotificationService\n  ) {\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  private buildForms() {\n    this.rateForm = this.fb.group({\n      origination_city_id: [\"\", [Validators.required]],\n      destination_city_id: [\"\", [Validators.required]],\n      amount: [0, [Validators.required]],\n    });\n  }\n\n  onStateChange(event, type: \"orig\" | \"dest\") {\n    const state = event.target.value;\n    if (type === \"orig\") {\n      this.selectedOrigState = state;\n      this.rateForm.controls.origination_city_id.reset();\n    } else {\n      this.selectedDestState = state;\n      this.rateForm.controls.destination_city_id.reset();\n    }\n    this.geoService.fetchCitiesByState(state);\n  }\n\n  onSubmit() {\n    if (this.rateForm.invalid) {\n      return Object.values(this.rateForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const body: RateBody = this.rateForm.value;\n      this.rateService.saveRate(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Rate added\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          if (err.error?.message?.includes(\"Rate already exists\")) {\n            this.notificationService.error(err.error.message);\n          }else{\n            this.notificationService.error();\n          }\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>New Rate</h3>\n  <form class=\"form-group row mt-4 new-rate-form\" [formGroup]=\"rateForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Origination state</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" (change)=\"onStateChange($event, 'orig')\">\n          <option value=\"\" selected disabled>Select state...</option>\n          <option *ngFor=\"let state of states\" [value]=\"state.code\">{{ state.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Origination city</label>\n      <div class=\"custom-select-wrapper\">\n        <select\n          class=\"custom-select form-control\"\n          formControlName=\"origination_city_id\"\n          [class.is-invalid]=\"rateForm.controls.origination_city_id.touched && rateForm.controls.origination_city_id.invalid\"\n        >\n          <option *ngFor=\"let city of cities[selectedOrigState]\" [value]=\"city.id\">{{ city.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Destination state</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" (change)=\"onStateChange($event, 'dest')\">\n          <option value=\"\" selected disabled>Select state...</option>\n          <option *ngFor=\"let state of states\" [value]=\"state.code\">{{ state.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Destination city</label>\n      <div class=\"custom-select-wrapper\">\n        <select\n          class=\"custom-select form-control\"\n          formControlName=\"destination_city_id\"\n          [class.is-invalid]=\"rateForm.controls.destination_city_id.touched && rateForm.controls.destination_city_id.invalid\"\n        >\n          <option *ngFor=\"let city of cities[selectedDestState]\" [value]=\"city.id\">{{ city.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"amount\" class=\"text-dark text-base\">Amount</label>\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">$</span>\n        </div>\n        <input\n          id=\"amount\"\n          name=\"amount\"\n          type=\"number\"\n          class=\"form-control\"\n          formControlName=\"amount\"\n          [class.is-invalid]=\"rateForm.controls.amount.touched && rateForm.controls.amount.invalid\"\n        />\n        <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n      </div>\n    </div>\n\n    <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n      <div class=\"col-5\">\n        <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n      </div>\n      <div class=\"col-5\">\n        <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatStepper } from \"@angular/material/stepper\";\nimport { Subscription } from \"rxjs\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { User } from \"src/app/business/models/user.models\";\nimport { UserService } from \"src/app/business/services/user.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { regexs } from \"src/app/core/config/constants\";\n\nexport interface EditUserDialogData {\n  user: User;\n}\n\n@Component({\n  selector: \"app-edit-user-dialog\",\n  templateUrl: \"./edit-user-dialog.component.html\",\n  styleUrls: [\"./edit-user-dialog.component.scss\"],\n})\nexport class EditUserDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  userForm: FormGroup;\n  options: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedState: string;\n  isLoading = false;\n  user: User;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditUserDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: EditUserDialogData,\n    private fb: FormBuilder,\n    private userService: UserService,\n    private geoService: GeoService,\n    public notificationService: NotificationService\n  ) {\n    this.user = data.user;\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n    this.selectedState = this.user.city.state_code;\n    this.geoService.fetchCitiesByState(this.user.city.state_code);\n  }\n\n  private buildForms() {\n    this.userForm = this.fb.group({\n      email: [this.user.email, [Validators.required, Validators.email]],\n      first_name: [this.user.first_name, [Validators.required]],\n      last_name: [this.user.last_name, [Validators.required]],\n      phone: [this.user.phone, [Validators.required,Validators.pattern(regexs.numbers)]],\n      office_phone: [this.user.office_phone, [Validators.pattern(regexs.numbers)]],\n      city: [this.user.city.id, [Validators.required, Validators.pattern(regexs.mongoId)]],\n      commission: [this.user.commission, [Validators.required]],\n    });\n\n    this.options = this.fb.group({\n      canEmailInvoices: [this.user.roles?.includes(\"INVOICE_EMAIL\")],\n      canModifyCustomers: [this.user.roles?.includes(\"HANDLE_CUSTOMERS\")],\n      isManager: [this.user.roles?.includes(\"MANAGER\")],\n      isAdmin: [this.user.roles?.includes(\"ADMIN\")],\n      isDriver: [this.user.roles?.includes(\"USER\")],\n      receiveEmail: [false],\n    });\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.userForm.controls.city.reset();\n  }\n\n  goBack(stepper: MatStepper) {\n    stepper.previous();\n  }\n\n  saveFirst(stepper: MatStepper) {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      stepper.next();\n    }\n  }\n\n  onSubmit(stepper: MatStepper) {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const body = {\n        ...this.userForm.value,\n        options: this.options.value,\n      };\n\n      this.userService.updateUser(body, this.user.id).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"User updated\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          if (err?.error?.message === \"Email already taken\") {\n            this.notificationService.error(err?.error?.message);\n            this.userForm.controls.email.setErrors({ alreadyTaken: true });\n            this.goBack(stepper);\n          } else {\n            this.notificationService.error();\n          }\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content custom-scroll\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>Edit User</h3>\n  <mat-horizontal-stepper linear #stepper>\n    <!-- STEP 1 -->\n    <!-- customer data -->\n    <mat-step label=\"User data\" [completed]=\"userForm.valid\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"userForm\" (ngSubmit)=\"saveFirst(stepper)\">\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n          <input\n            id=\"first_name\"\n            name=\"first_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"first_name\"\n            [class.is-invalid]=\"userForm.controls.first_name.touched && userForm.controls.first_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n          <input\n            id=\"last_name\"\n            name=\"last_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"last_name\"\n            [class.is-invalid]=\"userForm.controls.last_name.touched && userForm.controls.last_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"email\" class=\"text-dark text-base\">Email address</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            formControlName=\"email\"\n            [class.is-invalid]=\"userForm.controls.email.touched && userForm.controls.email.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone\" class=\"text-dark text-base\">Mobile phone</label>\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"phone\"\n            [class.is-invalid]=\"userForm.controls.phone.touched && userForm.controls.phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n          <input\n            id=\"office_phone\"\n            name=\"office_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone\"\n            [class.is-invalid]=\"userForm.controls.office_phone.touched && userForm.controls.office_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">State</label>\n          <div class=\"custom-select-wrapper\">\n            <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n              <option selected value=\"\">Select state...</option>\n              <option *ngFor=\"let state of states\" [value]=\"state.code\" [selected]=\"state.code === user.city.state_code\">\n                {{ state.name }}\n              </option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">City</label>\n          <div class=\"custom-select-wrapper\">\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"city\"\n              [class.is-invalid]=\"userForm.controls.city.touched && userForm.controls.city.invalid\"\n            >\n              <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\" [selected]=\"city.id === user.city.id\">\n                {{ city.name }}\n              </option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"driver_commission\" class=\"text-dark text-base\">Driver commission</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">%</span>\n            </div>\n            <input\n              id=\"commission\"\n              name=\"commission\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"commission\"\n              [class.is-invalid]=\"userForm.controls.commission.touched && userForm.controls.commission.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-primary\" type=\"submit\">Next</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n    <!-- STEP 2 -->\n    <!-- cutomer contact data -->\n    <mat-step label=\"Permissions\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"options\" (ngSubmit)=\"onSubmit(stepper)\">\n        <div class=\"col-12 px-2 py-2\">\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"canEmailInvoices\" formControlName=\"canEmailInvoices\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"canEmailInvoices\">Can Email Invoices?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"canModifyCustomers\" formControlName=\"canModifyCustomers\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"canModifyCustomers\">Can Modify Customer List?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isManager\" formControlName=\"isManager\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isManager\">Is Manager?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isAdmin\" formControlName=\"isAdmin\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isAdmin\">Is Admin?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isDriver\" formControlName=\"isDriver\" disabled/>\n              <label class=\"custom-control-label cursor-pointer\" for=\"isDriver\">Is Driver?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"receiveEmail\" formControlName=\"receiveEmail\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"receiveEmail\">Receive Email After Submit </label>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"goBack(stepper)\">Back</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n  </mat-horizontal-stepper>\n</div>\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { MatDialog } from '@angular/material/dialog'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { MatSort } from '@angular/material/sort'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { Subscription } from 'rxjs'\nimport { Rate } from 'src/app/business/models/rate.models'\nimport { RateService } from 'src/app/business/services/rate.service'\nimport { DialogService } from 'src/app/shared/dialogs/dialog.service'\nimport { NotificationService } from 'src/app/shared/notifications/notification.service'\nimport { EditRateDialogComponent, EditRateDialogData } from './edit-rate-dialog/edit-rate-dialog.component'\nimport { NewRateDialogComponent } from './new-rate-dialog/new-rate-dialog.component'\n\n@Component({\n  selector: 'app-rates',\n  templateUrl: './rates.component.html',\n  styleUrls: ['./rates.component.scss'],\n})\nexport class RatesComponent implements AfterViewInit, OnInit, OnDestroy {\n  displayedColumns = [\n    'origination_state',\n    'origination_city',\n    'destination_state',\n    'destination_city',\n    'amount',\n    'actions',\n  ]\n  pageSizeOptions: number[] = [12, 24, 50, 100]\n\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatPaginator) paginator: MatPaginator\n\n  subscriptions: Subscription[] = []\n  items: MatTableDataSource<any>\n  rates: Rate[]\n\n  constructor(\n    public dialog: MatDialog,\n    private dialogService: DialogService,\n    private rateService: RateService,\n    public notificationService: NotificationService\n  ) {\n    this.items = new MatTableDataSource([])\n    const sub = rateService.rates.subscribe((data) => {\n      this.rates = data\n      this.items.data = data\n    })\n    this.subscriptions.push(sub)\n  }\n\n  ngOnInit() {\n    if (!this.rates?.length) {\n      this.dialogService.showLoader()\n      this.rateService.fetchRates().finally(() => {\n        this.dialogService.hideLoader()\n      })\n    }\n  }\n\n  openNewDialog() {\n    this.dialog.open<NewRateDialogComponent, any>(NewRateDialogComponent, {\n      width: '700px',\n    })\n  }\n\n  openEditDialog(rate: any) {\n    this.dialog.open<EditRateDialogComponent, EditRateDialogData>(EditRateDialogComponent, {\n      width: '700px',\n      data: {\n        rate,\n      },\n    })\n  }\n\n  onDelete(rate: Rate) {\n    this.dialogService.showConfirm({ title: 'Delete rate', msg: 'Are you sure?' }, () => {\n      this.rateService.deleteRate(rate.id).subscribe(\n        (res) => {\n          this.notificationService.success('Rate deleted')\n        },\n        (err) => {\n          this.notificationService.error()\n        }\n      )\n    })\n  }\n\n  ngAfterViewInit() {\n    this.items.sort = this.sort\n    this.items.paginator = this.paginator\n  }\n\n  applyFilter(filterValue: string) {\n    this.items.filter = filterValue.trim().toLocaleLowerCase()\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe())\n  }\n}\n","<div class=\"px-2 px-md-5 py-3\">\n  <div class=\"d-flex flex-wrap w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block content-title\">Rates</h1>\n    <div class=\"d-flex content-options-bar\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">\n            <i class=\"fas fa-search\"></i>\n          </span>\n        </div>\n        <input type=\"text\" class=\"form-control\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter by any field...\" />\n      </div>\n      <button (click)=\"openNewDialog()\" class=\"btn font-weight-bold bg-blue-main text-light ml-3\">+Add</button>\n    </div>\n  </div>\n\n  <div class=\"row mb-4\">\n    <div class=\"col-12 table-wrapper table-responsive\">\n      <table mat-table [dataSource]=\"items\" class=\"table table-borderless table-striped\" matSort>\n        <ng-container matColumnDef=\"origination_state\">\n          <th mat-header-cell *matHeaderCellDef>Origination state</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.origination_city.state_name }}, {{ rate.origination_city.state_code }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"origination_city\">\n          <th mat-header-cell *matHeaderCellDef>Origination city</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.origination_city.name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"destination_state\">\n          <th mat-header-cell *matHeaderCellDef>Destination state</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.destination_city.state_name }}, {{ rate.destination_city.state_code }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"destination_city\">\n          <th mat-header-cell *matHeaderCellDef>Destination city</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.destination_city.name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"amount\">\n          <th mat-header-cell *matHeaderCellDef>Amount</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.amount | currency }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let rate\">\n            <div class=\"action-buttons\">\n              <button (click)=\"openEditDialog(rate)\" class=\"text-dark mr-4\" aria-label=\"edit\">\n                <i class=\"fas fa-edit text-xl\"></i>\n              </button>\n              <button (click)=\"onDelete(rate)\" class=\"text-dark\" aria-label=\"edit\">\n                <i class=\"fas fa-trash-alt text-xl\"></i>\n              </button>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <div *ngIf=\"!items.data.length || !items.filteredData.length\" class=\"table-width text-center border py-3 mt-n3\">No rates found</div>\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"> </mat-paginator>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatStepper } from \"@angular/material/stepper\";\nimport { Subscription } from \"rxjs\";\nimport { CustomerService } from \"src/app/business/services/customer.service\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { Customer } from \"src/app/business/models/customer.models\";\nimport { City, CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { regexs } from \"src/app/core/config/constants\";\n\nexport interface EditCustomerDialogData {\n  customer: Customer;\n}\n\n@Component({\n  selector: \"app-edit-customer-dialog\",\n  templateUrl: \"./edit-customer-dialog.component.html\",\n  styleUrls: [\"./edit-customer-dialog.component.scss\"],\n})\nexport class EditCustomerDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  customerDataForm: FormGroup;\n  primaryContactForm: FormGroup;\n  customer: Customer;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedState: string;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditCustomerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: EditCustomerDialogData,\n    private fb: FormBuilder,\n    private customerService: CustomerService,\n    private geoService: GeoService,\n    public notificationService: NotificationService\n  ) {\n    this.customer = this.data.customer;\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n\n    this.selectedState = this.customer.city.state_code;\n    this.geoService.fetchCitiesByState(this.customer.city.state_code);\n  }\n\n  private buildForms() {\n    this.customerDataForm = this.fb.group({\n      name: [this.customer.name, [Validators.required]],\n      address_line_1: [this.customer.address_line_1, [Validators.required]],\n      address_line_2: [this.customer.address_line_2 ?? \"\", []],\n      city_id: [this.customer.city.id, [Validators.required]],\n      zip: [this.customer.zip, [Validators.required,Validators.pattern(regexs.zip)]],\n      main_phone: [this.customer.main_phone, [Validators.required,Validators.pattern(regexs.numbers)]],\n      main_phone_extension: [this.customer.main_phone_extension,[Validators.pattern(regexs.numbers)]],\n      fax: [this.customer.fax,[Validators.pattern(regexs.numbers)]],\n    });\n\n    this.primaryContactForm = this.fb.group({\n      first_name: [this.customer.primary_contact.first_name, []],\n      last_name: [this.customer.primary_contact.last_name, []],\n      email: [this.customer.primary_contact.email, [, Validators.email]],\n      office_phone: [this.customer.primary_contact.office_phone, [Validators.pattern(regexs.numbers)]],\n      office_phone_extension: [this.customer.primary_contact.office_phone_extension,[Validators.pattern(regexs.numbers)]],\n      fax: [this.customer.primary_contact.fax,[Validators.pattern(regexs.numbers)]],\n      mobile_phone: [this.customer.primary_contact.mobile_phone, [Validators.pattern(regexs.numbers)]],\n      mobile_phone_extension: [this.customer.primary_contact.mobile_phone_extension,[Validators.pattern(regexs.numbers)]],\n    });\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.customerDataForm.controls.city_id.reset();\n  }\n\n  goBack(stepper: MatStepper) {\n    stepper.previous();\n  }\n\n  saveFirst(stepper: MatStepper) {\n    if (this.customerDataForm.invalid) {\n      return Object.values(this.customerDataForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      stepper.next();\n    }\n  }\n\n  onSubmit() {\n    if (this.primaryContactForm.invalid) {\n      return Object.values(this.primaryContactForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      //save customer\n      this.isLoading = true;\n      const body = {\n        ...this.customerDataForm.value,\n        primary_contact: this.primaryContactForm.value,\n      };\n      this.customerService.updateCustomer(body, this.customer.id).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Customer updated\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>Edit Customer</h3>\n  <mat-horizontal-stepper linear #stepper>\n    <!-- STEP 1 -->\n    <!-- customer data -->\n    <mat-step label=\"Customer data\" [completed]=\"customerDataForm.valid\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"customerDataForm\" (ngSubmit)=\"saveFirst(stepper)\">\n        <div class=\"col-12 mb-3\">\n          <label for=\"name\" class=\"text-dark text-base\">Customer name</label>\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"name\"\n            [class.is-invalid]=\"customerDataForm.controls.name.touched && customerDataForm.controls.name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address1\" class=\"text-dark text-base\">Address Line 1</label>\n          <input\n            id=\"address1\"\n            name=\"address1\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"address_line_1\"\n            [class.is-invalid]=\"customerDataForm.controls.address_line_1.touched && customerDataForm.controls.address_line_1.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">Address Line 2</label>\n          <input\n            id=\"address2\"\n            name=\"address2\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"address_line_2\"\n            [class.is-invalid]=\"customerDataForm.controls.address_line_2.touched && customerDataForm.controls.address_line_2.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">State</label>\n          <div class=\"custom-select-wrapper\">\n            <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n              <option selected value=\"\">Select state...</option>\n              <option *ngFor=\"let state of states\" [value]=\"state.code\" [selected]=\"state.code === customer.city.state_code\">\n                {{ state.name }}\n              </option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">City</label>\n          <div class=\"custom-select-wrapper\">\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"city_id\"\n              [class.is-invalid]=\"customerDataForm.controls.city_id.touched && customerDataForm.controls.city_id.invalid\"\n            >\n              <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\" [selected]=\"city.id === customer.city.id\">\n                {{ city.name }}\n              </option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"zip\" class=\"text-dark text-base\">Zip</label>\n          <input\n            id=\"zip\"\n            name=\"zip\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"zip\"\n            [class.is-invalid]=\"customerDataForm.controls.zip.touched && customerDataForm.controls.zip.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone\" class=\"text-dark text-base\">Main phone</label>\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"main_phone\"\n            [class.is-invalid]=\"customerDataForm.controls.main_phone.touched && customerDataForm.controls.main_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone_extension\" class=\"text-dark text-base\">Main phone extension</label>\n          <input\n            id=\"phone_extension\"\n            name=\"phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"main_phone_extension\"\n            [class.is-invalid]=\"\n              customerDataForm.controls.main_phone_extension.touched && customerDataForm.controls.main_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n          <input\n            id=\"fax\"\n            name=\"fax\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"fax\"\n            [class.is-invalid]=\"customerDataForm.controls.fax.touched && customerDataForm.controls.fax.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-primary\" type=\"submit\">Next</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n    <!-- STEP 2 -->\n    <!-- cutomer contact data -->\n    <mat-step label=\"Primary contact\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"primaryContactForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"col-6 mb-3\">\n          <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n          <input\n            id=\"first_name\"\n            name=\"first_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"first_name\"\n            [class.is-invalid]=\"primaryContactForm.controls.first_name.touched && primaryContactForm.controls.first_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-6 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n          <input\n            id=\"last_name\"\n            name=\"last_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"last_name\"\n            [class.is-invalid]=\"primaryContactForm.controls.last_name.touched && primaryContactForm.controls.last_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Email</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            formControlName=\"email\"\n            [class.is-invalid]=\"primaryContactForm.controls.email.touched && primaryContactForm.controls.email.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n          <input\n            id=\"office_phone\"\n            name=\"office_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone\"\n            [class.is-invalid]=\"primaryContactForm.controls.office_phone.touched && primaryContactForm.controls.office_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone_extension\" class=\"text-dark text-base\">Office phone extension</label>\n          <input\n            id=\"office_phone_extension\"\n            name=\"office_phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone_extension\"\n            [class.is-invalid]=\"\n              primaryContactForm.controls.office_phone_extension.touched && primaryContactForm.controls.office_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n          <input\n            id=\"fax\"\n            name=\"fax\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"fax\"\n            [class.is-invalid]=\"primaryContactForm.controls.fax.touched && primaryContactForm.controls.fax.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"mobile_phone\" class=\"text-dark text-base\">Mobile phone</label>\n          <input\n            id=\"mobile_phone\"\n            name=\"mobile_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"mobile_phone\"\n            [class.is-invalid]=\"primaryContactForm.controls.mobile_phone.touched && primaryContactForm.controls.mobile_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"mobile_phone_extension\" class=\"text-dark text-base\">Mobile phone extension</label>\n          <input\n            id=\"mobile_phone_extension\"\n            name=\"mobile_phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"mobile_phone_extension\"\n            [class.is-invalid]=\"\n              primaryContactForm.controls.mobile_phone_extension.touched && primaryContactForm.controls.mobile_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"goBack(stepper)\">Back</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n  </mat-horizontal-stepper>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { CompanyService } from \"src/app/business/services/company.service\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { Company } from \"src/app/business/models/company.models\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { AuthenticationService } from \"src/app/authentication/authentication.service\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.scss\"],\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  profileForm: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  company: Company;\n  selectedState: string;\n  isLoading = false;\n  isEditionAble = false;\n\n  constructor(\n    private companyService: CompanyService,\n    private fb: FormBuilder,\n    private geoService: GeoService,\n    public notificationService: NotificationService,\n    private router: Router,\n    private authService: AuthenticationService\n  ) {\n    this.isEditionAble = this.authService.isAdmin();\n    this.buildForm();\n    const sub = this.companyService.company.subscribe((data) => {\n      this.company = data;\n      if (data) {\n        this.loadFormData();\n      }\n    });\n    this.subscriptions.push(sub);\n  }\n\n  ngOnInit(): void {\n    if (!this.company) {\n      this.companyService.fetchCompany();\n    }\n\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  buildForm() {\n    this.profileForm = this.fb.group({\n      name: [{ value: this.company?.name || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      contact_name: [{ value: this.company?.contact_name || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      address_line_1: [{ value: this.company?.address_line_1 || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      address_line_2: [{ value: this.company?.address_line_2 || \"\", disabled: !this.isEditionAble }, []],\n      zip: [{ value: this.company?.zip || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      office_phone: [{ value: this.company?.office_phone || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      fax: [{ value: this.company?.fax || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      city: [{ value: this.company?.city.id || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      starting_invoice_number: [{ value: this.company?.starting_invoice_number || \"\", disabled: true }],\n    });\n  }\n\n  loadFormData() {\n    if (this.company) {\n      this.profileForm.setValue({\n        name: this.company.name,\n        contact_name: this.company.contact_name,\n        address_line_1: this.company.address_line_1,\n        address_line_2: this.company.address_line_2 ?? \"\",\n        zip: this.company.zip,\n        office_phone: this.company.office_phone ?? \"\",\n        fax: this.company.fax ?? \"\",\n        city: this.company.city.id,\n        starting_invoice_number: this.company.starting_invoice_number,\n      });\n      this.selectedState = this.company.city.state_code;\n      this.geoService.fetchCitiesByState(this.company.city.state_code);\n    }\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.profileForm.controls.city.reset();\n  }\n\n  onCancel() {\n    this.router.navigate([\"/\"]);\n  }\n\n  onSubmit() {\n    if (this.profileForm.invalid) {\n      return Object.values(this.profileForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const { starting_invoice_number, ...body } = this.profileForm.value;\n\n      this.companyService.updateCompany(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Profile updated\");\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"px-2 px-md-5 py-3\">\n  <div class=\"d-flex w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block content-title\">Company Profile</h1>\n  </div>\n\n  <div class=\"mb-4\">\n    <div class=\"w-100 border-primary-2 rounded-xl\">\n      <div class=\"w-100 p-3 bg-primary text-white font-bold\">Profile info</div>\n      <div class=\"w-100 p-3 loader-container\">\n        <div *ngIf=\"isLoading\" class=\"loader\">\n          <mat-spinner [diameter]=\"50\"></mat-spinner>\n        </div>\n        <form class=\"form-group row mt-4 profile-form\" [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"col-12 mb-3\">\n            <label for=\"name\" class=\"text-dark text-base\">Company name</label>\n            <input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"name\"\n              [class.is-invalid]=\"profileForm.controls.name.touched && profileForm.controls.name.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"contact_name\" class=\"text-dark text-base\">Company contact name</label>\n            <input\n              id=\"contact_name\"\n              name=\"contact_name\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"contact_name\"\n              [class.is-invalid]=\"profileForm.controls.contact_name.touched && profileForm.controls.contact_name.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"address_line_1\" class=\"text-dark text-base\">Address Line 1</label>\n            <input\n              id=\"address_line_1\"\n              name=\"address_line_1\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"address_line_1\"\n              [class.is-invalid]=\"profileForm.controls.address_line_1.touched && profileForm.controls.address_line_1.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"address_line_2\" class=\"text-dark text-base\">Address Line 2</label>\n            <input\n              id=\"address_line_2\"\n              name=\"address_line_2\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"address_line_2\"\n              [class.is-invalid]=\"profileForm.controls.address_line_2.touched && profileForm.controls.address_line_2.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"state\" class=\"text-dark text-base\">State</label>\n            <div class=\"custom-select-wrapper\">\n              <select id=\"state\" class=\"custom-select form-control\" (change)=\"onStateChange($event)\" [disabled]=\"!isEditionAble\">\n                <option selected value=\"\">Select state...</option>\n                <option *ngFor=\"let state of states\" [value]=\"state.code\" [selected]=\"state.code === company?.city.state_code\">\n                  {{ state.name }}\n                </option>\n              </select>\n              <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n            </div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"city\" class=\"text-dark text-base\">City</label>\n            <div class=\"custom-select-wrapper\">\n              <select\n                id=\"city\"\n                class=\"custom-select form-control\"\n                formControlName=\"city\"\n                [class.is-invalid]=\"profileForm.controls.city.touched && profileForm.controls.city.invalid\"\n              >\n                <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\">{{ city.name }}</option>\n              </select>\n              <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n            </div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"zip\" class=\"text-dark text-base\">Zip</label>\n            <input\n              id=\"zip\"\n              name=\"zip\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"zip\"\n              [class.is-invalid]=\"profileForm.controls.zip.touched && profileForm.controls.zip.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n            <input\n              id=\"fax\"\n              name=\"fax\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"fax\"\n              [class.is-invalid]=\"profileForm.controls.fax.touched && profileForm.controls.fax.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n            <input\n              id=\"office_phone\"\n              name=\"office_phone\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"office_phone\"\n              [class.is-invalid]=\"profileForm.controls.office_phone.touched && profileForm.controls.office_phone.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"starting_invoice_number\" class=\"text-dark text-base\">Starting invoice number</label>\n            <input\n              id=\"starting_invoice_number\"\n              name=\"starting_invoice_number\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"starting_invoice_number\"\n            />\n          </div>\n\n          <div *ngIf=\"isEditionAble\" class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\n            </div>\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-success\" type=\"submit\" [disabled]=\"!isEditionAble\">Save</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}
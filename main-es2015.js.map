{"version":3,"sources":["./src/app/core/layouts/layouts.service.ts","./src/app/core/side-menus/side-menus.service.ts","./src/app/core/custom-icons/custom-icons.service.ts","./src/app/app-color-palettes.ts","./src/app/shell/image-shell/image-shell.component.ts","./src/app/shell/image-shell/image-shell.component.html","./src/app/core/layouts/mobile/mobile-layout.component.ts","./src/app/core/layouts/mobile/mobile-layout.component.html","./src/app/business/services/company.service.ts","./src/app/business/services/vehicle.service.ts","./src/app/authentication/authentication.service.ts","./src/environments/environment.ts","./src/app/shell/aspect-ratio/aspect-ratio.component.ts","./src/app/shell/aspect-ratio/aspect-ratio.component.html","./src/app/shared/show-hide-password/show-hide-input.directive.ts","./src/app/core/responsive-breakpoints.service.ts","./src/app/core/side-navbar/side-navbar.component.ts","./src/app/core/side-navbar/side-navbar.component.html","./src/app/core/layouts/empty/empty-layout.component.ts","./src/app/core/layouts/empty/empty-layout.component.html","./src/app/core/state.service.ts","./src/app/core/top-navbar/top-navbar.component.ts","./src/app/core/top-navbar/top-navbar.component.html","./src/app/pipes/location.pipe.ts","./src/app/core/color-palettes/color-palettes.service.ts","./src/app/core/config/config.service.ts","./src/app/shared/dialogs/loader/loader-dialog.component.ts","./src/app/shared/dialogs/loader/loader-dialog.component.html","./src/app/shell/config/app-shell.config.ts","./src/app/shared/notification-template/notification-template.component.ts","./src/app/shared/notification-template/notification-template.component.html","./src/app/core/guards/auth.guard.ts","./src/app/shared/dialogs/confirm/confirm-dialog.component.ts","./src/app/shared/dialogs/confirm/confirm-dialog.component.html","./src/app/authentication/authentication.module.ts","./src/app/shared/shared.module.ts","./src/app/core/validators.service.ts","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/layouts/dynamic/dynamic-layout.component.ts","./src/app/core/layouts/dynamic/dynamic-layout.component.html","./src/app/business/state/invoice-state.service.ts","./src/app/app-layouts.ts","./src/app/app.module.ts","./src/app/shell/shell.module.ts","./src/app/shared/show-hide-password/show-hide-password.component.ts","./src/app/shared/show-hide-password/show-hide-password.component.html","./src/app/core/interceptors/auth.interceptor.ts","./src/app/core/layouts/option-b/option-b-layout.component.ts","./src/app/core/layouts/option-b/option-b-layout.component.html","./src/app/core/core.module.ts","./src/app/vehicle-report/vehicle-report.component.ts","./src/app/vehicle-report/vehicle-report.component.html","./src/app/app-routing.module.ts","./src/app/shared/alert-template/alert-template.component.ts","./src/app/shared/alert-template/alert-template.component.html","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/reset-password/reset-password.component.ts","./src/app/authentication/reset-password/reset-password.component.html","./src/app/business/state/global-state.service.ts","./src/app/core/side-menus/main-menu/main-menu.component.ts","./src/app/core/side-menus/main-menu/main-menu.component.html","./src/app/shell/text-shell/text-shell.component.ts","./src/app/shell/text-shell/text-shell.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { defaultLayout, availableLayouts, IAppLayout } from 'src/app/app-layouts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutsService {\n  previousLayout: IAppLayout = defaultLayout;\n  currentLayout: IAppLayout = defaultLayout;\n\n  public switchLayoutSubject: Subject<any> = new Subject();\n\n  constructor() { }\n\n  switchLayout(selectedLayoutName: string): void {\n    selectedLayoutName = (selectedLayoutName) ? selectedLayoutName : this.currentLayout.name;\n\n    if (selectedLayoutName && selectedLayoutName !== this.currentLayout.name) {\n      const selectedLayout: IAppLayout = availableLayouts.find((layout: IAppLayout) => {\n        return layout.name === selectedLayoutName;\n      });\n\n      if (selectedLayout) {\n        this.previousLayout = this.currentLayout;\n        this.currentLayout = selectedLayout;\n\n        this.switchLayoutSubject.next(selectedLayout.name);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SideMenusService {\n  public toggleMainMenuSubject: Subject<any> = new Subject();\n\n  public toggleAltMenuSubject: Subject<any> = new Subject();\n  public renderAltMenuSubject: Subject<any> = new Subject();\n\n  public changeMainMenuModeSubject: Subject<any> = new Subject();\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomIconsService {\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {}\n\n  //TODO: REVISAR\n  \n  init(): void {\n    // register custom icons\n    this.registerIcons(\n      ['angular-logo-2', 'angular-logo'], '/assets/icons/logos/');\n    this.registerIcons(\n      ['dashboards', 'forms', 'components', 'charts', 'tables', 'utilities'], '/assets/icons/sidemenu/');\n    this.registerIcons(\n      ['notifications', 'settings', 'search'], '/assets/icons/navbar/');\n    this.registerIcons(\n      ['calendar', 'arrow-up', 'arrow-down', 'half-arrow-down', 'drag'], '/assets/icons/dashboards/crm/');\n    this.registerIcons(\n      ['sales', 'earnings', 'commissions-paid', 'orders', 'calendar', 'desktop', 'tablet', 'mobile', 'watch'],\n      '/assets/icons/dashboards/ecommerce/'\n    );\n    this.registerIcons(\n      ['upload', 'image'], '/assets/icons/utilities/');\n  }\n\n  registerIcons(icons: Array<string>, path: string) {\n    icons.forEach((icon) => {\n      this.matIconRegistry.addSvgIcon(\n        icon,\n        this.domSanitizer.bypassSecurityTrustResourceUrl(path + icon + '.svg')\n      );\n    });\n  }\n}\n","interface IPalette {\n  name: string;\n}\n\nconst availablePalettes: Array<IPalette> = [\n  {\n    name: 'palette-1'\n  },\n  {\n    name: 'palette-2'\n  }\n];\n\n// select the default color palette\nconst defaultPalette: IPalette = availablePalettes.find((palette: IPalette) => {\n  return palette.name === 'palette-1';\n  // return palette.name === 'palette-2';\n});\n\nexport { IPalette, availablePalettes, defaultPalette };\n","import { Component, Input, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { AppShellConfig } from '../config/app-shell.config';\n\n@Component({\n  selector: 'cc-image-shell',\n  templateUrl: './image-shell.component.html',\n  styleUrls: ['./image-shell.component.scss']\n})\nexport class ImageShellComponent {\n  // To debug shell styles, change configuration in the assets/app-shell.config.json file\n  private debugMode = (AppShellConfig.settings && AppShellConfig.settings.debug) ? AppShellConfig.settings.debug : false;\n\n  // tslint:disable-next-line:variable-name\n  _src = '';\n  // tslint:disable-next-line:variable-name\n  _alt = '';\n  // tslint:disable-next-line:variable-name\n  _mode = '';\n\n  @HostBinding('class.img-loaded') imageLoaded = false;\n\n  @HostBinding('style.backgroundImage') backgroundImage: string;\n\n  @HostBinding('attr.mode')\n  @Input()\n  set mode(val: string) {\n    this._mode = (val !== undefined && val !== null) ? val : '';\n  }\n  get mode(): string {\n    return this._mode;\n  }\n\n  @Input()\n  set src(val: string) {\n    if (!this.debugMode) {\n      this._src = (val !== undefined && val !== null) ? val : '';\n    }\n\n    if (this._mode === 'cover') {\n      // Unset the background-image\n      this.backgroundImage = 'unset';\n    }\n\n    // Show loading indicator\n    // When using SSR (Server Side Rendering), avoid the loading animation while the image resource is being loaded\n    if (isPlatformServer(this.platformId)) {\n      this.imageLoaded = true;\n    } else {\n      this.imageLoaded = false;\n    }\n  }\n\n  @Input()\n  set alt(val: string) {\n    this._alt = (val !== undefined && val !== null) ? val : '';\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId\n  ) {}\n\n  _imageLoaded() {\n    this.imageLoaded = true;\n\n    // If it's a cover image then set the background-image property accordingly\n    if (this._mode === 'cover') {\n      this.backgroundImage = 'url(' + this._src + ')';\n    }\n  }\n}\n","<i class=\"spinner fas fa-circle-notch fa-spin fa-3x fa-fw\"></i>\n<img class=\"inner-img\" [src]=\"_src\" [alt]=\"_alt\" (load)=\"_imageLoaded()\"/>\n<ng-content *ngIf=\"_mode === 'cover'\"></ng-content>\n","import { Component, OnInit, AfterViewInit, OnDestroy, HostBinding, ViewChild, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-mobile-layout',\n  templateUrl: './mobile-layout.component.html',\n  styleUrls: ['./mobile-layout.component.scss']\n})\nexport class MobileLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-mobile') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n\n    // Mobile layout main menu always starts closed and with 'push' mode\n    this.mainSidenavOpened = false;\n    this.mainSideMenuMode = 'push';\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout Mobile] - error', error);\n      },\n      () => {\n        console.log('toggleMainMenu [Layout Mobile] - complete');\n      }\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout Mobile] - error', error);\n      },\n      () => {\n        console.log('toggleAltMenu [Layout Mobile] - complete');\n      }\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout Mobile] - error', error);\n      },\n      () => {\n        console.log('changeMainMenuModeSubject [Layout Mobile] - complete');\n      }\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"show-branding use-active-item-line-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <app-top-navbar class=\"admin-top-navbar show-bare-branding\" mode=\"condensed\"></app-top-navbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { format } from \"date-fns/esm\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { Company, CompanyBody, DashboardInfo, Report } from \"../models/company.models\";\nimport { Invoice } from \"../models/invoice.models\";\nimport { User } from \"../models/user.models\";\nimport { GlobalStateService } from \"../state/global-state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CompanyService {\n  private baseUrl = environment.apiUrl;\n\n  public company: BehaviorSubject<Company> = new BehaviorSubject(null);\n  public dashboardInfo: BehaviorSubject<DashboardInfo> = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient, private globalState: GlobalStateService) {}\n\n  fetchCompany() {\n    this.http.get<Company>(`${this.baseUrl}/company/admin`).subscribe((data) => {\n      this.company.next(data);\n      this.globalState.setUserCompany(data);\n    });\n  }\n\n  fetchDashboardInfo(time: \"week\" | \"month\") {\n    this.http.get<DashboardInfo>(`${this.baseUrl}/company/admin/dashboardInfo?time=${time}`).subscribe((data) => {\n      this.dashboardInfo.next(data);\n    });\n  }\n\n  getReport(driverId: string, dateFrom: string, dateTo: string) {\n    return this.http.get<Report>(`${this.baseUrl}/company/admin/report/${driverId}?dateFrom=${dateFrom}&dateTo=${dateTo}`);\n  }\n\n  getReportPdf(driver: User, dateFrom: string, dateTo: string) {\n    const realDateTo = new Date(dateTo).getTime() > Date.now() ? Date.now() : new Date(dateTo)\n    const name = `${driver.first_name}_${driver.last_name}_${format(new Date(dateFrom), 'MM-dd-yyyy')}_${format(\n      new Date(realDateTo),\n      \"MM-dd-yyyy\"\n    )}`;\n    this.http\n      .post(\n        `${this.baseUrl}/company/admin/report/${driver.id}/pdf?dateFrom=${dateFrom}&dateTo=${dateTo}`,\n        {},\n        {\n          responseType: \"arraybuffer\",\n        }\n      )\n      .subscribe((data: any) => {\n        const blob = new Blob([data], { type: \"application/pdf\" });\n        const url = window.URL.createObjectURL(blob);\n        //window.open(url);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", name + \".pdf\");\n        document.body.appendChild(link);\n        link.click();\n      });\n  }\n\n  search(body: any) {\n    return this.http.post<Invoice[]>(`${this.baseUrl}/company/admin/search`, body);\n  }\n\n  updateCompany(body: CompanyBody) {\n    return this.http.put<Company>(`${this.baseUrl}/company/admin`, body).pipe(\n      map((res) => {\n        this.fetchCompany();\n        return res;\n      })\n    );\n  }\n\n  updateInvoiceNumber(body: { starting_invoice_number: string }) {\n    return this.http.put<Company>(`${this.baseUrl}/company/admin/startInvoiceNumber`, body).pipe(\n      map((res) => {\n        this.fetchCompany();\n        return res;\n      })\n    );\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { VinData } from \"../models/vehicle.models\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class VehicleService {\n  private baseUrl = environment.apiUrl;\n  private timerId: any;\n\n  years: number[] = [];\n  makes: string[] = MAKES;\n\n  constructor(private http: HttpClient) {\n    this.setYears();\n  }\n\n  searchVin(vin: string): Promise<VinData> {\n    const wait = 600;\n    clearTimeout(this.timerId);\n\n    return new Promise((resolve, reject) => {\n      this.timerId = setTimeout(() => {\n        this.http\n          .get<VinData>(`${this.baseUrl}/general/vin/${vin}`)\n          .pipe(\n            map((data) => {\n              if (!data.valid) {\n                throw new Error(\"Invalid vin\");\n              }\n              return data;\n            })\n          )\n          .subscribe(\n            (data) => resolve(data),\n            (err) => reject(err)\n          );\n      }, wait);\n    });\n  }\n\n  getModelsByMake(make: string): Promise<string[]> {\n    return new Promise((resolve, reject) => {\n      this.http.get<string[]>(`${this.baseUrl}/general/vehicleModels/${make}`).subscribe(\n        (data) => resolve(data),\n        (err) => reject(err)\n      );\n    });\n  }\n\n  setYears() {\n    const currentYear = new Date().getFullYear();\n    for (let i = currentYear; i >= 1950; i--) {\n      this.years.push(i);\n    }\n  }\n\n\n  getReportPdf(invoiceId: string, vehicleId: string) {\n    this.http\n      .get(\n        `${this.baseUrl}/general/vehicleReport/${invoiceId}/${vehicleId}`,\n        {\n          responseType: \"arraybuffer\",\n        }\n      )\n      .subscribe((data: any) => {\n        const blob = new Blob([data], { type: \"application/pdf\" });\n        const url = window.URL.createObjectURL(blob);\n        location.replace(url)\n        // const link = document.createElement(\"a\");\n        // link.href = url;\n        // link.setAttribute(\"download\", name + \".pdf\");\n        // document.body.appendChild(link);\n        // link.click();\n      });\n  }\n}\n\nvar MAKES = [\n  \"AMC\",\n  \"Acura\",\n  \"Alfa Romeo\",\n  \"Ariel\",\n  \"Aston Martin\",\n  \"Audi\",\n  \"Austin\",\n  \"Austin Healey\",\n  \"BMW\",\n  \"Bentley\",\n  \"Bugatti\",\n  \"Buick\",\n  \"Cadillac\",\n  \"Chevrolet\",\n  \"Chrysler\",\n  \"Citroën\",\n  \"Cord\",\n  \"Daewoo\",\n  \"Daihatsu\",\n  \"Datsun\",\n  \"De Tomaso\",\n  \"DeLorean\",\n  \"DeSoto\",\n  \"Dodge\",\n  \"Eagle\",\n  \"Edsel\",\n  \"Ferrari\",\n  \"Fiat\",\n  \"Fisker\",\n  \"Ford\",\n  \"GMC\",\n  \"Genesis\",\n  \"Geo\",\n  \"Honda\",\n  \"Hudson\",\n  \"Hummer\",\n  \"Hyundai\",\n  \"Infiniti\",\n  \"International Harvester\",\n  \"Isuzu\",\n  \"Jaguar\",\n  \"Jeep\",\n  \"Kia\",\n  \"Koenigsegg\",\n  \"Lamborghini\",\n  \"Lancia\",\n  \"Land Rover\",\n  \"Lexus\",\n  \"Lincoln\",\n  \"Lotus\",\n  \"MG\",\n  \"Maserati\",\n  \"Maybach\",\n  \"Mazda\",\n  \"McLaren\",\n  \"Mercedes-Benz\",\n  \"Mercury\",\n  \"Mini\",\n  \"Mitsubishi\",\n  \"Morgan\",\n  \"Morris\",\n  \"Nash\",\n  \"Nissan\",\n  \"Oldsmobile\",\n  \"Opel\",\n  \"Other Makes\",\n  \"Packard\",\n  \"Peugeot\",\n  \"Plymouth\",\n  \"Pontiac\",\n  \"Porsche\",\n  \"Ram\",\n  \"Renault\",\n  \"Replica/Kit Makes\",\n  \"Rolls-Royce\",\n  \"Saab\",\n  \"Saturn\",\n  \"Scion\",\n  \"Shelby\",\n  \"Skoda\",\n  \"Smart\",\n  \"Studebaker\",\n  \"Subaru\",\n  \"Sunbeam\",\n  \"Suzuki\",\n  \"Tesla\",\n  \"Toyota\",\n  \"Triumph\",\n  \"Volkswagen\",\n  \"Volvo\",\n  \"Willys\",\n];\n","import { isPlatformBrowser } from \"@angular/common\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Inject, Injectable, PLATFORM_ID } from \"@angular/core\";\nimport { BehaviorSubject, fromEvent, Observable, of } from \"rxjs\";\nimport { catchError, map, tap } from \"rxjs/operators\";\nimport { ConfigService } from \"../core/config/config.service\";\nimport { LoginResponse, Tokens, UserAuth } from \"./models/auth-models\";\nimport jwt_decode from \"jwt-decode\";\nimport { InvoicesStateService } from \"../business/state/invoice-state.service\";\nimport { GlobalStateService } from \"../business/state/global-state.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthenticationService {\n  private baseUrl = environment.apiUrl;\n  public static USER_PROFILE_KEY = \"user\";\n  public static TOKEN_KEY = \"access_token\";\n  public static REFRESH_TOKEN_KEY = \"refresh_token\";\n\n  private tokens: Tokens;\n  private refreshTokenTimer: any;\n\n  loggedUserSubject: BehaviorSubject<UserAuth>;\n  loggedUser: UserAuth;\n\n  constructor(\n    private http: HttpClient,\n    @Inject(PLATFORM_ID) private platformId: any,\n    private invoiceState: InvoicesStateService,\n    private globalState: GlobalStateService\n  ) {\n    const userStorage = JSON.parse(localStorage.getItem(\"user\"));\n    if (userStorage?.id) {\n      this.loggedUser = userStorage;\n    }\n    this.loggedUserSubject = new BehaviorSubject(this.loggedUser);\n\n    this.initRefreshToken();\n  }\n\n  // isAuthenticated() {\n  //   return this.loggedUserSubject.asObservable();\n  // }\n\n  initRefreshToken() {\n    if (this.isLoggedIn()) {\n      const token = this.getAccessToken();\n      if (token) {\n        const { exp } = jwt_decode(token) as any;\n        const refreshIn = exp - Date.now() / 1000 - 30;\n        this.refreshTokenTimer = setTimeout(() => {\n          this.refreshToken();\n        }, refreshIn * 1000);\n      }\n    } else {\n      this.logout();\n    }\n  }\n\n  isLoggedIn(): boolean {\n    const token = this.getAccessToken();\n    if (!token) return false;\n    try {\n      const { roles, exp } = jwt_decode(token) as any;\n      const expired = Date.now() >= exp * 1000;\n      return (roles.includes(\"ADMIN\") || roles.includes(\"MANAGER\")) && !expired;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  isAdmin(): boolean {\n    const token = this.getAccessToken();\n    if (!token) return false;\n    try {\n      const { roles } = jwt_decode(token) as any;\n      return roles.includes(\"ADMIN\");\n    } catch (error) {\n      return false;\n    }\n  }\n\n  isManager(): boolean {\n    const token = this.getAccessToken();\n    if (!token) return false;\n    try {\n      const { roles } = jwt_decode(token) as any;\n      return roles.includes(\"MANAGER\");\n    } catch (error) {\n      return false;\n    }\n  }\n\n  setUser({ user, tokens }: LoginResponse) {\n    localStorage.setItem(AuthenticationService.TOKEN_KEY, tokens.access.token);\n    localStorage.setItem(AuthenticationService.REFRESH_TOKEN_KEY, tokens.refresh.token);\n    localStorage.setItem(AuthenticationService.USER_PROFILE_KEY, JSON.stringify(user));\n    this.tokens = tokens;\n    this.loggedUserSubject.next(user);\n    this.initRefreshToken();\n    //this.startRefreshTokenTimer();\n  }\n\n  signup(data: any): Observable<any> {\n    // your signup logic should go here\n    this.loggedUserSubject.next(this.loggedUser);\n    return of(true);\n  }\n\n  signin(email: string, password: string): Observable<LoginResponse> {\n    return this.http\n      .post<LoginResponse>(\n        `${ConfigService.API_URL}/auth/login`,\n        { email, password },\n        {\n          headers: new HttpHeaders({\n            \"Content-Type\": \"application/json\",\n          }),\n        }\n      )\n      .pipe(\n        //map((resp) => resp),\n        tap((res) => {\n          this.setUser(res);\n        }),\n        catchError((error) => {\n          console.log(\"Error!: \", error);\n          throw error;\n        })\n      );\n  }\n\n  refreshToken() {\n    //console.log(\"Refreshing\", new Date());\n    const refreshToken = this.getRefreshToken();\n    this.http\n      .post<Tokens>(\n        `${ConfigService.API_URL}/auth/refresh-tokens`,\n        { refreshToken },\n        {\n          headers: new HttpHeaders({\n            \"Content-Type\": \"application/json\",\n          }),\n        }\n      )\n      .pipe(\n        tap((res) => {\n          localStorage.setItem(AuthenticationService.TOKEN_KEY, res.access.token);\n          localStorage.setItem(AuthenticationService.REFRESH_TOKEN_KEY, res.refresh.token);\n          this.initRefreshToken();\n        }),\n        catchError((error) => {\n          console.log(\"Error!: \", error);\n          throw error;\n        })\n      )\n      .subscribe();\n  }\n\n  logout(): Observable<any> {\n    this.loggedUser = null;\n    this.deleteUser();\n    this.loggedUserSubject.next(null);\n    this.invoiceState.resetState();\n    this.globalState.resetState();\n    return of(true);\n  }\n\n  getAccessToken(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      return localStorage.getItem(AuthenticationService.TOKEN_KEY);\n    } else {\n      return null;\n    }\n  }\n\n  getRefreshToken(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      return localStorage.getItem(AuthenticationService.REFRESH_TOKEN_KEY);\n    } else {\n      return null;\n    }\n  }\n\n  recoverPassword(email: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}/auth/forgot-password`, { email });\n  }\n\n  resetPassword(password: string, token: string): Observable<any> {\n    return this.http.post(`${this.baseUrl}/auth/reset-password?token=${token}`, { password });\n  }\n\n  private deleteUser() {\n    localStorage.removeItem(AuthenticationService.TOKEN_KEY);\n    localStorage.removeItem(AuthenticationService.REFRESH_TOKEN_KEY);\n    localStorage.removeItem(AuthenticationService.USER_PROFILE_KEY);\n  }\n\n  // private bindActions() {\n  //   this.lastActionTick = 0;\n  //   this.subscribeToDocumentEvent(\"mousemove\");\n  //   this.subscribeToDocumentEvent(\"keypress\");\n  //   this.subscribeToDocumentEvent(\"DOMMouseScroll\");\n  //   this.subscribeToDocumentEvent(\"mousewheel\");\n  //   this.subscribeToDocumentEvent(\"touchmove\");\n  //   this.subscribeToDocumentEvent(\"MSPointerMove\");\n  // }\n\n  // private subscribeToDocumentEvent(action: string) {\n  //   if (this.documentSubs[action]) {\n  //     this.documentSubs[action].unsubscribe();\n  //   }\n\n  //   this.documentSubs[action] = fromEvent(document, action).subscribe(() => {\n  //     this.lastActionTick = 0;\n  //   });\n  // }\n\n  // private unsuscribeAllDocument() {\n  //   Object.keys(this.documentSubs).forEach((key) => {\n  //     this.documentSubs[key].unsubscribe();\n  //     delete this.documentSubs[key];\n  //   });\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //apiUrl: \"http://ec2-34-211-98-227.us-west-2.compute.amazonaws.com:3000/v1\",\n  apiUrl: 'https://api-v2.vinbilling.net/v1'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'cc-aspect-ratio',\n  templateUrl: './aspect-ratio.component.html',\n  styleUrls: ['./aspect-ratio.component.scss']\n})\nexport class AspectRatioComponent {\n  @HostBinding('style.padding') ratioPadding = '0px';\n\n  @Input()\n  set ratio(ratio: { w: number, h: number }) {\n    ratio = (ratio !== undefined && ratio !== null) ? ratio : {w: 1, h: 1};\n\n    const heightRatio = (ratio.h / ratio.w * 100) + '%';\n\n    // Conserve aspect ratio (see: http://stackoverflow.com/a/10441480/1116959)\n    this.ratioPadding = '0px 0px ' + heightRatio + ' 0px';\n  }\n\n  constructor() { }\n}\n","<div class=\"content-wrapper\">\n  <ng-content></ng-content>\n</div>\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appShowHideInput]'\n})\nexport class ShowHideInputDirective {\n\n  constructor() {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponsiveBreakpointsService {\n  public screenSizeChangeSubject: ReplaySubject<any> = new ReplaySubject(1);\n  public currentScreenSize: string;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver\n  ) {\n    const isSmallScreen = this.breakpointObserver.isMatched(\n      [Breakpoints.XSmall, Breakpoints.Small]\n    );\n    const isMediumScreen = this.breakpointObserver.isMatched(\n      [Breakpoints.Medium]\n    );\n\n    this.currentScreenSize = (isSmallScreen) ? 'small' : (isMediumScreen) ? 'medium' : 'large';\n\n    // Use Angular CDK Breakpoint Observer to detect changes on the screen size\n    this.breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge\n    ]).subscribe(result => {\n      if (result.matches) {\n        if (result.breakpoints[Breakpoints.XSmall] || result.breakpoints[Breakpoints.Small]) {\n          this.screenSizeChangeSubject.next('small');\n        }\n\n        if (result.breakpoints[Breakpoints.Medium]) {\n          this.screenSizeChangeSubject.next('medium');\n        }\n\n        if (result.breakpoints[Breakpoints.Large] || result.breakpoints[Breakpoints.XLarge]) {\n          this.screenSizeChangeSubject.next('large');\n        }\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SideMenusService } from '../side-menus/side-menus.service';\nimport { UserAuth } from 'src/app/authentication/models/auth-models';\nimport { AuthenticationService } from 'src/app/authentication/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-side-navbar',\n  templateUrl: './side-navbar.component.html',\n  styleUrls: [\n    './styles/side-navbar.component.scss'\n  ]\n})\nexport class SideNavbarComponent implements OnInit {\n  loggedUser: UserAuth = null;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private authenticationService: AuthenticationService,\n    private router: Router\n  ) {\n    this.authenticationService.loggedUserSubject.subscribe({\n      next: (loggedUser) => {\n        this.loggedUser = loggedUser;\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authenticationService.logout().subscribe(\n      () => this.router.navigate(['authentication/signin'])\n    );\n  }\n\n  toggleAltMenu(): void {\n    this.sideMenusService.toggleAltMenuSubject.next('toggle');\n  }\n\n  toggleSettingsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('settings');\n    this.toggleAltMenu();\n  }\n\n  toggleNotificationsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('notifications');\n    this.toggleAltMenu();\n  }\n\n  toggleSearchMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('search');\n    this.toggleAltMenu();\n  }\n}\n","<div class=\"navbar-branding\">\n  <mat-icon class=\"brand-logo\" svgIcon=\"angular-logo\"></mat-icon>\n</div>\n<div class=\"navbar-actions\">\n  <button type=\"button\" class=\"action-button btn btn-link\" (click)=\"toggleSettingsMenu()\">\n    <mat-icon class=\"navbar-icons\" svgIcon=\"settings\"></mat-icon>\n  </button>\n  <button type=\"button\" class=\"action-button btn btn-link\" (click)=\"toggleNotificationsMenu()\">\n    <mat-icon class=\"navbar-icons\" svgIcon=\"notifications\"></mat-icon>\n  </button>\n  <button type=\"button\" class=\"action-button btn btn-link\" (click)=\"toggleSearchMenu()\">\n    <mat-icon class=\"navbar-icons\" svgIcon=\"search\"></mat-icon>\n  </button>\n</div>\n<div class=\"navbar-user\">\n  <div ngbDropdown class=\"user-actions-dropdown\" placement=\"top-left\" display=\"static\">\n    <button class=\"user-action-toggle-btn btn btn-link dropright\" id=\"accountMenu\" ngbDropdownToggle>\n      <div class=\"user-image-wrapper\">\n        <cc-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <cc-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"loggedUser?.image\" [alt]=\"'user image'\"></cc-image-shell>\n        </cc-aspect-ratio>\n      </div>\n    </button>\n    <div ngbDropdownMenu aria-labelledby=\"accountMenu\" class=\"dropdown-menu-left\">\n      <a class=\"btn btn-link\" ngbDropdownItem [routerLink]=\"['/forms/form-layouts']\">Account</a>\n      <button class=\"btn btn-link\" ngbDropdownItem (click)=\"logout()\">Log out</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-layout',\n  templateUrl: './empty-layout.component.html',\n  styleUrls: ['./empty-layout.component.scss']\n})\nexport class EmptyLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { distinctUntilChanged, map } from \"rxjs/operators\";\n\nexport class StateService<T> {\n  private initialState;\n  private state$: BehaviorSubject<T>;\n  protected get state(): T {\n    return this.state$.getValue();\n  }\n\n  constructor(initialState: T) {\n    this.state$ = new BehaviorSubject<T>(initialState);\n    this.initialState = initialState;\n  }\n\n  protected select<K>(mapFn: (state: T) => K): Observable<K> {\n    return this.state$.asObservable().pipe(\n      map((state: T) => mapFn(state)),\n      distinctUntilChanged()\n    );\n  }\n\n  protected setState(newState: Partial<T>) {\n    this.state$.next({\n      ...this.state,\n      ...newState,\n    });\n  }\n\n  resetState() {\n    this.state$.next(this.initialState);\n  }\n}\n","import { Component, OnInit, HostBinding, Input } from \"@angular/core\";\nimport { SideMenusService } from \"../side-menus/side-menus.service\";\nimport { UserAuth } from \"src/app/authentication/models/auth-models\";\nimport { AuthenticationService } from \"src/app/authentication/authentication.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-top-navbar\",\n  templateUrl: \"./top-navbar.component.html\",\n  styleUrls: [\"./styles/top-navbar.component.scss\"],\n})\nexport class TopNavbarComponent implements OnInit {\n  loggedUser: UserAuth = null;\n\n  // tslint:disable-next-line:variable-name\n  _mode = \"expanded\";\n\n  @HostBinding(\"attr.mode\")\n  @Input()\n  set mode(val: string) {\n    this._mode = val !== undefined && val !== null ? val : \"expanded\";\n  }\n  get mode(): string {\n    return this._mode;\n  }\n\n  constructor(private sideMenusService: SideMenusService, private authenticationService: AuthenticationService, private router: Router) {\n    this.authenticationService.loggedUserSubject.subscribe((loggedUser) => (this.loggedUser = loggedUser));\n  }\n\n  ngOnInit() {}\n\n  logout() {\n    this.authenticationService.logout().subscribe(() => this.router.navigate([\"auth/signin\"]));\n  }\n\n  toggleMainMenu(): void {\n    this.sideMenusService.toggleMainMenuSubject.next(\"toggle\");\n  }\n\n  toggleAltMenu(): void {\n    this.sideMenusService.toggleAltMenuSubject.next(\"toggle\");\n  }\n\n  toggleSettingsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next(\"notifications\");\n    this.toggleAltMenu();\n  }\n\n  toggleNotificationsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next(\"notifications\");\n    this.toggleAltMenu();\n  }\n}\n","<!-- Conditional template Outlet (see: https://stackoverflow.com/a/52448001/1116959) -->\n\n<!-- DESKTOP -->\n\n  <mat-toolbar class=\"top-navbar-toolbar\">\n    <mat-toolbar-row>\n      <div class=\"navbar-branding\">\n        <mat-icon class=\"brand-logo\" svgIcon=\"angular-logo-2\"></mat-icon>\n        <button class=\"btn toggle-sidenav-btn\" type=\"button\" (click)=\"toggleMainMenu()\">\n          <i class=\"fa fa-bars\"></i>\n        </button>\n      </div>\n      <div class=\"navbar-controls\">\n\n        <div style=\"flex-grow: 1;\"></div>\n        <!-- account -->\n        <div class=\"navbar-user\">\n          <!-- <div class=\"user-image-wrapper\">\n            <cc-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <cc-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"loggedUser?.image\" [alt]=\"'user image'\"></cc-image-shell>\n            </cc-aspect-ratio>\n          </div> -->\n          <div class=\"user-avatar\">\n            {{ (loggedUser?.first_name?.charAt(0) + loggedUser?.last_name?.charAt(0))?.toUpperCase() }}\n          </div>\n          <div ngbDropdown class=\"user-actions-dropdown\" placement=\"bottom-right\" display=\"static\">\n            <button class=\"user-action-toggle-btn btn btn-link\" id=\"accountMenu\" ngbDropdownToggle>\n              <span class=\"user-name\">\n                <cc-text-shell\n                  [data]=\"loggedUser?.first_name ? loggedUser?.first_name.concat(' ').concat(loggedUser?.last_name) : null\"\n                ></cc-text-shell>\n              </span>\n            </button>\n            <div ngbDropdownMenu aria-labelledby=\"accountMenu\" class=\"dropdown-menu-right\">\n              <a class=\"btn btn-link\" ngbDropdownItem [routerLink]=\"['/general/profile']\">Profile</a>\n              <a class=\"btn btn-link\" ngbDropdownItem [routerLink]=\"['/general/change-password']\">Change password</a>\n              <!-- <a class=\"btn btn-link\" ngbDropdownItem [routerLink]=\"['/']\">Billing</a> -->\n              <button class=\"btn btn-link\" ngbDropdownItem (click)=\"logout()\">Log out</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { City } from \"../business/models/geo.models\";\n\n//return string with name og city and state code\n\n@Pipe({\n  name: \"location\",\n})\nexport class LocationPipe implements PipeTransform {\n  transform(value: City, ...args: unknown[]): string {\n    return `${value?.name}, ${value?.state_code}`;\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { defaultPalette, IPalette, availablePalettes } from 'src/app/app-color-palettes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorPalettesService {\n  currentPalette: IPalette = defaultPalette;\n\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  init(): void {\n    this.setPalette(defaultPalette.name);\n  }\n\n  setPalette(paletteName: string): void {\n    // Set default theme\n    const selectedPalette: IPalette = availablePalettes.find((palette: IPalette) => {\n      return palette.name === paletteName;\n    });\n\n    if (selectedPalette) {\n      const rootElement = this.document.documentElement;\n\n      if (rootElement) {\n        rootElement.setAttribute('color-palette', selectedPalette.name);\n      }\n\n      this.currentPalette = selectedPalette;\n    }\n  }\n}\n","import { environment } from \"src/environments/environment\";\n\nexport class ConfigService {\n  constructor() {}\n\n  public static API_URL = environment.apiUrl;\n  \n}\n","import { Component, Inject } from '@angular/core'\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\n\nexport interface LoaderDialogComponentData {\n  setDialogRef: (dialogRef: MatDialogRef<LoaderDialogComponent>) => any\n}\n\n@Component({\n  selector: 'app-loader-dialog',\n  templateUrl: './loader-dialog.component.html',\n  styleUrls: ['./loader-dialog.component.scss'],\n})\nexport class LoaderDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<LoaderDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: LoaderDialogComponentData\n  ) {\n    this.data.setDialogRef(this.dialogRef)\n  }\n}\n","<div class=\"dialog-w\">\n  <div class=\"d-flex flex-column align-items-center justify-content-center py-4\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n    <div class=\"mt-4\">Loading...</div>\n  </div>\n</div>\n","// Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\nimport { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { tap } from 'rxjs/operators';\nimport { IAppShellConfig } from './config.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppShellConfig {\n  static settings: IAppShellConfig;\n\n  constructor(private http: HttpClient) { }\n\n  // Simplified version from: https://stackoverflow.com/a/49707898/1116959\n  load(): Promise<void | IAppShellConfig> {\n    const configFile = '/assets/config/app-shell.config' + ((!isDevMode()) ? '.prod' : '') + '.json';\n\n    return this.http.get<IAppShellConfig>(configFile).pipe(\n      tap(configSettings => {\n        AppShellConfig.settings = configSettings;\n      })\n    )\n    .toPromise()\n    .catch((error: any) => {\n      console.log(`Could not load file '${configFile}'`, error);\n    });\n  }\n}\n","import { Component, Inject, Input, OnInit, Optional } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-notification-template',\n  templateUrl: './notification-template.component.html',\n  styleUrls: ['./notification-template.component.scss']\n})\n\nexport class NotificationTemplateComponent implements OnInit {\n  @Input() message: string;\n  @Input() text: string;\n  @Input() icon: string;\n  @Input() type = false;\n  @Input() dismissible = false;\n\n  baseClass = 'notification alert';\n  classes = '';\n\n  /** The instance of the component making up the content of the snack bar. */\n  snackBarRef: MatSnackBarRef<NotificationTemplateComponent>;\n\n  constructor(@Optional() @Inject(MAT_SNACK_BAR_DATA) public data: any) {\n    if (data) {\n      this.message = data.message;\n      this.icon = data.icon;\n      this.type = data.type;\n      this.dismissible = data.dismissible;\n    }\n  }\n\n  /** Dismisses the snack bar. */\n  dismiss(): void {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n\n  ngOnInit(): void {\n    this.classes = this.baseClass;\n    this.classes += (this.dismissible ? ' alert-dismissible' :  '');\n    this.classes += (this.type ? ' alert-' + this.type :  '');\n  }\n\n}\n","<ng-container>\n  <div class=\"custom-notification-wrapper\">\n    <div role=\"alert\" [ngClass]=\"classes\">\n      <i *ngIf=\"icon\" [ngClass]=\"'notification-icon fas fa-' + icon\"></i>\n      <span *ngIf=\"message\" class=\"notification-line\">{{ message }}</span>\n      <button type=\"button\" class=\"close\" *ngIf=\"dismissible\" (click)=\"dismiss()\">\n        <i class=\"fas fa-times\"></i>\n      </button>\n      <p *ngIf=\"text\" class=\"notification-text\">{{ text }}</p>\n    </div>\n  </div>\n</ng-container>\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from \"@angular/router\";\r\nimport { AuthenticationService } from \"src/app/authentication/authentication.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanLoad {\r\n  constructor(private router: Router, private authService: AuthenticationService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.authService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n\r\n    this.authService.logout()\r\n    this.router.navigate([\"/auth/signin\"], { queryParams: { returnUrl: state.url } });\r\n    return false;\r\n  }\r\n\r\n  canLoad() {\r\n    if (this.authService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n\r\n    this.authService.logout()\r\n    this.router.navigate([\"/auth/signin\"]);\r\n    return false;\r\n  }\r\n}\r\n","import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\nexport interface ConfirmDialogData {\n  title: string;\n  msg: string;\n}\n\n@Component({\n  selector: \"app-confirm-dialog\",\n  templateUrl: \"./confirm-dialog.component.html\",\n  styleUrls: [\"./confirm-dialog.component.scss\"],\n})\nexport class ConfirmDialogComponent {\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogData) {}\n}\n","<div class=\"dialog-w\">\n  <h3>{{ data.title }}</h3>\n  <p class=\"mt-2 mb-3 text-lg text-dark p-1\">{{ data.msg }}</p>\n  <div class=\"d-flex justify-content-end\">\n    <button class=\"btn btn-secondary px-4 mr-3\" [mat-dialog-close]=\"false\">NO</button>\n    <button class=\"btn btn-danger px-2\" [mat-dialog-close]=\"true\">YES</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SigninComponent } from './signin/signin.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nexport const authenticationRoutes = [\n  {\n    path: '',\n    redirectTo: 'signin',\n    pathMatch: 'full'\n  },\n  {\n    path: 'signin',\n    component: SigninComponent\n  },\n  {\n    path: 'forgot-password',\n    component: ForgotPasswordComponent\n  },\n  {\n    path: 'reset-password',\n    component: ResetPasswordComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    SigninComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(authenticationRoutes)\n  ]\n})\nexport class AuthenticationModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatChipsModule } from \"@angular/material/chips\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatStepperModule } from \"@angular/material/stepper\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\n\nimport {\n  NgbButtonsModule,\n  NgbProgressbarModule,\n  NgbDatepickerModule,\n  NgbRatingModule,\n  NgbTimepickerModule,\n  NgbPopoverModule,\n  NgbCarouselModule,\n  NgbTabsetModule,\n  NgbTypeaheadModule,\n  NgbDropdownModule,\n} from \"@ng-bootstrap/ng-bootstrap\";\n\n// import { HttpClientModule } from '@angular/common/http';\n\nimport { ShellModule } from \"../shell/shell.module\";\nimport { ShowHidePasswordComponent } from \"./show-hide-password/show-hide-password.component\";\nimport { ShowHideInputDirective } from \"./show-hide-password/show-hide-input.directive\";\nimport { AlertTemplateComponent } from \"./alert-template/alert-template.component\";\nimport { NotificationTemplateComponent } from \"./notification-template/notification-template.component\";\nimport { ConfirmDialogComponent } from \"./dialogs/confirm/confirm-dialog.component\";\nimport { LocationPipe } from \"../pipes/location.pipe\";\nimport { LoaderDialogComponent } from \"./dialogs/loader/loader-dialog.component\";\n\n@NgModule({\n  declarations: [\n    ShowHidePasswordComponent,\n    ShowHideInputDirective,\n    AlertTemplateComponent,\n    NotificationTemplateComponent,\n    ConfirmDialogComponent,\n    LoaderDialogComponent,\n    //pipes\n    LocationPipe,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ShellModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule,\n    // HttpClientModule\n  ],\n  exports: [\n    // Re-export these modules to prevent repeated imports (see: https://angular.io/guide/ngmodule#re-exporting-other-modules)\n    //CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // HttpClientModule,\n    ShellModule,\n    RouterModule,\n    ShowHidePasswordComponent,\n    ShowHideInputDirective,\n    AlertTemplateComponent,\n    NotificationTemplateComponent,\n    // angular material modules\n    MatTableModule,\n    MatTabsModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatProgressBarModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatChipsModule,\n    MatSelectModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatAutocompleteModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatSliderModule,\n    MatIconModule, // needed to use the MatIconRegistry to register our own icons\n    // ng bootstrap modules\n    NgbButtonsModule,\n    NgbProgressbarModule,\n    NgbDatepickerModule,\n    NgbRatingModule,\n    NgbTimepickerModule,\n    NgbPopoverModule,\n    NgbCarouselModule,\n    NgbTabsetModule,\n    NgbTypeaheadModule,\n    NgbDropdownModule,\n    //pipes\n    LocationPipe,\n  ],\n})\nexport class SharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ValidatorsService {\n  equalPasswords(pass1Name: string, pass2Name: string) {\n    return (formGroup: FormGroup) => {\n      const pass1Control = formGroup.controls[pass1Name];\n      const pass2Control = formGroup.controls[pass2Name];\n\n      if (pass1Control.value === pass2Control.value) {\n        pass2Control.setErrors(null);\n      } else {\n        pass2Control.setErrors({ notEqual: true });\n      }\n    };\n  }\n}\n","import { I } from \"@angular/cdk/keycodes\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthenticationService } from \"../authentication.service\";\n\n@Component({\n  selector: \"app-signin\",\n  templateUrl: \"./signin.component.html\",\n  styleUrls: [\"./signin.component.scss\"],\n})\nexport class SigninComponent implements OnInit {\n  signinForm: FormGroup;\n  error: string | null = null;\n\n  constructor(public router: Router, private authenticationService: AuthenticationService, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.signinForm = this.fb.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required]],\n    });\n  }\n\n  onSignin() {\n    if (this.signinForm.invalid) {\n      return Object.values(this.signinForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.error = null;\n\n      const data = this.signinForm.value;\n\n      this.authenticationService.signin(data.email, data.password).subscribe(\n        (res) => {\n          if (!res.user?.roles?.includes(\"ADMIN\") && !res.user?.roles?.includes(\"MANAGER\")) {\n            this.error = \"Forbidden access\";\n            return;\n          }\n          // if signin success then:\n          this.router.navigate([\"general\"]);\n        },\n        (err) => {\n          // else if signin fails\n          if (err.error?.code === 401) {\n            this.error = err.error.message;\n          } else {\n            this.error = \"Unexpected error...\";\n          }\n        }\n      );\n    }\n  }\n}\n","<div class=\"row no-gutters signin-page\">\n\n  <div class=\"col-12 col-md-6 form-section\">\n    <h1 class=\"page-title text-center font-weight-bold\">Login</h1>\n    <div class=\"col-12 col-lg-8 mx-auto\">\n      <form class=\"signin-form\" [formGroup]=\"signinForm\" (ngSubmit)=\"onSignin()\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input \n          type=\"email\" \n          class=\"form-control\" \n          id=\"email\" \n          formControlName=\"email\" \n          placeholder=\"user@email.com\"\n          [class.is-invalid]=\"signinForm.controls.email.touched && signinForm.controls.email.invalid\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"password\"\n            formControlName=\"password\"\n            placeholder=\"*********\"\n            [class.is-invalid]=\"signinForm.controls.password.touched && signinForm.controls.password.invalid\"\n          />\n        </div>\n\n        <div *ngIf=\"error\" class=\"alert alert-danger\" role=\"alert\">{{error}}</div>\n\n        <div class=\"d-flex justify-content-between\">\n          <a class=\"link-text\" [routerLink]=\"['/auth/forgot-password']\">Forgot password?</a>\n          <button class=\"btn btn-primary \" type=\"submit\">SIGN IN</button>\n        </div>\n      </form>\n    </div>\n\n    <!-- <div class=\"existing-account-section\">\n      <span class=\"text\">Don't have an account? <a class=\"link-text\" [routerLink]=\"['/auth/signup']\">Sign up</a>.</span>\n    </div> -->\n  </div>\n  <div class=\"col-12 col-md-6 d-none d-md-block image-section login-bg\"></div>\n</div>\n","import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { LayoutsService } from './core/layouts/layouts.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  title = 'fully-angular-admin-template';\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private breakpointObserver: BreakpointObserver,\n    private layoutsService: LayoutsService\n  ) { }\n\n  ngOnInit() {\n    // Listen to device size changes to dynamically adjust the layout\n    if (isPlatformBrowser(this.platformId)) {\n      // Use Angular CDK Breakpoint Observer to detect changes on the screen size\n      this.breakpointObserver.observe([\n        Breakpoints.XSmall\n      ]).subscribe(result => {\n        if (result.breakpoints[Breakpoints.XSmall]) {\n          // Switch to mobile layout\n          const mobileLayoutName = 'mobile';\n          this.layoutsService.switchLayout(mobileLayoutName);\n        } else {\n          // Switch back to previous layout (or the default one)\n          const previousLayoutName = this.layoutsService.previousLayout.name;\n          this.layoutsService.switchLayout(previousLayoutName);\n        }\n      });\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy, Inject, PLATFORM_ID, Optional } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\nimport { RESPONSE } from '@nguniversal/express-engine/tokens';\nimport { CdkPortalOutlet, Portal, ComponentPortal } from '@angular/cdk/portal';\nimport { Subscription } from 'rxjs';\n\nimport { LayoutsService } from '../layouts.service';\nimport { IAppLayout, availableLayouts, defaultLayout } from 'src/app/app-layouts';\n\nconst MOBILE_DEVICE = makeStateKey('mobile-device');\n\n@Component({\n  selector: 'app-dynamic-layout',\n  templateUrl: './dynamic-layout.component.html'\n})\nexport class DynamicLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  // dynamicLayoutPortalOutlet is a reference to the <ng-template> in the view that's gonna render the different layouts\n  @ViewChild(CdkPortalOutlet) dynamicLayoutPortalOutlet: CdkPortalOutlet;\n\n  // dynamicLayoutPortal is a reference to the portal that we are gonna render in the dynamicLayoutPortalOutlet\n  dynamicLayoutPortal: Portal<any>;\n\n  // Subscription to the Dynamic Layout switching mechanism\n  dynamicLayoutSwitchSubscription: Subscription;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    @Optional() @Inject(RESPONSE) private response: any,\n    private state: TransferState,\n    private layoutsService: LayoutsService\n  ) {\n    // Check if the user is requesting the app from a mobile device\n    let mobileDevice = 'not-mobile';\n\n    // In our server.ts we added a custom response header with information about the device requesting the app\n    if (isPlatformServer(this.platformId)) {\n      if (this.response && this.response !== null) {\n        // Get custom header from the response sent from the server.ts\n        const mobileDeviceHeader = this.response.get('mobile-device');\n\n        // If the mobile-device header is not null, then the user is requesting the app from a mobile device. Override reference.\n        if (mobileDeviceHeader && mobileDeviceHeader !== 'null') {\n          mobileDevice = mobileDeviceHeader;\n        }\n      }\n\n      // Set the mobileDevice reference using Angular TransferState mechanisms so we can have this reference ready\n      // when the app transitions from server side rendering to client side rendering\n      this.state.set(MOBILE_DEVICE, mobileDevice as string);\n\n      console.log('we\\'re rendering from the server, checking response object.');\n      console.log(`MOBILE_DEVICE from RESPONSE: ${mobileDevice}`);\n    } else {\n      mobileDevice = this.state.get(MOBILE_DEVICE, mobileDevice as any);\n\n      console.log('we\\'re rendering from the browser, there is no response object.');\n      console.log(`MOBILE_DEVICE from TransferState: ${mobileDevice}`);\n    }\n\n    if (mobileDevice !== 'not-mobile') {\n      this.renderLayoutPortal('mobile');\n    } else {\n      this.renderLayoutPortal(defaultLayout.name);\n    }\n  }\n\n  ngOnInit() { }\n\n  ngOnDestroy() {\n    this.dynamicLayoutSwitchSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.dynamicLayoutSwitchSubscription = this.layoutsService.switchLayoutSubject.subscribe(\n      (selectedLayoutName) => {\n        this.renderLayoutPortal(selectedLayoutName);\n      },\n      (error) => {\n        console.log('switchLayoutSubject [DynamicLayoutComponent] - error', error);\n      },\n      () => {\n        console.log('switchLayoutSubject [DynamicLayoutComponent] - complete');\n      }\n    );\n  }\n\n  renderLayoutPortal(layoutName: string): void {\n    // Check if the layout we want to render exists. We check against the list defined in the src/app-layouts.ts file\n    const layoutToRender: IAppLayout = availableLayouts.find((layout: IAppLayout) => {\n      return layout.name === layoutName;\n    });\n\n    if (layoutToRender) {\n      this.dynamicLayoutPortal = new ComponentPortal(layoutToRender.component);\n    }\n  }\n}\n","<ng-template [cdkPortalOutlet]=\"dynamicLayoutPortal\"></ng-template>\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Invoice } from \"../models/invoice.models\";\nimport { StateService } from \"../../core/state.service\";\nimport { Vehicle } from \"../models/vehicle.models\";\nimport { Rate } from \"../models/rate.models\";\nimport { nanoid } from \"nanoid\";\nimport { Customer } from \"../models/customer.models\";\n\ninterface InvoicesState {\n  invoices: Invoice[];\n  newInvoice: Partial<Invoice>; //new invoice\n  selectedInvoice: Invoice; //invoice to edit\n  curentRate: Rate; //new invoice current rate\n  selectedInvoices: Invoice[]; //invoices checked on table\n  mostRecentsCustomers: Customer[];\n}\n\nconst initialState: InvoicesState = {\n  invoices: [],\n  newInvoice: { status: \"DRAFT\", vehicles: [] },\n  selectedInvoice: null,\n  curentRate: null,\n  selectedInvoices: [],\n  mostRecentsCustomers: [],\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class InvoicesStateService extends StateService<InvoicesState> {\n  invoices$: Observable<Invoice[]> = this.select((state) => state.invoices);\n  newInvoice$: Observable<Partial<Invoice>> = this.select((state) => state.newInvoice);\n  selectedInvoice$: Observable<Partial<Invoice>> = this.select((state) => state.selectedInvoice);\n  currentRate$: Observable<Rate> = this.select((state) => state.curentRate);\n  selectedInvoices$: Observable<Invoice[]> = this.select((state) => state.selectedInvoices);\n  mostRecentsCustomers$: Observable<Customer[]> = this.select((state) => state.mostRecentsCustomers);\n\n  constructor() {\n    super(initialState);\n  }\n\n  setInvoices(invoices: Invoice[]) {\n    this.setState({ invoices });\n  }\n\n  setNewInvoice(invoice: Partial<Invoice>) {\n    this.setState({ newInvoice: { ...this.state.newInvoice, ...invoice } });\n  }\n\n  setSelectedInvoice(invoice: Partial<Invoice>) {\n    this.setState({ selectedInvoice: { ...this.state.selectedInvoice, ...invoice } });\n  }\n\n  addNewInvoiceVehicle(vehicle: Vehicle) {\n    const vehicles = this.state.newInvoice?.vehicles ?? [];\n    if (vehicles.find((v) => v.vin === vehicle.vin)) {\n      throw new Error(\"Duplicated vin\");\n    }\n    vehicles.push({ ...vehicle, _id: nanoid(10) }); //temporal id until saved on db\n    this.setState({ newInvoice: { ...this.state.newInvoice, vehicles } });\n  }\n\n  addSelectedInvoiceVehicle(vehicle: Vehicle) {\n    const vehicles = this.state.selectedInvoice?.vehicles ?? [];\n    if (vehicles.find((v) => v.vin === vehicle.vin)) {\n      throw new Error(\"Duplicated vin\");\n    }\n    vehicles.push({ ...vehicle, _id: nanoid(10) });\n    this.setState({ selectedInvoice: { ...this.state.selectedInvoice, vehicles } });\n  }\n\n  editNewInvoiceVehicle(vehicle: Vehicle, id: string) {\n    const vehicles = this.state.newInvoice?.vehicles ?? [];\n    if (vehicles.find((v) => v.vin === vehicle.vin && v._id !== id)) {\n      throw new Error(\"Duplicated vin\");\n    }\n    const newVehicles = vehicles.map((v) => {\n      if (v._id === id) {\n        return vehicle;\n      } else {\n        return v;\n      }\n    });\n\n    this.setState({ newInvoice: { ...this.state.newInvoice, vehicles: newVehicles } });\n  }\n\n  editSelectedInvoiceVehicle(vehicle: Vehicle, id: string) {\n    const vehicles = this.state.selectedInvoice?.vehicles ?? [];\n    if (vehicles.find((v) => v.vin === vehicle.vin && v._id !== id)) {\n      throw new Error(\"Duplicated vin\");\n    }\n    const newVehicles = vehicles.map((v) => {\n      if (v._id === id) {\n        return vehicle;\n      } else {\n        return v;\n      }\n    });\n\n    this.setState({ selectedInvoice: { ...this.state.selectedInvoice, vehicles: newVehicles } });\n  }\n\n  deleteNewInvoiceVehicle(vehicleId: string) {\n    const newVehicles = this.state.newInvoice?.vehicles?.filter((v) => v._id !== vehicleId);\n    this.setState({ newInvoice: { ...this.state.newInvoice, vehicles: newVehicles } });\n  }\n\n  deleteSelectedInvoiceVehicle(vehicleId: string) {\n    const newVehicles = this.state.selectedInvoice?.vehicles?.filter((v) => v._id !== vehicleId);\n    this.setState({ selectedInvoice: { ...this.state.selectedInvoice, vehicles: newVehicles } });\n  }\n\n  resetNewInvoice() {\n    this.setState({ newInvoice: { status: \"DRAFT\", vehicles: [] } });\n  }\n\n  resetSelectedInvoice() {\n    this.setState({ selectedInvoice: null });\n  }\n\n  setCurretRate(rate: Rate) {\n    this.setState({ curentRate: rate });\n  }\n\n  setSelectedInvoices(invoice: Invoice, selected: boolean) {\n    if (selected) {\n      this.setState({ selectedInvoices: [...this.state.selectedInvoices, invoice] });\n    } else {\n      this.setState({ selectedInvoices: this.state.selectedInvoices.filter((inv) => inv.id !== invoice.id) });\n    }\n  }\n\n  setAllSelectedInvoices(invoices: Invoice[], selected: boolean) {\n    if (selected) {\n      this.setState({ selectedInvoices: invoices });\n    } else {\n      this.setState({ selectedInvoices: [] });\n    }\n  }\n\n  setMostRecentsCustomers(customers: Customer[]) {\n    this.setState({ mostRecentsCustomers: customers });\n  }\n}\n","import { Type } from \"@angular/core\";\nimport { OptionBLayoutComponent } from \"./core/layouts/option-b/option-b-layout.component\";\nimport { MobileLayoutComponent } from \"./core/layouts/mobile/mobile-layout.component\";\n\ninterface IAppLayout {\n  name: string;\n  component: Type<any>;\n}\n\nconst availableLayouts: Array<IAppLayout> = [\n  {\n    name: \"B\",\n    component: OptionBLayoutComponent,\n  },\n  {\n    name: \"mobile\",\n    component: MobileLayoutComponent,\n  },\n];\n\n// Select the default layout\nconst defaultLayout: IAppLayout = availableLayouts.find((layout: IAppLayout) => {\n  return layout.name === \"B\";\n  // return layout.name === 'D';\n});\n\nexport { IAppLayout, availableLayouts, defaultLayout };\n","import { BrowserModule, BrowserTransferStateModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\n\nimport { CoreModule } from \"./core/core.module\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { AuthenticationModule } from \"./authentication/authentication.module\";\nimport { AuthInterceptor } from \"./core/interceptors/auth.interceptor\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatStepperModule } from \"@angular/material/stepper\";\nimport { VehicleReportComponent } from \"./vehicle-report/vehicle-report.component\";\n\n@NgModule({\n  declarations: [AppComponent,VehicleReportComponent],\n  imports: [\n    CommonModule,\n    BrowserModule.withServerTransition({ appId: \"serverApp\" }),\n    BrowserTransferStateModule,\n    AppRoutingModule,\n    HttpClientModule,\n    SharedModule,\n    CoreModule,\n    AuthenticationModule,\n    BrowserAnimationsModule,\n    MatStepperModule,\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AspectRatioComponent } from './aspect-ratio/aspect-ratio.component';\nimport { ImageShellComponent } from './image-shell/image-shell.component';\nimport { TextShellComponent } from './text-shell/text-shell.component';\nimport { AppShellConfig } from './config/app-shell.config';\n\n@NgModule({\n  declarations: [\n    AspectRatioComponent,\n    ImageShellComponent,\n    TextShellComponent\n  ],\n  providers: [\n    // Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (appShellConfig: AppShellConfig) => {\n        return () => appShellConfig.load();\n      },\n      deps: [AppShellConfig],\n      multi: true\n    }\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AspectRatioComponent,\n    ImageShellComponent,\n    TextShellComponent\n  ]\n})\nexport class ShellModule { }\n","import { Component, ContentChild, ElementRef } from '@angular/core';\nimport { ShowHideInputDirective } from './show-hide-input.directive';\n\n@Component({\n  selector: 'app-show-hide-password',\n  templateUrl: './show-hide-password.component.html',\n  styleUrls: ['./show-hide-password.component.scss']\n})\nexport class ShowHidePasswordComponent {\n\n  show = false;\n  @ContentChild(ShowHideInputDirective, { read: ElementRef }) input: ElementRef;\n\n  constructor() {}\n\n  toggleShow() {\n    this.show = !this.show;\n    if (this.show) {\n      this.input.nativeElement.type = 'text';\n    } else {\n      this.input.nativeElement.type = 'password';\n    }\n  }\n\n}\n","<ng-content></ng-content>\n<a class=\"type-toggle\" (click)=\"toggleShow()\">\n\t<i class=\"fas fa-eye show-option\" [hidden]=\"show\"></i>\n\t<i class=\"fas fa-eye-slash hide-option\" [hidden]=\"!show\"></i>\n  <!-- In case you want to use text instead of icons -->\n\t<!--\n  <span class=\"show-option\" [hidden]=\"show\">show</span>\n\t<span class=\"hide-option\" [hidden]=\"!show\">hide</span>\n  -->\n</a>\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpErrorResponse } from \"@angular/common/http\";\nimport { AuthenticationService } from \"src/app/authentication/authentication.service\";\nimport { Observable, throwError } from \"rxjs\";\nimport { map, catchError } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthenticationService, private router: Router) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.authService.isLoggedIn()) {\n      let access_token = this.authService.getAccessToken();\n      request = request.clone({ headers: request.headers.set(\"Authorization\", \"Bearer \" + access_token) });\n    }\n\n    return next.handle(request).pipe(\n      map((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          //console.log(\"Network event--->>>\", event); //TODO logger with log levels\n        }\n        return event;\n      }),\n      catchError((error: HttpErrorResponse) => {\n        const data = {\n          reason: error?.error?.reason ?? \"\",\n          status: error?.status,\n        };\n        // console.log(\"Network event--->>> Error: \", data); //TODO logger with log levels\n        // console.log(error);\n        \n        if (error.statusText == \"Unauthorized\" || error.statusText == \"Forbidden\") {\n          this.authService.logout().subscribe(() => this.router.navigate([\"auth/signin\"]));\n        }\n\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, OnDestroy, HostBinding, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-option-b-layout',\n  templateUrl: './option-b-layout.component.html',\n  styleUrls: ['./option-b-layout.component.scss']\n})\nexport class OptionBLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-b') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  currentYear = new Date().getFullYear()\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n\n    // main menu initialization\n    switch (this.responsiveBreakpointsService.currentScreenSize) {\n      case 'small':\n        this.mainSidenavOpened = false;\n        this.mainSideMenuMode = 'push';\n        break;\n      case 'medium':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      case 'large':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      default:\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n    }\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout B] - error', error);\n      },\n      () => {}\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout B] - error', error);\n      },\n      () => {}\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout B] - error', error);\n      },\n      () => {}\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"show-branding use-active-item-line-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <app-top-navbar class=\"admin-top-navbar show-bare-branding add-user-divider\"></app-top-navbar>\n    <router-outlet></router-outlet>\n    <div style=\"flex-grow:1\"></div>\n    <p class=\"py-3 w-100 text-center\">{{\"Copyright \" + currentYear + \" - vinbilling.com | All Rights Reserved\"}}</p>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { RouterModule } from '@angular/router';\n// Items inside Side Menu\nimport { MatExpansionModule } from '@angular/material/expansion';\n// Side Menu\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { PortalModule } from '@angular/cdk/portal';\n\n// Top Navbar\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { OptionBLayoutComponent } from './layouts/option-b/option-b-layout.component';\nimport { EmptyLayoutComponent } from './layouts/empty/empty-layout.component';\n\nimport { TopNavbarComponent } from './top-navbar/top-navbar.component';\nimport { SideNavbarComponent } from './side-navbar/side-navbar.component';\nimport { MainMenuComponent } from './side-menus/main-menu/main-menu.component';\n\n\nimport { ColorPalettesService } from './color-palettes/color-palettes.service';\nimport { CustomIconsService } from './custom-icons/custom-icons.service';\nimport { MobileLayoutComponent } from './layouts/mobile/mobile-layout.component';\nimport { DynamicLayoutComponent } from './layouts/dynamic/dynamic-layout.component';\n\n@NgModule({\n  declarations: [\n    OptionBLayoutComponent,\n    EmptyLayoutComponent,\n    TopNavbarComponent,\n    SideNavbarComponent,\n    MainMenuComponent,\n    MobileLayoutComponent,\n    DynamicLayoutComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n    // Material CDK modules\n    PortalModule,\n    // To detect screen size changes\n    LayoutModule,\n    // Material modules\n    MatSidenavModule,\n    MatExpansionModule,\n    // Ng Bootstrap modules\n    NgbDropdownModule\n  ],\n  exports: [\n    OptionBLayoutComponent,\n    EmptyLayoutComponent,\n    TopNavbarComponent,\n    SideNavbarComponent,\n    MainMenuComponent,\n    MobileLayoutComponent,\n    DynamicLayoutComponent\n  ],\n  providers: [\n    // Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (colorPalettesService: ColorPalettesService) => {\n        return () => colorPalettesService.init();\n      },\n      deps: [ColorPalettesService],\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (customIconsService: CustomIconsService) => {\n        return () => customIconsService.init();\n      },\n      deps: [CustomIconsService],\n      multi: true\n    }\n  ]\n})\nexport class CoreModule { }\n","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { VehicleService } from '../business/services/vehicle.service'\n\n@Component({\n  selector: 'app-vehicle-report',\n  templateUrl: './vehicle-report.component.html',\n  styleUrls: ['./vehicle-report.component.scss'],\n})\nexport class VehicleReportComponent implements OnInit {\n  constructor(private route: ActivatedRoute, private vehicleService: VehicleService) {}\n\n  ngOnInit() {\n    this.route.queryParams.subscribe((params) => {\n      if (params.reportId) {\n        try {\n          //console.log(JSON.parse(atob(params.reportId)))\n          const { invoiceId, vehicleId }: { invoiceId: string; vehicleId: string } = JSON.parse(atob(params.reportId))\n          if (!invoiceId || !vehicleId) throw new Error('Invalid report id')\n\n          //get report\n          this.vehicleService.getReportPdf(invoiceId, vehicleId)\n        } catch (error) {\n          this.onError()\n        }\n      } else {\n        this.onError()\n      }\n    })\n  }\n\n  onError() {\n    alert('Invalid report id')\n  }\n}\n","<div style=\"padding: 2rem;\">\n    <h6>Loading report...</h6>\n</div>\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { EmptyLayoutComponent } from './core/layouts/empty/empty-layout.component'\nimport { DynamicLayoutComponent } from './core/layouts/dynamic/dynamic-layout.component'\nimport { AuthGuard } from './core/guards/auth.guard'\nimport { VehicleReportComponent } from './vehicle-report/vehicle-report.component'\n\nconst routes: Routes = [\n  /*\n    Default route\n  */\n  { path: '', redirectTo: '/general', pathMatch: 'full' },\n  // { path: '', redirectTo: '/authentication/signup', pathMatch: 'full' },\n  /*\n    Auth routes + layout\n  */\n  {\n    path: '',\n    component: EmptyLayoutComponent,\n    children: [\n      {\n        path: 'auth',\n        loadChildren: () => import('./authentication/authentication.module').then((m) => m.AuthenticationModule),\n      },\n      {\n        path: 'vehicle-report',\n        component: VehicleReportComponent,\n      },\n    ],\n  },\n  /*\n    Main routes + dynamic layouts\n  */\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    children: [\n      {\n        path: 'general',\n        loadChildren: () => import('./general/general.module').then((m) => m.GeneralModule),\n        canLoad: [AuthGuard],\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'company',\n        loadChildren: () => import('./company/company.module').then((m) => m.CompanyModule),\n        canLoad: [AuthGuard],\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'invoices',\n        loadChildren: () => import('./invoice/invoice.module').then((m) => m.InvoiceModule),\n        canLoad: [AuthGuard],\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'reports',\n        loadChildren: () => import('./reports/reports.module').then((m) => m.ReportsModule),\n        canLoad: [AuthGuard],\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'search',\n        loadChildren: () => import('./search/search.module').then((m) => m.SearchModule),\n        canLoad: [AuthGuard],\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'administration',\n        loadChildren: () => import('./administration/administration.module').then((m) => m.AdministrationModule),\n        canLoad: [AuthGuard],\n        canActivate: [AuthGuard],\n      },\n    ],\n  },\n  /*\n    Undefined routes (should redirect to a 404 page)\n  */\n  { path: '**', redirectTo: '' },\n]\n\n@NgModule({\n  // Only call RouterModule.forRoot() in the root AppRoutingModule (or the AppModule if that's where you register\n  // top level application routes). In any other module, you must call the RouterModule.forChild method to register additional routes.\n  imports: [\n    RouterModule.forRoot(routes, {\n      // If you want to preload all lazy routes when the app loads, uncomment the following line\n      // preloadingStrategy: PreloadAllModules,\n      onSameUrlNavigation: 'reload',\n      // This value is required for server-side rendering to work.\n      initialNavigation: 'enabled',\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [AuthGuard],\n})\nexport class AppRoutingModule {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-alert-template-component',\n  templateUrl: 'alert-template.component.html',\n  styleUrls: ['./alert-template.component.scss']\n})\nexport class AlertTemplateComponent {\n  iconType: string;\n  iconPosition: string;\n  title: string;\n  text: string;\n  options: false;\n  input: false;\n  button: string;\n  inputData: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AlertTemplateComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.iconType = data.iconType;\n    this.iconPosition = data.iconPosition ? data.iconPosition : 'default';\n    this.title = data.title;\n    this.text = data.text;\n    this.options = data.options;\n    this.input = data.input;\n    this.button = data.button;\n\n    if (data.time) {\n      setTimeout(() => {\n        this.dialogRef.close();\n      }, data.time);\n    }\n  }\n}\n","<div class=\"alert-modal\">\n\n  <div *ngIf=\"iconType\" class=\"icon-container-wrapper\">\n    <cc-aspect-ratio [ratio]=\"{w:1, h:1}\" class=\"icon-background\" [ngClass]=\"iconType + ' icon-' + iconPosition\">\n      <div class=\"icon-container\">\n        <i *ngIf=\"iconType === 'success'\" class=\"fas fa-check alert-icon icon-success\"></i>\n        <i *ngIf=\"iconType === 'error'\" class=\"fas fa-exclamation alert-icon icon-error\"></i>\n      </div>\n    </cc-aspect-ratio>\n  </div>\n\n  <span class=\"alert-title\">{{ title }}</span>\n  <span class=\"alert-text\">{{ text }}</span>\n\n  <div *ngIf=\"input\" class=\"alert-with-input\">\n    <input class=\"form-control\" [(ngModel)]=\"inputData\">\n    <div class=\"alert-buttons\" *ngIf=\"input\">\n      <button type=\"button\" class=\"button-success\" [mat-dialog-close]=\"inputData\">Confirm</button>\n      <button type=\"button\" class=\"button-error\" [mat-dialog-close]=\"false\">Cancel</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"!input && options\" class=\"alert-buttons\">\n    <button type=\"button\" class=\"button-success\" [mat-dialog-close]=\"true\">Yes</button>\n    <button type=\"button\" class=\"button-error\" [mat-dialog-close]=\"false\">No</button>\n  </div>\n\n  <div *ngIf=\"!input && !options && button\" class=\"alert-buttons\">\n    <button type=\"button\" class=\"button-info\" [mat-dialog-close]=\"false\">{{ button }}</button>\n  </div>\n\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthenticationService } from \"../authentication.service\";\n\n@Component({\n  selector: \"app-forgot-password\",\n  templateUrl: \"./forgot-password.component.html\",\n  styleUrls: [\"./forgot-password.component.scss\"],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  recoverPasswordForm: FormGroup;\n  emailSubmitted = false;\n  invalidEmail = false;\n  loading = false;\n\n  constructor(public router: Router, private authenticationService: AuthenticationService) {}\n\n  ngOnInit() {\n    this.recoverPasswordForm = new FormGroup({\n      email: new FormControl(\"\"),\n    });\n  }\n\n  onRecoverPassword() {\n    this.loading = true;\n    this.authenticationService.recoverPassword(this.recoverPasswordForm.value.email).subscribe(\n      (res) => {\n        // if recoverpassword success then:\n        this.emailSubmitted = true;\n        this.invalidEmail = false;\n        this.loading = false;\n        setTimeout(() => {\n          return this.router.navigate([\"/auth/signin\"]);\n        }, 3000);\n      },\n      (err) => {\n        console.log(err);\n        this.emailSubmitted = false;\n        this.invalidEmail = true;\n        this.loading = false;\n\n        // else if recoverpassword fails\n        // show error\n      }\n    );\n  }\n}\n","<div class=\"row no-gutters recover-password-page\">\n  <div class=\"col-md-6 col-sm-12 form-section\">\n    <h1 class=\"page-title text-center font-weight-bold\">Forgot password</h1>\n    <div class=\"col-12 col-lg-8 mx-auto\">\n      <form class=\"recover-password-form\" [formGroup]=\"recoverPasswordForm\" (ngSubmit)=\"onRecoverPassword()\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"email\" class=\"form-control\" [ngClass]=\"false && 'is-invalid'\" id=\"email\" formControlName=\"email\" />\n        </div>\n\n        <div *ngIf=\"emailSubmitted\" class=\"alert alert-success\" role=\"alert\">Please check your email...</div>\n        <div *ngIf=\"invalidEmail\" class=\"alert alert-danger\" role=\"alert\">Invalid email</div>\n\n        <div class=\"d-flex justify-content-between\">\n          <a class=\"link-text\" [routerLink]=\"['/auth/signin']\">Login</a>\n          <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"loading\">{{ loading ? 'Loading...' : 'RESET PASSWORD'}}</button>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-md-6 col-lg-6 d-none d-md-block image-section login-bg\"></div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ValidatorsService } from \"src/app/core/validators.service\";\nimport { AuthenticationService } from \"../authentication.service\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"./reset-password.component.html\",\n  styleUrls: [\"./reset-password.component.scss\"],\n})\nexport class ResetPasswordComponent implements OnInit {\n  recoverPasswordForm: FormGroup;\n  token: string;\n  loading = false;\n  error = false;\n  notEqualPass = false;\n  passwordSaved = false;\n\n  constructor(\n    public router: Router,\n    private authenticationService: AuthenticationService,\n    private fb: FormBuilder,\n    private validatorsService: ValidatorsService,\n    private route: ActivatedRoute\n  ) {}\n  ngOnInit() {\n    this.route.queryParams.subscribe((params) => {\n      if (params.token) {\n        this.token = params.token;\n      }else{\n        return this.router.navigate([\"/auth/signin\"]);\n      }\n    });\n\n    this.recoverPasswordForm = this.fb.group(\n      {\n        password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n        confirm_password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n      },\n      {\n        validators: this.validatorsService.equalPasswords(\"password\", \"confirm_password\"),\n      }\n    );\n  }\n\n  onRecoverPassword() {\n    if (this.recoverPasswordForm.controls?.confirm_password?.errors?.notEqual) {\n      this.notEqualPass = true;\n    } else {\n      this.notEqualPass = false;\n    }\n    if (this.recoverPasswordForm.invalid) {\n      return Object.values(this.recoverPasswordForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.loading = true;\n      this.authenticationService.resetPassword(this.recoverPasswordForm.value.password, this.token).subscribe(\n        (res) => {\n          this.passwordSaved = true;\n          this.loading = false;\n          setTimeout(() => {\n            return this.router.navigate([\"/auth/signin\"]);\n          }, 3000);\n        },\n        (err) => {\n          this.error = true;\n          this.passwordSaved = false;\n          this.loading = false;\n        }\n      );\n    }\n  }\n}\n","<div class=\"row no-gutters recover-password-page\">\n  <div class=\"col-md-6 col-sm-12 form-section\">\n    <h1 class=\"page-title text-center font-weight-bold\">Reset password</h1>\n    <div class=\"col-8 mx-auto\">\n      <form class=\"recover-password-form\" [formGroup]=\"recoverPasswordForm\" (ngSubmit)=\"onRecoverPassword()\">\n        <div class=\"form-group\">\n          <label for=\"password\">New password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"password\"\n            [class.is-invalid]=\"recoverPasswordForm.controls.password.touched && recoverPasswordForm.controls.password.invalid\"\n            formControlName=\"password\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n            {{\n              recoverPasswordForm.controls.password.errors?.minlength || recoverPasswordForm.controls.password.errors?.maxlength\n                ? \"Min 8 characters and max 20\"\n                : \"Invalid field\"\n            }}\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"confirm_password\">Confirm password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            [class.is-invalid]=\"\n              recoverPasswordForm.controls.confirm_password.touched && recoverPasswordForm.controls.confirm_password.invalid\n            \"\n            id=\"confirm_password\"\n            formControlName=\"confirm_password\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n            {{\n              recoverPasswordForm.controls.confirm_password.errors?.minlength || recoverPasswordForm.controls.confirm_password.errors?.maxlength\n                ? \"Min 8 characters and max 20\"\n                : \"Invalid field\"\n            }}\n          </div>\n        </div>\n\n        <div *ngIf=\"!passwordSaved && notEqualPass\" class=\"alert alert-danger\" role=\"alert\">Passwords must be equals</div>\n        <div *ngIf=\"!passwordSaved && error\" class=\"alert alert-danger\" role=\"alert\">Failed to reset password</div>\n        <div *ngIf=\"passwordSaved\" class=\"alert alert-success\" role=\"alert\">Password updated</div>\n\n        <div class=\"d-flex justify-content-between\">\n          <a class=\"link-text\" [routerLink]=\"['/auth/signin']\">Login</a>\n          <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"loading || passwordSaved\">{{ loading ? 'Loading...' : 'RESET PASSWORD'}}</button>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-md-5 col-lg-6 d-none d-md-block image-section login-bg\"></div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { StateService } from \"../../core/state.service\";\nimport { Company } from \"../models/company.models\";\n\ninterface GlobalState {\n  userCompany: Company;\n}\n\nconst initialState: GlobalState = {\n  userCompany: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlobalStateService extends StateService<GlobalState> {\n  userCompany$: Observable<Company> = this.select((state) => state.userCompany);\n\n  constructor() {\n    super(initialState);\n  }\n\n  setUserCompany(userCompany: Company) {\n    this.setState({ userCompany });\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { CompanyService } from \"src/app/business/services/company.service\";\nimport { GlobalStateService } from \"src/app/business/state/global-state.service\";\n\n@Component({\n  selector: \"app-main-menu\",\n  templateUrl: \"./main-menu.component.html\",\n  styleUrls: [\"./styles/main-menu.component.scss\"],\n})\nexport class MainMenuComponent implements OnInit, OnDestroy {\n  subs: Subscription[] = [];\n  companyName: string = \"Loading...\";\n\n  constructor(private companyService: CompanyService, private globalState: GlobalStateService) {\n    const sub = this.globalState.userCompany$.subscribe((company) => {\n      if(company){\n        this.companyName = company.name;\n      }\n    });\n    this.subs.push(sub);\n  }\n\n  ngOnInit() {\n    this.companyService.fetchCompany();\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<!-- SIDE-MENU -->\n<div class=\"w-full pt-2\">\n  <div class=\"col-10 mx-auto\">\n    <img src=\"/assets/logo.png\" alt=\"\" />\n  </div>\n</div>\n\n<ul class=\"side-menu-navigation nav flex-column\">\n  <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n    <div class=\"menu-link\">\n      <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n        <a\n          style=\"display: flex; padding-top: 14px; padding-bottom: 14px\"\n          class=\"menu-link nav-link\"\n          [routerLinkActive]=\"['active']\"\n          [routerLink]=\"['/general']\"\n        >\n          <mat-icon class=\"menu-item-icon\" svgIcon=\"dashboards\"></mat-icon>\n          <span class=\"menu-item-title\">Dashboard</span>\n        </a>\n      </li>\n    </div>\n  </li>\n\n  <li class=\"menu-item expandable-item nav-item\" [routerLinkActive]=\"['active']\">\n    <mat-expansion-panel [expanded]=\"false\">\n      <mat-expansion-panel-header class=\"menu-link\">\n        <div class=\"item-header-content\">\n          <mat-panel-title>\n            <mat-icon class=\"menu-item-icon\"> business</mat-icon>\n            <span class=\"menu-item-title\">{{ companyName }}</span>\n          </mat-panel-title>\n        </div>\n      </mat-expansion-panel-header>\n      <ul class=\"menu-sub-navigation nav flex-column\">\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/company/customers']\">\n            <i class=\"menu-item-icon\"></i>\n            <span class=\"menu-item-title\">Customers</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/company/rates']\">\n            <i class=\"menu-item-icon\"></i>\n            <span class=\"menu-item-title\">Rates</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/company/users']\">\n            <i class=\"menu-item-icon\"></i>\n            <span class=\"menu-item-title\">Users</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/company/profile']\">\n            <i class=\"menu-item-icon\"></i>\n            <span class=\"menu-item-title\">Profile</span>\n          </a>\n        </li>\n      </ul>\n    </mat-expansion-panel>\n  </li>\n\n  <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n    <div class=\"menu-link\">\n      <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n        <a\n          style=\"display: flex; padding-top: 14px; padding-bottom: 14px\"\n          class=\"menu-link nav-link\"\n          [routerLinkActive]=\"['active']\"\n          [routerLink]=\"['/invoices']\"\n        >\n          <mat-icon class=\"menu-item-icon\" svgIcon=\"forms\"></mat-icon>\n          <span class=\"menu-item-title\">Invoices</span>\n        </a>\n      </li>\n    </div>\n  </li>\n\n  <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n    <div class=\"menu-link\">\n      <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n        <a\n          style=\"display: flex; padding-top: 14px; padding-bottom: 14px\"\n          class=\"menu-link nav-link\"\n          [routerLinkActive]=\"['active']\"\n          [routerLink]=\"['/reports']\"\n        >\n          <mat-icon class=\"menu-item-icon\" svgIcon=\"charts\"></mat-icon>\n          <span class=\"menu-item-title\">Reports</span>\n        </a>\n      </li>\n    </div>\n  </li>\n\n  <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n    <div class=\"menu-link\">\n      <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n        <a\n          style=\"display: flex; padding-top: 14px; padding-bottom: 14px\"\n          class=\"menu-link nav-link\"\n          [routerLinkActive]=\"['active']\"\n          [routerLink]=\"['/search']\"\n        >\n          <mat-icon class=\"menu-item-icon\">search</mat-icon>\n          <span class=\"menu-item-title\">Search</span>\n        </a>\n      </li>\n    </div>\n  </li>\n\n  <li class=\"menu-item expandable-item nav-item\" [routerLinkActive]=\"['active']\">\n    <mat-expansion-panel [expanded]=\"false\">\n      <mat-expansion-panel-header class=\"menu-link\">\n        <div class=\"item-header-content\">\n          <mat-panel-title>\n            <mat-icon class=\"menu-item-icon\">settings</mat-icon>\n            <span class=\"menu-item-title\">Administration</span>\n          </mat-panel-title>\n        </div>\n      </mat-expansion-panel-header>\n      <ul class=\"menu-sub-navigation nav flex-column\">\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/administration/vehicle-templates']\">\n            <i class=\"menu-item-icon\"></i>\n            <span class=\"menu-item-title\">Vehicle templates</span>\n          </a>\n        </li>\n\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/administration/vehicle-damage']\">\n            <i class=\"menu-item-icon\"></i>\n            <span class=\"menu-item-title\">Vehicle damage</span>\n          </a>\n        </li>\n      </ul>\n    </mat-expansion-panel>\n  </li>\n</ul>\n","import { Component, Input, HostBinding } from '@angular/core';\n\nimport { AppShellConfig } from '../config/app-shell.config';\n\n@Component({\n  selector: 'cc-text-shell',\n  templateUrl: './text-shell.component.html',\n  styleUrls: [\n    './text-shell.component.scss',\n    // Partial styles\n    './partials/bouncing-animation.scss',\n    './partials/gradient-animation.scss'\n  ]\n})\nexport class TextShellComponent {\n  // To debug shell styles, change configuration in the assets/app-shell.config.json file\n  private debugMode = (AppShellConfig.settings && AppShellConfig.settings.debug) ? AppShellConfig.settings.debug : false;\n\n  // tslint:disable-next-line:variable-name\n  _data: '';\n\n  @HostBinding('class.text-loaded') textLoaded = false;\n\n  @Input() set data(val: any) {\n    if (!this.debugMode) {\n      this._data = (val !== undefined && val !== null) ? val : '';\n    }\n\n    if (this._data && this._data !== '') {\n      this.textLoaded = true;\n    } else {\n      this.textLoaded = false;\n    }\n  }\n\n  constructor() { }\n}\n","<ng-container>{{ _data }}</ng-container>\n","// import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
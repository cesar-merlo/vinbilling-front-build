{"version":3,"sources":["webpack:///src/app/shared/notifications/notification.service.ts","webpack:///src/app/core/config/constants.ts","webpack:///src/app/business/services/user.service.ts","webpack:///src/app/business/services/geo.service.ts","webpack:///src/app/general/change-password/change-password.component.ts","webpack:///src/app/general/change-password/change-password.component.html","webpack:///src/app/general/general.module.ts","webpack:///src/app/general/user-profile/user-profile.component.html","webpack:///src/app/general/user-profile/user-profile.component.ts","webpack:///src/app/general/home/home.component.ts","webpack:///src/app/general/home/home.component.html"],"names":["NotificationService","snackBar","msg","showNotification","type","icon","mySnackBarRef","openFromComponent","data","message","dismissible","duration","horizontalPosition","verticalPosition","panelClass","instance","snackBarRef","providedIn","regexs","vin","zip","mongoId","numbers","UserService","http","baseUrl","apiUrl","users","Promise","resolve","reject","get","subscribe","next","err","body","post","pipe","res","fetchUsers","id","isAdmin","url","put","STATES","code","name","GeoService","states","currentCities","state","getValue","Object","assign","ChangePasswordComponent","userService","fb","notificationService","router","validatorsService","cities","isLoading","showPass","buildForms","event","target","checked","passForm","group","current_password","required","minLength","maxLength","new_password","repeat_password","validators","equalPasswords","navigate","invalid","values","controls","forEach","control","markAsTouched","value","changePassword","success","setTimeout","error","includes","onSubmit","toggleShowPass","onCancel","selector","templateUrl","styleUrls","generalRoutes","path","component","GeneralModule","forChild","declarations","imports","UserProfileComponent","geoService","authService","subscriptions","sub","getUserAuth","user","loadFormData","push","userForm","email","first_name","last_name","phone","office_phone","city","pattern","commission","canEmailInvoices","canModifyCustomers","isManager","isDriver","receiveEmail","setValue","roles","selectedState","state_code","fetchCitiesByState","reset","rest","options","updateUser","unsubscribe","onStateChange","HomeComponent","companyService","time","dashboardInfo","info","fetchDashboardInfo","changeTime"],"mappings":"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","file":"general-general-module-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { NotificationTemplateComponent } from \"../notification-template/notification-template.component\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotificationService {\n  mySnackBarRef: any;\n\n  constructor(public snackBar: MatSnackBar) {}\n\n  success(msg: string = \"Action successfully\") {\n    this.showNotification(msg, \"success\", \"check-circle\");\n  }\n\n  error(msg: string = \"Action failed\") {\n    this.showNotification(msg, \"danger\", \"exclamation-triangle\");\n  }\n\n  info(msg: string) {\n    this.showNotification(msg, \"info\", \"info\");\n  }\n\n  warning(msg: string) {\n    this.showNotification(msg, \"warning\", \"info\");\n  }\n\n  private showNotification(msg = \"Missed message\", type: \"danger\" | \"info\" | \"success\" | \"warning\", icon: string): void {\n    // for more info about Angular Material snackBar check: https://material.angular.io/components/snack-bar/overview\n    this.mySnackBarRef = this.snackBar.openFromComponent(NotificationTemplateComponent, {\n      data: {\n        message: msg,\n        icon,\n        type,\n        dismissible: true,\n        // you can add everything you want here\n      },\n      duration: type !== \"success\" ? 6000 : 3000,\n      horizontalPosition: \"right\", // 'start' | 'center' | 'end' | 'left' | 'right'\n      verticalPosition: \"bottom\", // 'top' | 'bottom'\n      panelClass: [\"notification-wrapper\"],\n    });\n    // this is to be able to close it from the NotificationComponent\n    this.mySnackBarRef.instance.snackBarRef = this.mySnackBarRef;\n  }\n}\n","const regexs = {\n  vin: /^[a-z,A-Z0-9]{6,17}$/,\n  zip: /^\\d{5}(?:[-\\s]\\d{4})?$/,\n  mongoId: /^(?=[a-f\\d]{24}$)(\\d+[a-f]|[a-f]+\\d)/i,\n  numbers: /^[0-9]{4,25}$/,\n};\n\nexport { regexs };\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { BehaviorSubject } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { User, UserBody } from '../models/user.models'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private baseUrl = environment.apiUrl\n\n  public users: BehaviorSubject<User[]> = new BehaviorSubject(null)\n\n  constructor(private http: HttpClient) {}\n\n  fetchUsers() {\n    return new Promise((resolve, reject) => {\n      this.http.get<User[]>(`${this.baseUrl}/users/admin`).subscribe(\n        (data) => {\n          this.users.next(data)\n          resolve(data)\n        },\n        (err) => {\n          reject(err)\n        }\n      )\n    })\n  }\n\n  getUserAuth() {\n    return this.http.get<User>(`${this.baseUrl}/users/me`)\n  }\n\n  saveUser(body: UserBody) {\n    return this.http.post<User>(`${this.baseUrl}/users/admin`, body).pipe(\n      map((res) => {\n        this.fetchUsers()\n        return res\n      })\n    )\n  }\n\n  updateUser(body: UserBody, id: string, isAdmin: boolean = true) {\n    const url = isAdmin ? `${this.baseUrl}/users/admin/${id}` : `${this.baseUrl}/users/me`\n    return this.http.put<User>(url, body).pipe(\n      map((res) => {\n        this.fetchUsers()\n        return res\n      })\n    )\n  }\n\n  deleteUser(id: string) {\n    return this.http.delete<User>(`${this.baseUrl}/users/admin/${id}`).pipe(\n      map((res) => {\n        this.fetchUsers()\n        return res\n      })\n    )\n  }\n\n  changePassword(body: { current_password: string; new_password: string }) {\n    return this.http.post(`${this.baseUrl}/users/me/changePassword`, body)\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { City, CurrentCities, State } from \"../models/geo.models\";\n\nconst STATES = [\n  { code: \"AL\", name: \"Alabama\" },\n  { code: \"AK\", name: \"Alaska\" },\n  { code: \"AZ\", name: \"Arizona\" },\n  { code: \"AR\", name: \"Arkansas\" },\n  { code: \"CA\", name: \"California\" },\n  { code: \"CO\", name: \"Colorado\" },\n  { code: \"CT\", name: \"Connecticut\" },\n  { code: \"DE\", name: \"Delaware\" },\n  { code: \"DC\", name: \"District of Columbia\" },\n  { code: \"FL\", name: \"Florida\" },\n  { code: \"GA\", name: \"Georgia\" },\n  { code: \"HI\", name: \"Hawaii\" },\n  { code: \"ID\", name: \"Idaho\" },\n  { code: \"IL\", name: \"Illinois\" },\n  { code: \"IN\", name: \"Indiana\" },\n  { code: \"IA\", name: \"Iowa\" },\n  { code: \"KS\", name: \"Kansas\" },\n  { code: \"KY\", name: \"Kentucky\" },\n  { code: \"LA\", name: \"Louisiana\" },\n  { code: \"ME\", name: \"Maine\" },\n  { code: \"MD\", name: \"Maryland\" },\n  { code: \"MA\", name: \"Massachusetts\" },\n  { code: \"MI\", name: \"Michigan\" },\n  { code: \"MN\", name: \"Minnesota\" },\n  { code: \"MS\", name: \"Mississippi\" },\n  { code: \"MO\", name: \"Missouri\" },\n  { code: \"MT\", name: \"Montana\" },\n  { code: \"NE\", name: \"Nebraska\" },\n  { code: \"NV\", name: \"Nevada\" },\n  { code: \"NH\", name: \"New Hampshire\" },\n  { code: \"NJ\", name: \"New Jersey\" },\n  { code: \"NM\", name: \"New Mexico\" },\n  { code: \"NY\", name: \"New York\" },\n  { code: \"NC\", name: \"North Carolina\" },\n  { code: \"ND\", name: \"North Dakota\" },\n  { code: \"OH\", name: \"Ohio\" },\n  { code: \"OK\", name: \"Oklahoma\" },\n  { code: \"OR\", name: \"Oregon\" },\n  { code: \"PA\", name: \"Pennsylvania\" },\n  { code: \"RI\", name: \"Rhode Island\" },\n  { code: \"SC\", name: \"South Carolina\" },\n  { code: \"SD\", name: \"South Dakota\" },\n  { code: \"TN\", name: \"Tennessee\" },\n  { code: \"TX\", name: \"Texas\" },\n  { code: \"UT\", name: \"Utah\" },\n  { code: \"VT\", name: \"Vermont\" },\n  { code: \"VA\", name: \"Virginia\" },\n  { code: \"WA\", name: \"Washington\" },\n  { code: \"WV\", name: \"West Virginia\" },\n  { code: \"WI\", name: \"Wisconsin\" },\n  { code: \"WY\", name: \"Wyoming\" },\n];\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GeoService {\n  private baseUrl = environment.apiUrl;\n\n  public states: State[] = STATES;\n  public currentCities: BehaviorSubject<CurrentCities> = new BehaviorSubject({});\n\n  constructor(private http: HttpClient) {}\n\n  fetchCitiesByState(state: string) {\n    if (this.currentCities.getValue()[state]) return;\n    this.http.get<City[]>(`${this.baseUrl}/general/cities/${state}`).subscribe((data) => {\n      this.currentCities.next(Object.assign(this.currentCities.getValue(), { [state]: data }));\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { ValidatorsService } from \"src/app/core/validators.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { User } from \"../../business/models/user.models\";\nimport { UserService } from \"../../business/services/user.service\";\nimport { regexs } from \"../../core/config/constants\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"./change-password.component.html\",\n  styleUrls: [\"./change-password.component.scss\"],\n})\nexport class ChangePasswordComponent {\n  passForm: FormGroup;\n  options: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  user: User;\n  selectedState: string;\n  isLoading = false;\n  showPass = false;\n\n  constructor(\n    private userService: UserService,\n    private fb: FormBuilder,\n    public notificationService: NotificationService,\n    private router: Router,\n    private validatorsService: ValidatorsService\n  ) {\n    this.buildForms();\n  }\n\n  toggleShowPass(event: any) {\n    this.showPass = event.target.checked\n  }\n\n  private buildForms() {\n    this.passForm = this.fb.group(\n      {\n        current_password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n        new_password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n        repeat_password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n      },\n      {\n        validators: this.validatorsService.equalPasswords(\"new_password\", \"repeat_password\"),\n      }\n    );\n  }\n\n  onCancel() {\n    this.router.navigate([\"/\"]);\n  }\n\n  onSubmit() {\n    if (this.passForm.invalid) {\n      return Object.values(this.passForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n\n      const body = {\n        current_password: this.passForm.controls.current_password.value,\n        new_password: this.passForm.controls.new_password.value,\n      };\n      this.userService.changePassword(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Password updated\");\n          setTimeout(() => {\n            this.router.navigate([\"/\"]);\n          },700)\n        },\n        (err) => {\n          if (err.error?.message?.includes(\"Invalid current password\")) {\n            this.notificationService.error(\"Invalid current password\");\n          } else {\n            this.notificationService.error();\n          }\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n}\n","<div class=\"px-2 px-md-5 py-3\">\n  <div class=\"d-flex w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block\">Change password</h1>\n  </div>\n\n  <div class=\"mb-4\">\n    <div class=\"w-100 border-primary-2 rounded-xl\">\n      <div class=\"w-100 p-3 bg-primary text-white font-bold\">Passwords</div>\n      <div class=\"w-100 p-3 loader-container\">\n        <div *ngIf=\"isLoading\" class=\"loader\">\n          <mat-spinner [diameter]=\"50\"></mat-spinner>\n        </div>\n        <form class=\"form-group row mt-4 profile-form\" [formGroup]=\"passForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"col-12 mb-3\">\n            <label for=\"current_password\" class=\"text-dark text-base\">Current password</label>\n            <input\n              id=\"current_password\"\n              name=\"current_password\"\n              [type]=\"showPass ? 'text' : 'password'\"\n              class=\"form-control\"\n              formControlName=\"current_password\"\n              [class.is-invalid]=\"passForm.controls.current_password.touched && passForm.controls.current_password.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n              {{\n                passForm.controls.current_password.errors?.minlength || passForm.controls.current_password.errors?.maxlength\n                  ? \"Min 8 characters and max 20\"\n                  : \"Invalid field\"\n              }}\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"new_password\" class=\"text-dark text-base\">New password</label>\n            <input\n              id=\"new_password\"\n              name=\"new_password\"\n              [type]=\"showPass ? 'text' : 'password'\"\n              class=\"form-control\"\n              formControlName=\"new_password\"\n              [class.is-invalid]=\"passForm.controls.new_password.touched && passForm.controls.new_password.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n              {{\n                passForm.controls.new_password.errors?.minlength || passForm.controls.new_password.errors?.maxlength\n                  ? \"Min 8 characters and max 20\"\n                  : \"Invalid field\"\n              }}\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"repeat_password\" class=\"text-dark text-base\">Repeat password</label>\n            <input\n              id=\"repeat_password\"\n              name=\"repeat_password\"\n              [type]=\"showPass ? 'text' : 'password'\"\n              class=\"form-control\"\n              formControlName=\"repeat_password\"\n              [class.is-invalid]=\"passForm.controls.repeat_password.touched && passForm.controls.repeat_password.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n              {{\n                passForm.controls.repeat_password.errors?.minlength || passForm.controls.repeat_password.errors?.maxlength\n                  ? \"Min 8 characters and max 20\"\n                  : passForm.controls.repeat_password.errors?.notEqual ? \"Password does not match\" : \"Invalid field\"\n              }}\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"showPass\" (change)=\"toggleShowPass($event)\"/>\n              <label class=\"custom-control-label cursor-pointer text-md\" for=\"showPass\">Show passwords</label>\n            </div>\n          </div>\n\n          <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\n            </div>\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { SharedModule } from \"../shared/shared.module\";\n\nimport { HomeComponent } from \"./home/home.component\";\nimport { UserProfileComponent } from \"./user-profile/user-profile.component\";\nimport { ChangePasswordComponent } from \"./change-password/change-password.component\";\n\nexport const generalRoutes = [\n  {\n    path: \"\",\n    component: HomeComponent,\n  },\n  {\n    path: \"profile\",\n    component: UserProfileComponent,\n  },\n  {\n    path: \"change-password\",\n    component: ChangePasswordComponent,\n  },\n];\n\n@NgModule({\n  declarations: [HomeComponent, UserProfileComponent, ChangePasswordComponent],\n  imports: [CommonModule, RouterModule.forChild(generalRoutes), SharedModule],\n})\nexport class GeneralModule {}\n","<div class=\"px-2 px-md-5 py-3\">\n  <div class=\"d-flex w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block\">User Profile</h1>\n  </div>\n\n  <div class=\"mb-4\">\n    <div class=\"w-100 border-primary-2 rounded-xl\">\n      <div class=\"w-100 p-3 bg-primary text-white font-bold\">Profile info</div>\n      <div class=\"w-100 p-3 loader-container\">\n        <div *ngIf=\"isLoading\" class=\"loader\">\n          <mat-spinner [diameter]=\"50\"></mat-spinner>\n        </div>\n          <form class=\"form-group row mt-4 profile-form\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"col-12 col-md-6 mb-3\">\n              <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n              <input\n                id=\"first_name\"\n                name=\"first_name\"\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"first_name\"\n                [class.is-invalid]=\"userForm.controls.first_name.touched && userForm.controls.first_name.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 col-md-6 mb-3\">\n              <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n              <input\n                id=\"last_name\"\n                name=\"last_name\"\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"last_name\"\n                [class.is-invalid]=\"userForm.controls.last_name.touched && userForm.controls.last_name.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 mb-3\">\n              <label for=\"email\" class=\"text-dark text-base\">Email address</label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                class=\"form-control\"\n                formControlName=\"email\"\n                [class.is-invalid]=\"userForm.controls.email.touched && userForm.controls.email.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 mb-3\">\n              <label for=\"phone\" class=\"text-dark text-base\">Mobile phone</label>\n              <input\n                id=\"phone\"\n                name=\"phone\"\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"phone\"\n                [class.is-invalid]=\"userForm.controls.phone.touched && userForm.controls.phone.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 mb-3\">\n              <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n              <input\n                id=\"office_phone\"\n                name=\"office_phone\"\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"office_phone\"\n                [class.is-invalid]=\"userForm.controls.office_phone.touched && userForm.controls.office_phone.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 col-md-6 mb-3\">\n              <label for=\"address2\" class=\"text-dark text-base\">State</label>\n              <div class=\"custom-select-wrapper\">\n                <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n                  <option selected value=\"\">Select state...</option>\n                  <option *ngFor=\"let state of states\" [value]=\"state.code\" [selected]=\"state.code === user?.city?.state_code\">\n                    {{ state.name }}\n                  </option>\n                </select>\n                <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n              </div>\n            </div>\n    \n            <div class=\"col-12 col-md-6 mb-3\">\n              <label for=\"address2\" class=\"text-dark text-base\">City</label>\n              <div class=\"custom-select-wrapper\">\n                <select\n                  class=\"custom-select form-control\"\n                  formControlName=\"city\"\n                  [class.is-invalid]=\"userForm.controls.city.touched && userForm.controls.city.invalid\"\n                >\n                  <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\" [selected]=\"city.id === user.city.id\">\n                    {{ city.name }}\n                  </option>\n                </select>\n                <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n              </div>\n            </div>\n    \n            <div class=\"col-12 mb-3\">\n              <label for=\"driver_commission\" class=\"text-dark text-base\">Driver commission</label>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">%</span>\n                </div>\n                <input\n                  id=\"commission\"\n                  name=\"commission\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"commission\"\n                  [class.is-invalid]=\"userForm.controls.commission.touched && userForm.controls.commission.invalid\"\n                />\n                <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n              </div>\n            </div>\n\n            <div *ngIf=\"isAdmin\" class=\"col-12 px-2 py-2 d-flex flex-wrap\">\n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"canEmailInvoices\" formControlName=\"canEmailInvoices\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"canEmailInvoices\">Can Email Invoices?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"canModifyCustomers\" formControlName=\"canModifyCustomers\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"canModifyCustomers\">Can Modify Customer List?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"isManager\" formControlName=\"isManager\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"isManager\">Is Manager?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"isAdmin\" formControlName=\"isAdmin\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"isAdmin\">Is Admin?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"isDriver\" formControlName=\"isDriver\" disabled/>\n                  <label class=\"custom-control-label cursor-pointer\" for=\"isDriver\">Is Driver?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"receiveEmail\" formControlName=\"receiveEmail\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"receiveEmail\">Receive Email After Submit </label>\n                </div>\n              </div>\n            </div>\n\n          <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\n            </div>\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { User } from \"../../business/models/user.models\";\nimport { UserService } from \"../../business/services/user.service\";\nimport { regexs } from \"../../core/config/constants\";\nimport { AuthenticationService } from \"src/app/authentication/authentication.service\";\n\n@Component({\n  selector: \"app-user-profile\",\n  templateUrl: \"./user-profile.component.html\",\n  styleUrls: [\"./user-profile.component.scss\"],\n})\nexport class UserProfileComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  userForm: FormGroup;\n  options: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  user: User;\n  selectedState: string;\n  isLoading = false;\n  isAdmin = false;\n\n  constructor(\n    private userService: UserService,\n    private fb: FormBuilder,\n    private geoService: GeoService,\n    public notificationService: NotificationService,\n    private router: Router,\n    private authService: AuthenticationService\n  ) {\n    this.isAdmin = this.authService.isAdmin();\n    this.buildForms();\n    const sub = this.userService.getUserAuth().subscribe((data) => {\n      this.user = data;\n      if (data) {\n        this.loadFormData();\n      }\n    });\n    this.subscriptions.push(sub);\n  }\n\n  ngOnInit(): void {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  private buildForms() {\n    this.userForm = this.fb.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      first_name: [\"\", [Validators.required]],\n      last_name: [\"\", [Validators.required]],\n      phone: [\"\", [Validators.required]],\n      office_phone: [\"\", [Validators.required]],\n      city: [\"\", [Validators.required, Validators.pattern(regexs.mongoId)]],\n      commission: [\"\", [Validators.required]],\n      canEmailInvoices: [false],\n      canModifyCustomers: [false],\n      isManager: [false],\n      isAdmin: [false],\n      isDriver: [false],\n      receiveEmail: [false],\n    });\n  }\n\n  loadFormData() {\n    if (this.user) {\n      this.userForm.setValue({\n        email: this.user.email,\n        first_name: this.user.first_name,\n        last_name: this.user.last_name,\n        phone: this.user.phone,\n        office_phone: this.user.office_phone,\n        city: this.user.city.id,\n        commission: this.user.commission,\n        canEmailInvoices: this.user.roles?.includes(\"INVOICE_EMAIL\"),\n        canModifyCustomers: this.user.roles?.includes(\"HANDLE_CUSTOMERS\"),\n        isManager: this.user.roles?.includes(\"MANAGER\"),\n        isAdmin: this.user.roles?.includes(\"ADMIN\"),\n        isDriver: this.user.roles?.includes(\"USER\"),\n        receiveEmail: false,\n      });\n\n      this.selectedState = this.user.city.state_code;\n      this.geoService.fetchCitiesByState(this.user.city.state_code);\n    }\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.userForm.controls.city.reset();\n  }\n\n  onCancel() {\n    this.router.navigate([\"/\"]);\n  }\n\n  onSubmit() {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const { isManager, canModifyCustomers, canEmailInvoices, isDriver, isAdmin, receiveEmail, commission, ...rest } = this.userForm.value;\n\n      const body = rest;\n      if (this.isAdmin) {\n        body.commission = commission;\n        body.options = {\n          isManager,\n          canModifyCustomers,\n          canEmailInvoices,\n          isDriver,\n          isAdmin,\n          receiveEmail,\n        };\n      }\n\n      this.userService.updateUser(body, this.user.id, this.isAdmin).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Profile updated\");\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DashboardInfo } from \"src/app/business/models/company.models\";\nimport { CompanyService } from \"src/app/business/services/company.service\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  info: DashboardInfo;\n  time: \"week\" | \"month\" = \"week\";\n\n  constructor(private companyService: CompanyService) {\n    const sub = this.companyService.dashboardInfo.subscribe((data) => {\n      this.info = data;\n    });\n\n    this.subscriptions.push(sub);\n  }\n\n  ngOnInit(): void {\n    this.companyService.fetchDashboardInfo(this.time);\n  }\n\n  changeTime(time: \"week\" | \"month\") {\n    this.time = time;\n    this.companyService.fetchDashboardInfo(time);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"px-2 px-md-5 pt-3\">\n  <div class=\"d-flex justify-content-between col-12 align-items-end mb-4\">\n    <div>\n      <h1 class=\"text-dark content-title\">Dashboard</h1>\n      <span class=\"content-sub-title\"\n        >Data from <b>{{ info?.dateFrom || 0 | date: \"MM/dd/yyyy\" }}</b> to <b>{{ info?.dateTo | date: \"MM/dd/yyyy\" }}</b></span\n      >\n    </div>\n    <div>\n      <div class=\"d-flex\">\n        <button class=\"btn font-weight-bold time-btn rounded-sm\" [class.active]=\"time === 'week'\" (click)=\"changeTime('week')\">\n          Weekly\n        </button>\n        <button class=\"btn font-weight-bold time-btn rounded-sm\" [class.active]=\"time === 'month'\" (click)=\"changeTime('month')\">\n          Monthly\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row text-dark\">\n    <div class=\"col-12 p-3 rounded-lg\">\n      <div class=\"justify-content-between items-grid\">\n        <!-- MAIN INFO CARDS -->\n        <div class=\"item-card-big d-flex justify-content-between align-items-center px-3 py-4 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"text-3xl\">group</mat-icon>\n            <div class=\"ml-3 text-xl\">Total customers</div>\n          </div>\n          <span class=\"text-2xl\">{{ info?.customersCount || 0 }}</span>\n        </div>\n\n        <div class=\"item-card-big d-flex justify-content-between align-items-center px-3 py-4 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"text-3xl\">attach_money</mat-icon>\n            <div class=\"ml-3 text-xl\">Revenue</div>\n          </div>\n          <span class=\"text-2xl\">{{ info?.revenue || 0 | currency }}</span>\n        </div>\n\n        <!-- INFO LIST -->\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">settings</mat-icon>\n            <div class=\"ml-3\">Admins</div>\n          </div>\n          <span>{{ info?.userAdmins || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">group</mat-icon>\n            <div class=\"ml-3\">Drivers</div>\n          </div>\n          <span>{{ info?.userDriver || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">group</mat-icon>\n            <div class=\"ml-3\">Managers</div>\n          </div>\n          <span>{{ info?.userManager || 0 }}</span>\n        </div>\n        <!-- \n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">group</mat-icon>\n            <div class=\"ml-3\">Drivers(inactive)</div>\n          </div>\n          <span>12</span>\n        </div> -->\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">list_alt</mat-icon>\n            <div class=\"ml-3\">Driver draft invoices</div>\n          </div>\n          <span>{{ info?.draftInvoices || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">list_alt</mat-icon>\n            <div class=\"ml-3\">Submited for review invoices</div>\n          </div>\n          <span>{{ info?.reviewInvoices || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">list_alt</mat-icon>\n            <div class=\"ml-3\">Submited to customers invoices</div>\n          </div>\n          <span>{{ info?.submittedInvoices || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">directions_car</mat-icon>\n            <div class=\"ml-3\">Units</div>\n          </div>\n          <span>{{ info?.units || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">directions_car</mat-icon>\n            <div class=\"ml-3\">Units YTD</div>\n          </div>\n          <span>{{ info?.unitsYTD || 0 }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"]}
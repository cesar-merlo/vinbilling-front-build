{"version":3,"sources":["webpack:///src/app/company/users/new-user-dialog/new-user-dialog.component.ts","webpack:///src/app/company/users/new-user-dialog/new-user-dialog.component.html","webpack:///src/app/company/rates/edit-rate-dialog/edit-rate-dialog.component.ts","webpack:///src/app/company/rates/edit-rate-dialog/edit-rate-dialog.component.html","webpack:///src/app/company/customers/customer.component.ts","webpack:///src/app/company/customers/customers.component.html","webpack:///src/app/company/customers/new-customer-dialog/new-customer-dialog.component.ts","webpack:///src/app/company/customers/new-customer-dialog/new-customer-dialog.component.html","webpack:///src/app/company/users/users.component.ts","webpack:///src/app/company/users/users.component.html","webpack:///src/app/company/company.module.ts","webpack:///src/app/company/rates/new-rate-dialog/new-rate-dialog.component.ts","webpack:///src/app/company/rates/new-rate-dialog/new-rate-dialog.component.html","webpack:///src/app/company/users/edit-user-dialog/edit-user-dialog.component.ts","webpack:///src/app/company/users/edit-user-dialog/edit-user-dialog.component.html","webpack:///src/app/company/rates/rates.component.ts","webpack:///src/app/company/rates/rates.component.html","webpack:///src/app/company/customers/edit-customer-dialog/edit-customer-dialog.component.ts","webpack:///src/app/company/customers/edit-customer-dialog/edit-customer-dialog.component.html","webpack:///src/app/company/profile/profile.component.html","webpack:///src/app/company/profile/profile.component.ts"],"names":["NewUserDialogComponent","dialogRef","data","fb","userService","geoService","notificationService","validatorsService","subscriptions","states","cities","isLoading","buildForms","sub","currentCities","subscribe","push","userForm","group","email","required","password","minLength","maxLength","confirm_password","first_name","last_name","phone","pattern","numbers","office_phone","city","mongoId","commission","validators","equalPasswords","options","canEmailInvoices","canModifyCustomers","isManager","isAdmin","isDriver","receiveEmail","event","selectedState","target","value","fetchCitiesByState","controls","reset","stepper","previous","invalid","Object","values","forEach","control","markAsTouched","next","body","saveUser","res","success","close","err","error","message","setErrors","alreadyTaken","goBack","unsubscribe","saveFirst","onStateChange","onSubmit","selector","templateUrl","styleUrls","EditRateDialogComponent","rateService","rate","rateForm","amount","updateRate","id","CustomersComponent","dialog","dialogService","customerService","displayedColumns","pageSizeOptions","items","customers","showLoader","fetchCustomers","hideLoader","filterPredicate","filter","name","toLowerCase","indexOf","address_line_1","primary_contact","toString","filterValue","trim","toLocaleLowerCase","open","width","customer","showConfirm","title","msg","loading","deleteCustomer","sort","paginator","applyFilter","openNewDialog","NewCustomerDialogComponent","customerDataForm","address_line_2","city_id","zip","main_phone","main_phone_extension","fax","primaryContactForm","office_phone_extension","mobile_phone","mobile_phone_extension","saveCustomer","UsersComponent","authService","isEditionAble","users","map","user","mainRole","roles","includes","a","b","updatedAt","fetchUsers","deleteUser","companyRoutes","path","redirectTo","component","CompanyModule","forChild","declarations","imports","NewRateDialogComponent","origination_city_id","destination_city_id","type","state","selectedOrigState","selectedDestState","saveRate","EditUserDialogComponent","state_code","updateUser","RatesComponent","rates","length","fetchRates","deleteRate","EditCustomerDialogComponent","updateCustomer","ProfileComponent","companyService","router","buildForm","company","loadFormData","fetchCompany","profileForm","disabled","contact_name","starting_invoice_number","setValue","navigate","updateCompany"],"mappings":"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","file":"company-company-module-es5.js","sourcesContent":["import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatStepper } from \"@angular/material/stepper\";\nimport { Subscription } from \"rxjs\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { UserService } from \"src/app/business/services/user.service\";\nimport { ValidatorsService } from \"src/app/core/validators.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { regexs } from \"src/app/core/config/constants\";\n\n@Component({\n  selector: \"app-new-user-dialog\",\n  templateUrl: \"./new-user-dialog.component.html\",\n  styleUrls: [\"./new-user-dialog.component.scss\"],\n})\nexport class NewUserDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  userForm: FormGroup;\n  options: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedState: string;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<NewUserDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private userService: UserService,\n    private geoService: GeoService,\n    public notificationService: NotificationService,\n    private validatorsService: ValidatorsService\n  ) {\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  private buildForms() {\n    this.userForm = this.fb.group(\n      {\n        email: [\"\", [Validators.required, Validators.email]],\n        password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n        confirm_password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n        first_name: [\"\", [Validators.required]],\n        last_name: [\"\", [Validators.required]],\n        phone: [\"\", [Validators.required,Validators.pattern(regexs.numbers)]],\n        office_phone: [\"\",[Validators.pattern(regexs.numbers)]],\n        city: [\"\", [Validators.required, Validators.pattern(regexs.mongoId)]],\n        commission: [\"\"],\n      },\n      {\n        validators: this.validatorsService.equalPasswords(\"password\", \"confirm_password\"),\n      }\n    );\n\n    this.options = this.fb.group({\n      canEmailInvoices: [false],\n      canModifyCustomers: [false],\n      isManager: [false],\n      isAdmin: [false],\n      isDriver: [true],\n      receiveEmail: [false],\n    });\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.userForm.controls.city.reset();\n  }\n\n  goBack(stepper: MatStepper) {\n    stepper.previous();\n  }\n\n  saveFirst(stepper: MatStepper) {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      stepper.next();\n    }\n  }\n\n  onSubmit(stepper: MatStepper) {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const body = {\n        ...this.userForm.value,\n        commission: this.userForm.value.commission > 0 ? this.userForm.value.commission : 0,\n        options: this.options.value,\n      };\n      delete body.confirm_password;\n\n      this.userService.saveUser(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"User added\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          if (err?.error?.message === \"Email already taken\") {\n            this.notificationService.error(err?.error?.message);\n            this.userForm.controls.email.setErrors({ alreadyTaken: true });\n            this.goBack(stepper);\n          } else {\n            this.notificationService.error();\n          }\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content custom-scroll\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>New User</h3>\n  <mat-horizontal-stepper linear #stepper>\n    <!-- STEP 1 -->\n    <!-- customer data -->\n    <mat-step label=\"User data\" [completed]=\"userForm.valid\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"userForm\" (ngSubmit)=\"saveFirst(stepper)\">\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n          <input\n            id=\"first_name\"\n            name=\"first_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"first_name\"\n            [class.is-invalid]=\"userForm.controls.first_name.touched && userForm.controls.first_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n          <input\n            id=\"last_name\"\n            name=\"last_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"last_name\"\n            [class.is-invalid]=\"userForm.controls.last_name.touched && userForm.controls.last_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"email\" class=\"text-dark text-base\">Email address</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            formControlName=\"email\"\n            [class.is-invalid]=\"userForm.controls.email.touched && userForm.controls.email.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"password\" class=\"text-dark text-base\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            class=\"form-control\"\n            formControlName=\"password\"\n            [class.is-invalid]=\"userForm.controls.password.touched && userForm.controls.password.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n            {{userForm.controls.password.errors?.minlength || userForm.controls.password.errors?.maxlength ? \"Min 8 characters and max 20\" : \"Invalid field\" }}\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"confirm_password\" class=\"text-dark text-base\">Confirm password</label>\n          <input\n            id=\"confirm_password\"\n            name=\"confirm_password\"\n            type=\"password\"\n            class=\"form-control\"\n            formControlName=\"confirm_password\"\n            [class.is-invalid]=\"userForm.controls.confirm_password.touched && userForm.controls.confirm_password.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n            {{userForm.controls.confirm_password.errors?.minlength || userForm.controls.confirm_password.errors?.maxlength ? \"Min 8 characters and max 20\" : \"Invalid field\" }}\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone\" class=\"text-dark text-base\">Mobile phone</label>\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"phone\"\n            [class.is-invalid]=\"userForm.controls.phone.touched && userForm.controls.phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n          <input\n            id=\"office_phone\"\n            name=\"office_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone\"\n            [class.is-invalid]=\"userForm.controls.office_phone.touched && userForm.controls.office_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">State</label>\n          <div class=\"custom-select-wrapper\">\n            <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n              <option selected value=\"\">Select state...</option>\n              <option *ngFor=\"let state of states\" [value]=\"state.code\">{{ state.name }}</option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">City</label>\n          <div class=\"custom-select-wrapper\">\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"city\"\n              [class.is-invalid]=\"userForm.controls.city.touched && userForm.controls.city.invalid\"\n            >\n              <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\">{{ city.name }}</option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"driver_commission\" class=\"text-dark text-base\">Driver commission</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">%</span>\n            </div>\n            <input\n              id=\"commission\"\n              name=\"commission\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"commission\"\n              [class.is-invalid]=\"userForm.controls.commission.touched && userForm.controls.commission.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-primary\" type=\"submit\">Next</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n    <!-- STEP 2 -->\n    <!-- cutomer contact data -->\n    <mat-step label=\"Permissions\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"options\" (ngSubmit)=\"onSubmit(stepper)\">\n        <div class=\"col-12 px-2 py-2\">\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"canEmailInvoices\" formControlName=\"canEmailInvoices\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"canEmailInvoices\">Can Email Invoices?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"canModifyCustomers\" formControlName=\"canModifyCustomers\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"canModifyCustomers\">Can Modify Customer List?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isManager\" formControlName=\"isManager\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isManager\">Is Manager?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isAdmin\" formControlName=\"isAdmin\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isAdmin\">Is Admin?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isDriver\" formControlName=\"isDriver\" disabled />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isDriver\">Is Driver?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"receiveEmail\" formControlName=\"receiveEmail\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"receiveEmail\">Receive Email After Submit </label>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"goBack(stepper)\">Back</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n  </mat-horizontal-stepper>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Subscription } from \"rxjs\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { Rate } from \"src/app/business/models/rate.models\";\nimport { RateService } from \"src/app/business/services/rate.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\n\nexport interface EditRateDialogData {\n  rate: any;\n}\n\n@Component({\n  selector: \"app-edit-rate-dialog\",\n  templateUrl: \"./edit-rate-dialog.component.html\",\n  styleUrls: [\"./edit-rate-dialog.component.scss\"],\n})\nexport class EditRateDialogComponent implements OnDestroy {\n  subscriptions: Subscription[] = [];\n  rateForm: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  rate: Rate;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditRateDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: EditRateDialogData,\n    private fb: FormBuilder,\n    private rateService: RateService,\n    public notificationService: NotificationService\n  ) {\n    this.rate = this.data.rate;\n    this.buildForms();\n  }\n\n  private buildForms() {\n    this.rateForm = this.fb.group({\n      amount: [this.rate.amount, [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    if (this.rateForm.invalid) {\n      return Object.values(this.rateForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const body = this.rateForm.value;\n      this.rateService.updateRate(body, this.rate.id).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Rate updated\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>Edit Rate</h3>\n  <form class=\"form-group row mt-4 new-rate-form\" [formGroup]=\"rateForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Origination state</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" disabled>\n          <option value=\"\" selected>{{ rate.origination_city.state_name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Origination city</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" disabled>\n          <option value=\"\" selected>{{ rate.origination_city.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Destination state</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" disabled>\n          <option value=\"\" selected>{{ rate.destination_city.state_name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Destination city</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" disabled>\n          <option value=\"\" selected>{{ rate.destination_city.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"amount\" class=\"text-dark text-base\">Amount</label>\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">$</span>\n        </div>\n        <input\n          id=\"amount\"\n          name=\"amount\"\n          type=\"number\"\n          class=\"form-control\"\n          formControlName=\"amount\"\n          [class.is-invalid]=\"rateForm.controls.amount.touched && rateForm.controls.amount.invalid\"\n        />\n        <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n      </div>\n    </div>\n\n    <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n      <div class=\"col-5\">\n        <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n      </div>\n      <div class=\"col-5\">\n        <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { MatDialog } from '@angular/material/dialog'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { MatSort } from '@angular/material/sort'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { Subscription } from 'rxjs'\nimport { CustomerService } from 'src/app/business/services/customer.service'\nimport { Customer } from 'src/app/business/models/customer.models'\nimport { DialogService } from 'src/app/shared/dialogs/dialog.service'\nimport { NotificationService } from 'src/app/shared/notifications/notification.service'\nimport {\n  EditCustomerDialogComponent,\n  EditCustomerDialogData,\n} from './edit-customer-dialog/edit-customer-dialog.component'\nimport { NewCustomerDialogComponent } from './new-customer-dialog/new-customer-dialog.component'\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n})\nexport class CustomersComponent implements AfterViewInit, OnInit, OnDestroy {\n  displayedColumns = ['name', 'address', 'contact_name', 'actions']\n  pageSizeOptions: number[] = [12, 24, 50, 100]\n\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatPaginator) paginator: MatPaginator\n\n  subscriptions: Subscription[] = []\n  items: MatTableDataSource<any>\n  customers: Customer[]\n  loading: boolean\n\n  constructor(\n    public dialog: MatDialog,\n    private dialogService: DialogService,\n    private customerService: CustomerService,\n    public notificationService: NotificationService\n  ) {\n    this.items = new MatTableDataSource([])\n    const sub = customerService.customers.subscribe((data) => {\n      this.customers = data\n      this.items.data = data\n    })\n    this.subscriptions.push(sub)\n  }\n\n  ngOnInit() {\n    this.dialogService.showLoader()\n    this.customerService.fetchCustomers().finally(() => {\n      this.dialogService.hideLoader()\n    })\n\n    //custom table filters\n    this.items.filterPredicate = (data: Customer, filter: string) => {\n      return (\n        data.name?.toLowerCase().indexOf(filter) !== -1 ||\n        data.address_line_1?.toLowerCase().indexOf(filter) !== -1 ||\n        data.primary_contact?.first_name.toString().toLowerCase().indexOf(filter) !== -1 ||\n        data.primary_contact?.last_name.toString().toLowerCase().indexOf(filter) !== -1\n      )\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.items.filter = filterValue.trim().toLocaleLowerCase()\n  }\n\n  openNewDialog() {\n    this.dialog.open<NewCustomerDialogComponent, any>(NewCustomerDialogComponent, {\n      width: '700px',\n    })\n  }\n\n  openEditDialog(customer: Customer) {\n    this.dialog.open<EditCustomerDialogComponent, EditCustomerDialogData>(EditCustomerDialogComponent, {\n      width: '700px',\n      data: {\n        customer,\n      },\n    })\n  }\n\n  onDelete(customer: Customer) {\n    this.dialogService.showConfirm({ title: 'Delete customer', msg: 'Are you sure?' }, () => {\n      this.loading = true\n      this.customerService.deleteCustomer(customer.id).subscribe(\n        (res) => {\n          this.loading = false\n          this.notificationService.success('Customer deleted')\n        },\n        (err) => {\n          this.loading = false\n          this.notificationService.error()\n        }\n      )\n    })\n  }\n\n  ngAfterViewInit() {\n    this.items.sort = this.sort\n    this.items.paginator = this.paginator\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe())\n  }\n}\n","<div class=\"px-2 px-md-5 py-3 position-relative\">\n  <div *ngIf=\"loading\" class=\"loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <div class=\"d-flex flex-wrap w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block content-title\">Customers</h1>\n    <div class=\"d-flex content-options-bar\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">\n            <i class=\"fas fa-search\"></i>\n          </span>\n        </div>\n        <input type=\"text\" class=\"form-control\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter by any field...\" />\n      </div>\n      <button (click)=\"openNewDialog()\" class=\"btn font-weight-bold bg-blue-main text-light ml-3\">+Add</button>\n    </div>\n  </div>\n\n  <div class=\"row mb-4\">\n    <div class=\"col-12 table-wrapper table-responsive\">\n      <table mat-table [dataSource]=\"items\" class=\"table table-borderless table-striped\" matSort>\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef>Name</th>\n          <td mat-cell *matCellDef=\"let customer\">{{ customer.name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"address\">\n          <th mat-header-cell *matHeaderCellDef>Address</th>\n          <td mat-cell *matCellDef=\"let customer\">{{ customer.address_line_1 }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"contact_name\">\n          <th mat-header-cell *matHeaderCellDef>Contact name</th>\n          <td mat-cell *matCellDef=\"let customer\">\n            {{ customer.primary_contact?.first_name + \" \" + customer.primary_contact?.last_name }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let customer\">\n            <div class=\"action-buttons\">\n              <button (click)=\"openEditDialog(customer)\" class=\"text-dark mr-4\" aria-label=\"edit\">\n                <i class=\"fas fa-edit text-xl\"></i>\n              </button>\n              <button (click)=\"onDelete(customer)\" class=\"text-dark\" aria-label=\"edit\">\n                <i class=\"fas fa-trash-alt text-xl\"></i>\n              </button>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <div *ngIf=\"!items.data.length || !items.filteredData.length\" class=\"text-center border py-3 mt-n3 table-width\">No customers found</div>\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"> </mat-paginator>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatStepper } from \"@angular/material/stepper\";\nimport { Subscription } from \"rxjs\";\nimport { CustomerService } from \"src/app/business/services/customer.service\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { regexs } from \"src/app/core/config/constants\";\n\n@Component({\n  selector: \"app-new-customer-dialog\",\n  templateUrl: \"./new-customer-dialog.component.html\",\n  styleUrls: [\"./new-customer-dialog.component.scss\"],\n})\nexport class NewCustomerDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  customerDataForm: FormGroup;\n  primaryContactForm: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedState: string;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<NewCustomerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private customerService: CustomerService,\n    private geoService: GeoService,\n    public notificationService: NotificationService\n  ) {\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  private buildForms() {\n    this.customerDataForm = this.fb.group({\n      name: [\"\", [Validators.required]],\n      address_line_1: [\"\", [Validators.required]],\n      address_line_2: [\"\", []],\n      city_id: [\"\", [Validators.required, Validators.pattern(regexs.mongoId)]],\n      zip: [\"\", [Validators.required, Validators.pattern(regexs.zip)]],\n      main_phone: [\"\", [Validators.required,Validators.pattern(regexs.numbers)]],\n      main_phone_extension: [\"\", [Validators.pattern(regexs.numbers)]],\n      fax: [\"\", [Validators.pattern(regexs.numbers)]],\n    });\n\n    this.primaryContactForm = this.fb.group({\n      first_name: [\"\", []],\n      last_name: [\"\", []],\n      email: [\"\", [, Validators.email]],\n      office_phone: [\"\", [Validators.pattern(regexs.numbers)]],\n      office_phone_extension: [\"\", [Validators.pattern(regexs.numbers)]],\n      fax: [\"\", [Validators.pattern(regexs.numbers)]],\n      mobile_phone: [\"\", [Validators.pattern(regexs.numbers)]],\n      mobile_phone_extension: [\"\", [Validators.pattern(regexs.numbers)]],\n    });\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.customerDataForm.controls.city_id.reset();\n  }\n\n  goBack(stepper: MatStepper) {\n    stepper.previous();\n  }\n\n  saveFirst(stepper: MatStepper) {\n    if (this.customerDataForm.invalid) {\n      return Object.values(this.customerDataForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      stepper.next();\n    }\n  }\n\n  onSubmit() {\n    if (this.primaryContactForm.invalid) {\n      return Object.values(this.primaryContactForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      //save customer\n      this.isLoading = true;\n      const body = {\n        ...this.customerDataForm.value,\n        primary_contact: this.primaryContactForm.value,\n      };\n      this.customerService.saveCustomer(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Customer added\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content custom-scroll\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>New Customer</h3>\n  <mat-horizontal-stepper linear #stepper>\n    <!-- STEP 1 -->\n    <!-- customer data -->\n    <mat-step label=\"Customer data\" [completed]=\"customerDataForm.valid\">\n      <form class=\"form-group row mt-4 new-customer-form custom-scroll\" [formGroup]=\"customerDataForm\" (ngSubmit)=\"saveFirst(stepper)\">\n        <div class=\"col-12 mb-3\">\n          <label for=\"name\" class=\"text-dark text-base\">Customer name</label>\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"name\"\n            [class.is-invalid]=\"customerDataForm.controls.name.touched && customerDataForm.controls.name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address1\" class=\"text-dark text-base\">Address Line 1</label>\n          <input\n            id=\"address1\"\n            name=\"address1\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"address_line_1\"\n            [class.is-invalid]=\"customerDataForm.controls.address_line_1.touched && customerDataForm.controls.address_line_1.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">Address Line 2</label>\n          <input\n            id=\"address2\"\n            name=\"address2\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"address_line_2\"\n            [class.is-invalid]=\"customerDataForm.controls.address_line_2.touched && customerDataForm.controls.address_line_2.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"state\" class=\"text-dark text-base\">State</label>\n          <div class=\"custom-select-wrapper\">\n            <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n              <option selected value=\"\">Select state...</option>\n              <option *ngFor=\"let state of states\" [value]=\"state.code\">{{ state.name }}</option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"city_id\" class=\"text-dark text-base\">City</label>\n          <div class=\"custom-select-wrapper\">\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"city_id\"\n              [class.is-invalid]=\"customerDataForm.controls.city_id.touched && customerDataForm.controls.city_id.invalid\"\n            >\n              <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\">{{ city.name }}</option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"zip\" class=\"text-dark text-base\">Zip</label>\n          <input\n            id=\"zip\"\n            name=\"zip\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"zip\"\n            [class.is-invalid]=\"customerDataForm.controls.zip.touched && customerDataForm.controls.zip.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone\" class=\"text-dark text-base\">Main phone</label>\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"main_phone\"\n            [class.is-invalid]=\"customerDataForm.controls.main_phone.touched && customerDataForm.controls.main_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone_extension\" class=\"text-dark text-base\">Main phone extension</label>\n          <input\n            id=\"phone_extension\"\n            name=\"phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"main_phone_extension\"\n            [class.is-invalid]=\"\n              customerDataForm.controls.main_phone_extension.touched && customerDataForm.controls.main_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n          <input\n            id=\"fax\"\n            name=\"fax\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"fax\"\n            [class.is-invalid]=\"customerDataForm.controls.fax.touched && customerDataForm.controls.fax.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-primary\" type=\"submit\">Next</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n    <!-- STEP 2 -->\n    <!-- cutomer contact data -->\n    <mat-step label=\"Primary contact\">\n      <form class=\"form-group row mt-4 new-customer-form custom-scroll\" [formGroup]=\"primaryContactForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"col-6 mb-3\">\n          <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n          <input\n            id=\"first_name\"\n            name=\"first_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"first_name\"\n            [class.is-invalid]=\"primaryContactForm.controls.first_name.touched && primaryContactForm.controls.first_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-6 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n          <input\n            id=\"last_name\"\n            name=\"last_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"last_name\"\n            [class.is-invalid]=\"primaryContactForm.controls.last_name.touched && primaryContactForm.controls.last_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Email</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            formControlName=\"email\"\n            [class.is-invalid]=\"primaryContactForm.controls.email.touched && primaryContactForm.controls.email.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n          <input\n            id=\"office_phone\"\n            name=\"office_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone\"\n            [class.is-invalid]=\"primaryContactForm.controls.office_phone.touched && primaryContactForm.controls.office_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone_extension\" class=\"text-dark text-base\">Office phone extension</label>\n          <input\n            id=\"office_phone_extension\"\n            name=\"office_phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone_extension\"\n            [class.is-invalid]=\"\n              primaryContactForm.controls.office_phone_extension.touched && primaryContactForm.controls.office_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n          <input\n            id=\"fax\"\n            name=\"fax\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"fax\"\n            [class.is-invalid]=\"primaryContactForm.controls.fax.touched && primaryContactForm.controls.fax.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"mobile_phone\" class=\"text-dark text-base\">Mobile phone</label>\n          <input\n            id=\"mobile_phone\"\n            name=\"mobile_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"mobile_phone\"\n            [class.is-invalid]=\"primaryContactForm.controls.mobile_phone.touched && primaryContactForm.controls.mobile_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"mobile_phone_extension\" class=\"text-dark text-base\">Mobile phone extension</label>\n          <input\n            id=\"mobile_phone_extension\"\n            name=\"mobile_phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"mobile_phone_extension\"\n            [class.is-invalid]=\"\n              primaryContactForm.controls.mobile_phone_extension.touched && primaryContactForm.controls.mobile_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"goBack(stepper)\">Back</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n  </mat-horizontal-stepper>\n</div>\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { MatDialog } from '@angular/material/dialog'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { MatSort } from '@angular/material/sort'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { Subscription } from 'rxjs'\nimport { AuthenticationService } from 'src/app/authentication/authentication.service'\nimport { User } from 'src/app/business/models/user.models'\nimport { UserService } from 'src/app/business/services/user.service'\nimport { DialogService } from 'src/app/shared/dialogs/dialog.service'\nimport { NotificationService } from 'src/app/shared/notifications/notification.service'\nimport { EditUserDialogComponent, EditUserDialogData } from './edit-user-dialog/edit-user-dialog.component'\nimport { NewUserDialogComponent } from './new-user-dialog/new-user-dialog.component'\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements AfterViewInit, OnInit, OnDestroy {\n  displayedColumns = ['first_name', 'last_name', 'email', 'role', 'actions']\n  pageSizeOptions: number[] = [12, 24, 50, 100]\n\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatPaginator) paginator: MatPaginator\n\n  subscriptions: Subscription[] = []\n  items: MatTableDataSource<User>\n  users: User[]\n  loading: boolean = false\n  isEditionAble = false\n\n  constructor(\n    public dialog: MatDialog,\n    private dialogService: DialogService,\n    private userService: UserService,\n    private notificationService: NotificationService,\n    private authService: AuthenticationService\n  ) {\n    this.isEditionAble = this.authService.isAdmin()\n    this.items = new MatTableDataSource([])\n    const sub = userService.users.subscribe((data) => {\n      if (data) {\n        this.users = data.map((user) => ({\n          ...user,\n          mainRole: user.roles.includes('ADMIN') ? 'Admin' : user.roles.includes('MANAGER') ? 'Manager' : 'Driver',\n        }))\n        this.items.data = this.users?.sort((a, b) =>\n          a.updatedAt < b.updatedAt ? 1 : a.updatedAt > b.updatedAt ? -1 : 0\n        )\n      }\n    })\n    this.subscriptions.push(sub)\n  }\n\n  ngOnInit() {\n    this.dialogService.showLoader()\n    this.userService.fetchUsers().finally(() => {\n      this.dialogService.hideLoader()\n    })\n  }\n\n  applyFilter(filterValue: string) {\n    this.items.filter = filterValue.trim().toLocaleLowerCase()\n  }\n\n  openNewDialog() {\n    if (!this.isEditionAble) return\n\n    this.dialog.open<NewUserDialogComponent, any>(NewUserDialogComponent, {\n      width: '700px',\n    })\n  }\n\n  openEditDialog(user: any) {\n    if (!this.isEditionAble) return\n\n    this.dialog.open<EditUserDialogComponent, EditUserDialogData>(EditUserDialogComponent, {\n      width: '700px',\n      data: {\n        user,\n      },\n    })\n  }\n\n  onDelete(user: User) {\n    if (!this.isEditionAble) return\n\n    this.dialogService.showConfirm({ title: 'Delete user', msg: 'Are you sure?' }, () => {\n      this.loading = true\n      this.userService.deleteUser(user.id).subscribe(\n        (res) => {\n          this.loading = false\n          this.notificationService.success('User deleted')\n        },\n        (err) => {\n          this.loading = false\n          this.notificationService.error()\n        }\n      )\n    })\n  }\n\n  ngAfterViewInit() {\n    this.items.sort = this.sort\n    this.items.paginator = this.paginator\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe())\n  }\n}\n","<div class=\"px-2 px-md-5 py-3\">\n  <div *ngIf=\"loading\" class=\"loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <!-- content topbar -->\n  <div class=\"d-flex flex-wrap w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block content-title\">Users</h1>\n    <div class=\"d-flex content-options-bar\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">\n            <i class=\"fas fa-search\"></i>\n          </span>\n        </div>\n        <input type=\"text\" class=\"form-control\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter by any field...\" />\n      </div>\n      <button (click)=\"openNewDialog()\" class=\"btn font-weight-bold bg-blue-main text-light ml-3\" [disabled]=\"!isEditionAble\">+Add</button>\n    </div>\n  </div>\n\n  <!-- TABLE -->\n  <div class=\"row mb-4\">\n    <div class=\"col-12 table-wrapper table-responsive\">\n      <table mat-table [dataSource]=\"items\" class=\"table table-borderless table-striped\" matSort>\n        <ng-container matColumnDef=\"first_name\">\n          <th mat-header-cell *matHeaderCellDef>First name</th>\n          <td mat-cell *matCellDef=\"let user\" class=\"capitalize\">{{ user.first_name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"last_name\">\n          <th mat-header-cell *matHeaderCellDef>Last name</th>\n          <td mat-cell *matCellDef=\"let user\" class=\"capitalize\">{{ user.last_name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef>Email address</th>\n          <td mat-cell *matCellDef=\"let user\">{{ user.email }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"role\">\n          <th mat-header-cell *matHeaderCellDef>Role</th>\n          <td mat-cell *matCellDef=\"let user\">{{ user.mainRole }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let user\">\n            <div class=\"action-buttons\" [class.text-dark]=\"isEditionAble\" [class.text-secondary]=\"!isEditionAble\">\n              <button (click)=\"openEditDialog(user)\" class=\"mr-4\" aria-label=\"edit\" [disabled]=\"!isEditionAble\">\n                <i class=\"fas fa-user-edit text-xl\"></i>\n              </button>\n              <button (click)=\"onDelete(user)\" aria-label=\"edit\" [disabled]=\"!isEditionAble\">\n                <i class=\"fas fa-trash-alt text-xl\"></i>\n              </button>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <div *ngIf=\"!items.data.length || !items.filteredData.length\" class=\"table-width text-center border py-3 mt-n3\">No users found</div>\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"> </mat-paginator>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { CustomersComponent } from \"./customers/customer.component\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport { RatesComponent } from \"./rates/rates.component\";\nimport { UsersComponent } from \"./users/users.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { RouterModule } from \"@angular/router\";\nimport { NewCustomerDialogComponent } from \"./customers/new-customer-dialog/new-customer-dialog.component\";\nimport { EditCustomerDialogComponent } from \"./customers/edit-customer-dialog/edit-customer-dialog.component\";\nimport { NewRateDialogComponent } from \"./rates/new-rate-dialog/new-rate-dialog.component\";\nimport { EditRateDialogComponent } from \"./rates/edit-rate-dialog/edit-rate-dialog.component\";\nimport { NewUserDialogComponent } from \"./users/new-user-dialog/new-user-dialog.component\";\nimport { EditUserDialogComponent } from \"./users/edit-user-dialog/edit-user-dialog.component\";\n\nexport const companyRoutes = [\n  {\n    path: \"\",\n    redirectTo: \"customers\",\n  },\n  {\n    path: \"customers\",\n    component: CustomersComponent,\n  },\n  {\n    path: \"profile\",\n    component: ProfileComponent,\n  },\n  {\n    path: \"rates\",\n    component: RatesComponent,\n  },\n  {\n    path: \"users\",\n    component: UsersComponent,\n  }\n];\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    ProfileComponent,\n    RatesComponent,\n    UsersComponent,\n    NewCustomerDialogComponent,\n    EditCustomerDialogComponent,\n    NewRateDialogComponent,\n    EditRateDialogComponent,\n    NewUserDialogComponent,\n    EditUserDialogComponent,\n  ],\n  imports: [CommonModule, RouterModule.forChild(companyRoutes), SharedModule],\n})\nexport class CompanyModule {}\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Subscription } from \"rxjs\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { RateBody } from \"src/app/business/models/rate.models\";\nimport { RateService } from \"src/app/business/services/rate.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\n\n@Component({\n  selector: \"app-new-rate-dialog\",\n  templateUrl: \"./new-rate-dialog.component.html\",\n  styleUrls: [\"./new-rate-dialog.component.scss\"],\n})\nexport class NewRateDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  rateForm: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedOrigState: string;\n  selectedDestState: string;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<NewRateDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private rateService: RateService,\n    private geoService: GeoService,\n    public notificationService: NotificationService\n  ) {\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  private buildForms() {\n    this.rateForm = this.fb.group({\n      origination_city_id: [\"\", [Validators.required]],\n      destination_city_id: [\"\", [Validators.required]],\n      amount: [0, [Validators.required]],\n    });\n  }\n\n  onStateChange(event, type: \"orig\" | \"dest\") {\n    const state = event.target.value;\n    if (type === \"orig\") {\n      this.selectedOrigState = state;\n      this.rateForm.controls.origination_city_id.reset();\n    } else {\n      this.selectedDestState = state;\n      this.rateForm.controls.destination_city_id.reset();\n    }\n    this.geoService.fetchCitiesByState(state);\n  }\n\n  onSubmit() {\n    if (this.rateForm.invalid) {\n      return Object.values(this.rateForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const body: RateBody = this.rateForm.value;\n      this.rateService.saveRate(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Rate added\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          if (err.error?.message?.includes(\"Rate already exists\")) {\n            this.notificationService.error(err.error.message);\n          }else{\n            this.notificationService.error();\n          }\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>New Rate</h3>\n  <form class=\"form-group row mt-4 new-rate-form\" [formGroup]=\"rateForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Origination state</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" (change)=\"onStateChange($event, 'orig')\">\n          <option value=\"\" selected disabled>Select state...</option>\n          <option *ngFor=\"let state of states\" [value]=\"state.code\">{{ state.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Origination city</label>\n      <div class=\"custom-select-wrapper\">\n        <select\n          class=\"custom-select form-control\"\n          formControlName=\"origination_city_id\"\n          [class.is-invalid]=\"rateForm.controls.origination_city_id.touched && rateForm.controls.origination_city_id.invalid\"\n        >\n          <option *ngFor=\"let city of cities[selectedOrigState]\" [value]=\"city.id\">{{ city.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Destination state</label>\n      <div class=\"custom-select-wrapper\">\n        <select class=\"custom-select form-control\" (change)=\"onStateChange($event, 'dest')\">\n          <option value=\"\" selected disabled>Select state...</option>\n          <option *ngFor=\"let state of states\" [value]=\"state.code\">{{ state.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"address2\" class=\"text-dark text-base\">Destination city</label>\n      <div class=\"custom-select-wrapper\">\n        <select\n          class=\"custom-select form-control\"\n          formControlName=\"destination_city_id\"\n          [class.is-invalid]=\"rateForm.controls.destination_city_id.touched && rateForm.controls.destination_city_id.invalid\"\n        >\n          <option *ngFor=\"let city of cities[selectedDestState]\" [value]=\"city.id\">{{ city.name }}</option>\n        </select>\n        <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n      </div>\n    </div>\n\n    <div class=\"col-12 mb-3\">\n      <label for=\"amount\" class=\"text-dark text-base\">Amount</label>\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">$</span>\n        </div>\n        <input\n          id=\"amount\"\n          name=\"amount\"\n          type=\"number\"\n          class=\"form-control\"\n          formControlName=\"amount\"\n          [class.is-invalid]=\"rateForm.controls.amount.touched && rateForm.controls.amount.invalid\"\n        />\n        <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n      </div>\n    </div>\n\n    <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n      <div class=\"col-5\">\n        <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n      </div>\n      <div class=\"col-5\">\n        <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatStepper } from \"@angular/material/stepper\";\nimport { Subscription } from \"rxjs\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { User } from \"src/app/business/models/user.models\";\nimport { UserService } from \"src/app/business/services/user.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { regexs } from \"src/app/core/config/constants\";\n\nexport interface EditUserDialogData {\n  user: User;\n}\n\n@Component({\n  selector: \"app-edit-user-dialog\",\n  templateUrl: \"./edit-user-dialog.component.html\",\n  styleUrls: [\"./edit-user-dialog.component.scss\"],\n})\nexport class EditUserDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  userForm: FormGroup;\n  options: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedState: string;\n  isLoading = false;\n  user: User;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditUserDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: EditUserDialogData,\n    private fb: FormBuilder,\n    private userService: UserService,\n    private geoService: GeoService,\n    public notificationService: NotificationService\n  ) {\n    this.user = data.user;\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n    this.selectedState = this.user.city.state_code;\n    this.geoService.fetchCitiesByState(this.user.city.state_code);\n  }\n\n  private buildForms() {\n    this.userForm = this.fb.group({\n      email: [this.user.email, [Validators.required, Validators.email]],\n      first_name: [this.user.first_name, [Validators.required]],\n      last_name: [this.user.last_name, [Validators.required]],\n      phone: [this.user.phone, [Validators.required,Validators.pattern(regexs.numbers)]],\n      office_phone: [this.user.office_phone, [Validators.pattern(regexs.numbers)]],\n      city: [this.user.city.id, [Validators.required, Validators.pattern(regexs.mongoId)]],\n      commission: [this.user.commission, [Validators.required]],\n    });\n\n    this.options = this.fb.group({\n      canEmailInvoices: [this.user.roles?.includes(\"INVOICE_EMAIL\")],\n      canModifyCustomers: [this.user.roles?.includes(\"HANDLE_CUSTOMERS\")],\n      isManager: [this.user.roles?.includes(\"MANAGER\")],\n      isAdmin: [this.user.roles?.includes(\"ADMIN\")],\n      isDriver: [this.user.roles?.includes(\"USER\")],\n      receiveEmail: [false],\n    });\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.userForm.controls.city.reset();\n  }\n\n  goBack(stepper: MatStepper) {\n    stepper.previous();\n  }\n\n  saveFirst(stepper: MatStepper) {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      stepper.next();\n    }\n  }\n\n  onSubmit(stepper: MatStepper) {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const body = {\n        ...this.userForm.value,\n        options: this.options.value,\n      };\n\n      this.userService.updateUser(body, this.user.id).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"User updated\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          if (err?.error?.message === \"Email already taken\") {\n            this.notificationService.error(err?.error?.message);\n            this.userForm.controls.email.setErrors({ alreadyTaken: true });\n            this.goBack(stepper);\n          } else {\n            this.notificationService.error();\n          }\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content custom-scroll\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>Edit User</h3>\n  <mat-horizontal-stepper linear #stepper>\n    <!-- STEP 1 -->\n    <!-- customer data -->\n    <mat-step label=\"User data\" [completed]=\"userForm.valid\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"userForm\" (ngSubmit)=\"saveFirst(stepper)\">\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n          <input\n            id=\"first_name\"\n            name=\"first_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"first_name\"\n            [class.is-invalid]=\"userForm.controls.first_name.touched && userForm.controls.first_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n          <input\n            id=\"last_name\"\n            name=\"last_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"last_name\"\n            [class.is-invalid]=\"userForm.controls.last_name.touched && userForm.controls.last_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"email\" class=\"text-dark text-base\">Email address</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            formControlName=\"email\"\n            [class.is-invalid]=\"userForm.controls.email.touched && userForm.controls.email.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone\" class=\"text-dark text-base\">Mobile phone</label>\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"phone\"\n            [class.is-invalid]=\"userForm.controls.phone.touched && userForm.controls.phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n          <input\n            id=\"office_phone\"\n            name=\"office_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone\"\n            [class.is-invalid]=\"userForm.controls.office_phone.touched && userForm.controls.office_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">State</label>\n          <div class=\"custom-select-wrapper\">\n            <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n              <option selected value=\"\">Select state...</option>\n              <option *ngFor=\"let state of states\" [value]=\"state.code\" [selected]=\"state.code === user.city.state_code\">\n                {{ state.name }}\n              </option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">City</label>\n          <div class=\"custom-select-wrapper\">\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"city\"\n              [class.is-invalid]=\"userForm.controls.city.touched && userForm.controls.city.invalid\"\n            >\n              <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\" [selected]=\"city.id === user.city.id\">\n                {{ city.name }}\n              </option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"driver_commission\" class=\"text-dark text-base\">Driver commission</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">%</span>\n            </div>\n            <input\n              id=\"commission\"\n              name=\"commission\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"commission\"\n              [class.is-invalid]=\"userForm.controls.commission.touched && userForm.controls.commission.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-primary\" type=\"submit\">Next</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n    <!-- STEP 2 -->\n    <!-- cutomer contact data -->\n    <mat-step label=\"Permissions\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"options\" (ngSubmit)=\"onSubmit(stepper)\">\n        <div class=\"col-12 px-2 py-2\">\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"canEmailInvoices\" formControlName=\"canEmailInvoices\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"canEmailInvoices\">Can Email Invoices?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"canModifyCustomers\" formControlName=\"canModifyCustomers\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"canModifyCustomers\">Can Modify Customer List?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isManager\" formControlName=\"isManager\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isManager\">Is Manager?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isAdmin\" formControlName=\"isAdmin\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"isAdmin\">Is Admin?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"isDriver\" formControlName=\"isDriver\" disabled/>\n              <label class=\"custom-control-label cursor-pointer\" for=\"isDriver\">Is Driver?</label>\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"receiveEmail\" formControlName=\"receiveEmail\" />\n              <label class=\"custom-control-label cursor-pointer\" for=\"receiveEmail\">Receive Email After Submit </label>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"goBack(stepper)\">Back</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n  </mat-horizontal-stepper>\n</div>\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { MatDialog } from '@angular/material/dialog'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { MatSort } from '@angular/material/sort'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { Subscription } from 'rxjs'\nimport { Rate } from 'src/app/business/models/rate.models'\nimport { RateService } from 'src/app/business/services/rate.service'\nimport { DialogService } from 'src/app/shared/dialogs/dialog.service'\nimport { NotificationService } from 'src/app/shared/notifications/notification.service'\nimport { EditRateDialogComponent, EditRateDialogData } from './edit-rate-dialog/edit-rate-dialog.component'\nimport { NewRateDialogComponent } from './new-rate-dialog/new-rate-dialog.component'\n\n@Component({\n  selector: 'app-rates',\n  templateUrl: './rates.component.html',\n  styleUrls: ['./rates.component.scss'],\n})\nexport class RatesComponent implements AfterViewInit, OnInit, OnDestroy {\n  displayedColumns = [\n    'origination_state',\n    'origination_city',\n    'destination_state',\n    'destination_city',\n    'amount',\n    'actions',\n  ]\n  pageSizeOptions: number[] = [12, 24, 50, 100]\n\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatPaginator) paginator: MatPaginator\n\n  subscriptions: Subscription[] = []\n  items: MatTableDataSource<any>\n  rates: Rate[]\n\n  constructor(\n    public dialog: MatDialog,\n    private dialogService: DialogService,\n    private rateService: RateService,\n    public notificationService: NotificationService\n  ) {\n    this.items = new MatTableDataSource([])\n    const sub = rateService.rates.subscribe((data) => {\n      this.rates = data\n      this.items.data = data\n    })\n    this.subscriptions.push(sub)\n  }\n\n  ngOnInit() {\n    if (!this.rates?.length) {\n      this.dialogService.showLoader()\n      this.rateService.fetchRates().finally(() => {\n        this.dialogService.hideLoader()\n      })\n    }\n  }\n\n  openNewDialog() {\n    this.dialog.open<NewRateDialogComponent, any>(NewRateDialogComponent, {\n      width: '700px',\n    })\n  }\n\n  openEditDialog(rate: any) {\n    this.dialog.open<EditRateDialogComponent, EditRateDialogData>(EditRateDialogComponent, {\n      width: '700px',\n      data: {\n        rate,\n      },\n    })\n  }\n\n  onDelete(rate: Rate) {\n    this.dialogService.showConfirm({ title: 'Delete rate', msg: 'Are you sure?' }, () => {\n      this.rateService.deleteRate(rate.id).subscribe(\n        (res) => {\n          this.notificationService.success('Rate deleted')\n        },\n        (err) => {\n          this.notificationService.error()\n        }\n      )\n    })\n  }\n\n  ngAfterViewInit() {\n    this.items.sort = this.sort\n    this.items.paginator = this.paginator\n  }\n\n  applyFilter(filterValue: string) {\n    this.items.filter = filterValue.trim().toLocaleLowerCase()\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe())\n  }\n}\n","<div class=\"px-2 px-md-5 py-3\">\n  <div class=\"d-flex flex-wrap w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block content-title\">Rates</h1>\n    <div class=\"d-flex content-options-bar\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">\n            <i class=\"fas fa-search\"></i>\n          </span>\n        </div>\n        <input type=\"text\" class=\"form-control\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter by any field...\" />\n      </div>\n      <button (click)=\"openNewDialog()\" class=\"btn font-weight-bold bg-blue-main text-light ml-3\">+Add</button>\n    </div>\n  </div>\n\n  <div class=\"row mb-4\">\n    <div class=\"col-12 table-wrapper table-responsive\">\n      <table mat-table [dataSource]=\"items\" class=\"table table-borderless table-striped\" matSort>\n        <ng-container matColumnDef=\"origination_state\">\n          <th mat-header-cell *matHeaderCellDef>Origination state</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.origination_city.state_name }}, {{ rate.origination_city.state_code }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"origination_city\">\n          <th mat-header-cell *matHeaderCellDef>Origination city</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.origination_city.name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"destination_state\">\n          <th mat-header-cell *matHeaderCellDef>Destination state</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.destination_city.state_name }}, {{ rate.destination_city.state_code }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"destination_city\">\n          <th mat-header-cell *matHeaderCellDef>Destination city</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.destination_city.name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"amount\">\n          <th mat-header-cell *matHeaderCellDef>Amount</th>\n          <td mat-cell *matCellDef=\"let rate\">{{ rate.amount | currency }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let rate\">\n            <div class=\"action-buttons\">\n              <button (click)=\"openEditDialog(rate)\" class=\"text-dark mr-4\" aria-label=\"edit\">\n                <i class=\"fas fa-edit text-xl\"></i>\n              </button>\n              <button (click)=\"onDelete(rate)\" class=\"text-dark\" aria-label=\"edit\">\n                <i class=\"fas fa-trash-alt text-xl\"></i>\n              </button>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <div *ngIf=\"!items.data.length || !items.filteredData.length\" class=\"table-width text-center border py-3 mt-n3\">No rates found</div>\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"> </mat-paginator>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatStepper } from \"@angular/material/stepper\";\nimport { Subscription } from \"rxjs\";\nimport { CustomerService } from \"src/app/business/services/customer.service\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { Customer } from \"src/app/business/models/customer.models\";\nimport { City, CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { regexs } from \"src/app/core/config/constants\";\n\nexport interface EditCustomerDialogData {\n  customer: Customer;\n}\n\n@Component({\n  selector: \"app-edit-customer-dialog\",\n  templateUrl: \"./edit-customer-dialog.component.html\",\n  styleUrls: [\"./edit-customer-dialog.component.scss\"],\n})\nexport class EditCustomerDialogComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  customerDataForm: FormGroup;\n  primaryContactForm: FormGroup;\n  customer: Customer;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  selectedState: string;\n  isLoading = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditCustomerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: EditCustomerDialogData,\n    private fb: FormBuilder,\n    private customerService: CustomerService,\n    private geoService: GeoService,\n    public notificationService: NotificationService\n  ) {\n    this.customer = this.data.customer;\n    this.buildForms();\n  }\n\n  ngOnInit() {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n\n    this.selectedState = this.customer.city.state_code;\n    this.geoService.fetchCitiesByState(this.customer.city.state_code);\n  }\n\n  private buildForms() {\n    this.customerDataForm = this.fb.group({\n      name: [this.customer.name, [Validators.required]],\n      address_line_1: [this.customer.address_line_1, [Validators.required]],\n      address_line_2: [this.customer.address_line_2 ?? \"\", []],\n      city_id: [this.customer.city.id, [Validators.required]],\n      zip: [this.customer.zip, [Validators.required,Validators.pattern(regexs.zip)]],\n      main_phone: [this.customer.main_phone, [Validators.required,Validators.pattern(regexs.numbers)]],\n      main_phone_extension: [this.customer.main_phone_extension,[Validators.pattern(regexs.numbers)]],\n      fax: [this.customer.fax,[Validators.pattern(regexs.numbers)]],\n    });\n\n    this.primaryContactForm = this.fb.group({\n      first_name: [this.customer.primary_contact.first_name, []],\n      last_name: [this.customer.primary_contact.last_name, []],\n      email: [this.customer.primary_contact.email, [, Validators.email]],\n      office_phone: [this.customer.primary_contact.office_phone, [Validators.pattern(regexs.numbers)]],\n      office_phone_extension: [this.customer.primary_contact.office_phone_extension,[Validators.pattern(regexs.numbers)]],\n      fax: [this.customer.primary_contact.fax,[Validators.pattern(regexs.numbers)]],\n      mobile_phone: [this.customer.primary_contact.mobile_phone, [Validators.pattern(regexs.numbers)]],\n      mobile_phone_extension: [this.customer.primary_contact.mobile_phone_extension,[Validators.pattern(regexs.numbers)]],\n    });\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.customerDataForm.controls.city_id.reset();\n  }\n\n  goBack(stepper: MatStepper) {\n    stepper.previous();\n  }\n\n  saveFirst(stepper: MatStepper) {\n    if (this.customerDataForm.invalid) {\n      return Object.values(this.customerDataForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      stepper.next();\n    }\n  }\n\n  onSubmit() {\n    if (this.primaryContactForm.invalid) {\n      return Object.values(this.primaryContactForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      //save customer\n      this.isLoading = true;\n      const body = {\n        ...this.customerDataForm.value,\n        primary_contact: this.primaryContactForm.value,\n      };\n      this.customerService.updateCustomer(body, this.customer.id).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Customer updated\");\n          this.dialogRef.close();\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"dialog-content\">\n  <div *ngIf=\"isLoading\" class=\"dialog-loader\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n  <h3>Edit Customer</h3>\n  <mat-horizontal-stepper linear #stepper>\n    <!-- STEP 1 -->\n    <!-- customer data -->\n    <mat-step label=\"Customer data\" [completed]=\"customerDataForm.valid\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"customerDataForm\" (ngSubmit)=\"saveFirst(stepper)\">\n        <div class=\"col-12 mb-3\">\n          <label for=\"name\" class=\"text-dark text-base\">Customer name</label>\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"name\"\n            [class.is-invalid]=\"customerDataForm.controls.name.touched && customerDataForm.controls.name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address1\" class=\"text-dark text-base\">Address Line 1</label>\n          <input\n            id=\"address1\"\n            name=\"address1\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"address_line_1\"\n            [class.is-invalid]=\"customerDataForm.controls.address_line_1.touched && customerDataForm.controls.address_line_1.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">Address Line 2</label>\n          <input\n            id=\"address2\"\n            name=\"address2\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"address_line_2\"\n            [class.is-invalid]=\"customerDataForm.controls.address_line_2.touched && customerDataForm.controls.address_line_2.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">State</label>\n          <div class=\"custom-select-wrapper\">\n            <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n              <option selected value=\"\">Select state...</option>\n              <option *ngFor=\"let state of states\" [value]=\"state.code\" [selected]=\"state.code === customer.city.state_code\">\n                {{ state.name }}\n              </option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-md-6 mb-3\">\n          <label for=\"address2\" class=\"text-dark text-base\">City</label>\n          <div class=\"custom-select-wrapper\">\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"city_id\"\n              [class.is-invalid]=\"customerDataForm.controls.city_id.touched && customerDataForm.controls.city_id.invalid\"\n            >\n              <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\" [selected]=\"city.id === customer.city.id\">\n                {{ city.name }}\n              </option>\n            </select>\n            <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n          </div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"zip\" class=\"text-dark text-base\">Zip</label>\n          <input\n            id=\"zip\"\n            name=\"zip\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"zip\"\n            [class.is-invalid]=\"customerDataForm.controls.zip.touched && customerDataForm.controls.zip.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone\" class=\"text-dark text-base\">Main phone</label>\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"main_phone\"\n            [class.is-invalid]=\"customerDataForm.controls.main_phone.touched && customerDataForm.controls.main_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"phone_extension\" class=\"text-dark text-base\">Main phone extension</label>\n          <input\n            id=\"phone_extension\"\n            name=\"phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"main_phone_extension\"\n            [class.is-invalid]=\"\n              customerDataForm.controls.main_phone_extension.touched && customerDataForm.controls.main_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n          <input\n            id=\"fax\"\n            name=\"fax\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"fax\"\n            [class.is-invalid]=\"customerDataForm.controls.fax.touched && customerDataForm.controls.fax.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-primary\" type=\"submit\">Next</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n    <!-- STEP 2 -->\n    <!-- cutomer contact data -->\n    <mat-step label=\"Primary contact\">\n      <form class=\"form-group row mt-4 new-customer-form\" [formGroup]=\"primaryContactForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"col-6 mb-3\">\n          <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n          <input\n            id=\"first_name\"\n            name=\"first_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"first_name\"\n            [class.is-invalid]=\"primaryContactForm.controls.first_name.touched && primaryContactForm.controls.first_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-6 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n          <input\n            id=\"last_name\"\n            name=\"last_name\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"last_name\"\n            [class.is-invalid]=\"primaryContactForm.controls.last_name.touched && primaryContactForm.controls.last_name.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"last_name\" class=\"text-dark text-base\">Email</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            formControlName=\"email\"\n            [class.is-invalid]=\"primaryContactForm.controls.email.touched && primaryContactForm.controls.email.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n          <input\n            id=\"office_phone\"\n            name=\"office_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone\"\n            [class.is-invalid]=\"primaryContactForm.controls.office_phone.touched && primaryContactForm.controls.office_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"office_phone_extension\" class=\"text-dark text-base\">Office phone extension</label>\n          <input\n            id=\"office_phone_extension\"\n            name=\"office_phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"office_phone_extension\"\n            [class.is-invalid]=\"\n              primaryContactForm.controls.office_phone_extension.touched && primaryContactForm.controls.office_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n          <input\n            id=\"fax\"\n            name=\"fax\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"fax\"\n            [class.is-invalid]=\"primaryContactForm.controls.fax.touched && primaryContactForm.controls.fax.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"mobile_phone\" class=\"text-dark text-base\">Mobile phone</label>\n          <input\n            id=\"mobile_phone\"\n            name=\"mobile_phone\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"mobile_phone\"\n            [class.is-invalid]=\"primaryContactForm.controls.mobile_phone.touched && primaryContactForm.controls.mobile_phone.invalid\"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"col-12 mb-3\">\n          <label for=\"mobile_phone_extension\" class=\"text-dark text-base\">Mobile phone extension</label>\n          <input\n            id=\"mobile_phone_extension\"\n            name=\"mobile_phone_extension\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"mobile_phone_extension\"\n            [class.is-invalid]=\"\n              primaryContactForm.controls.mobile_phone_extension.touched && primaryContactForm.controls.mobile_phone_extension.invalid\n            \"\n          />\n          <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n        </div>\n\n        <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"goBack(stepper)\">Back</button>\n          </div>\n          <div class=\"col-5\">\n            <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    </mat-step>\n  </mat-horizontal-stepper>\n</div>\n","<div class=\"px-2 px-md-5 py-3\">\n  <div class=\"d-flex w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block content-title\">Company Profile</h1>\n  </div>\n\n  <div class=\"mb-4\">\n    <div class=\"w-100 border-primary-2 rounded-xl\">\n      <div class=\"w-100 p-3 bg-primary text-white font-bold\">Profile info</div>\n      <div class=\"w-100 p-3 loader-container\">\n        <div *ngIf=\"isLoading\" class=\"loader\">\n          <mat-spinner [diameter]=\"50\"></mat-spinner>\n        </div>\n        <form class=\"form-group row mt-4 profile-form\" [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"col-12 mb-3\">\n            <label for=\"name\" class=\"text-dark text-base\">Company name</label>\n            <input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"name\"\n              [class.is-invalid]=\"profileForm.controls.name.touched && profileForm.controls.name.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"contact_name\" class=\"text-dark text-base\">Company contact name</label>\n            <input\n              id=\"contact_name\"\n              name=\"contact_name\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"contact_name\"\n              [class.is-invalid]=\"profileForm.controls.contact_name.touched && profileForm.controls.contact_name.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"address_line_1\" class=\"text-dark text-base\">Address Line 1</label>\n            <input\n              id=\"address_line_1\"\n              name=\"address_line_1\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"address_line_1\"\n              [class.is-invalid]=\"profileForm.controls.address_line_1.touched && profileForm.controls.address_line_1.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"address_line_2\" class=\"text-dark text-base\">Address Line 2</label>\n            <input\n              id=\"address_line_2\"\n              name=\"address_line_2\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"address_line_2\"\n              [class.is-invalid]=\"profileForm.controls.address_line_2.touched && profileForm.controls.address_line_2.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"state\" class=\"text-dark text-base\">State</label>\n            <div class=\"custom-select-wrapper\">\n              <select id=\"state\" class=\"custom-select form-control\" (change)=\"onStateChange($event)\" [disabled]=\"!isEditionAble\">\n                <option selected value=\"\">Select state...</option>\n                <option *ngFor=\"let state of states\" [value]=\"state.code\" [selected]=\"state.code === company?.city.state_code\">\n                  {{ state.name }}\n                </option>\n              </select>\n              <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n            </div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"city\" class=\"text-dark text-base\">City</label>\n            <div class=\"custom-select-wrapper\">\n              <select\n                id=\"city\"\n                class=\"custom-select form-control\"\n                formControlName=\"city\"\n                [class.is-invalid]=\"profileForm.controls.city.touched && profileForm.controls.city.invalid\"\n              >\n                <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\">{{ city.name }}</option>\n              </select>\n              <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n            </div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"zip\" class=\"text-dark text-base\">Zip</label>\n            <input\n              id=\"zip\"\n              name=\"zip\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"zip\"\n              [class.is-invalid]=\"profileForm.controls.zip.touched && profileForm.controls.zip.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 col-md-6 mb-3\">\n            <label for=\"fax\" class=\"text-dark text-base\">Fax</label>\n            <input\n              id=\"fax\"\n              name=\"fax\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"fax\"\n              [class.is-invalid]=\"profileForm.controls.fax.touched && profileForm.controls.fax.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n            <input\n              id=\"office_phone\"\n              name=\"office_phone\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"office_phone\"\n              [class.is-invalid]=\"profileForm.controls.office_phone.touched && profileForm.controls.office_phone.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"starting_invoice_number\" class=\"text-dark text-base\">Starting invoice number</label>\n            <input\n              id=\"starting_invoice_number\"\n              name=\"starting_invoice_number\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"starting_invoice_number\"\n            />\n          </div>\n\n          <div *ngIf=\"isEditionAble\" class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\n            </div>\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-success\" type=\"submit\" [disabled]=\"!isEditionAble\">Save</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { CompanyService } from \"src/app/business/services/company.service\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { Company } from \"src/app/business/models/company.models\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { AuthenticationService } from \"src/app/authentication/authentication.service\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.scss\"],\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  profileForm: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  company: Company;\n  selectedState: string;\n  isLoading = false;\n  isEditionAble = false;\n\n  constructor(\n    private companyService: CompanyService,\n    private fb: FormBuilder,\n    private geoService: GeoService,\n    public notificationService: NotificationService,\n    private router: Router,\n    private authService: AuthenticationService\n  ) {\n    this.isEditionAble = this.authService.isAdmin();\n    this.buildForm();\n    const sub = this.companyService.company.subscribe((data) => {\n      this.company = data;\n      if (data) {\n        this.loadFormData();\n      }\n    });\n    this.subscriptions.push(sub);\n  }\n\n  ngOnInit(): void {\n    if (!this.company) {\n      this.companyService.fetchCompany();\n    }\n\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  buildForm() {\n    this.profileForm = this.fb.group({\n      name: [{ value: this.company?.name || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      contact_name: [{ value: this.company?.contact_name || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      address_line_1: [{ value: this.company?.address_line_1 || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      address_line_2: [{ value: this.company?.address_line_2 || \"\", disabled: !this.isEditionAble }, []],\n      zip: [{ value: this.company?.zip || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      office_phone: [{ value: this.company?.office_phone || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      fax: [{ value: this.company?.fax || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      city: [{ value: this.company?.city.id || \"\", disabled: !this.isEditionAble }, [Validators.required]],\n      starting_invoice_number: [{ value: this.company?.starting_invoice_number || \"\", disabled: true }],\n    });\n  }\n\n  loadFormData() {\n    if (this.company) {\n      this.profileForm.setValue({\n        name: this.company.name,\n        contact_name: this.company.contact_name,\n        address_line_1: this.company.address_line_1,\n        address_line_2: this.company.address_line_2 ?? \"\",\n        zip: this.company.zip,\n        office_phone: this.company.office_phone ?? \"\",\n        fax: this.company.fax ?? \"\",\n        city: this.company.city.id,\n        starting_invoice_number: this.company.starting_invoice_number,\n      });\n      this.selectedState = this.company.city.state_code;\n      this.geoService.fetchCitiesByState(this.company.city.state_code);\n    }\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.profileForm.controls.city.reset();\n  }\n\n  onCancel() {\n    this.router.navigate([\"/\"]);\n  }\n\n  onSubmit() {\n    if (this.profileForm.invalid) {\n      return Object.values(this.profileForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const { starting_invoice_number, ...body } = this.profileForm.value;\n\n      this.companyService.updateCompany(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Profile updated\");\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n"]}
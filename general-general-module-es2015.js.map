{"version":3,"sources":["./src/app/shared/notifications/notification.service.ts","./src/app/core/config/constants.ts","./src/app/business/services/user.service.ts","./src/app/business/services/geo.service.ts","./src/app/general/change-password/change-password.component.ts","./src/app/general/change-password/change-password.component.html","./src/app/general/general.module.ts","./src/app/general/user-profile/user-profile.component.ts","./src/app/general/user-profile/user-profile.component.html","./src/app/general/home/home.component.ts","./src/app/general/home/home.component.html"],"names":[],"mappings":"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","file":"general-general-module-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { NotificationTemplateComponent } from \"../notification-template/notification-template.component\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotificationService {\n  mySnackBarRef: any;\n\n  constructor(public snackBar: MatSnackBar) {}\n\n  success(msg: string = \"Action successfully\") {\n    this.showNotification(msg, \"success\", \"check-circle\");\n  }\n\n  error(msg: string = \"Action failed\") {\n    this.showNotification(msg, \"danger\", \"exclamation-triangle\");\n  }\n\n  info(msg: string) {\n    this.showNotification(msg, \"info\", \"info\");\n  }\n\n  warning(msg: string) {\n    this.showNotification(msg, \"warning\", \"info\");\n  }\n\n  private showNotification(msg = \"Missed message\", type: \"danger\" | \"info\" | \"success\" | \"warning\", icon: string): void {\n    // for more info about Angular Material snackBar check: https://material.angular.io/components/snack-bar/overview\n    this.mySnackBarRef = this.snackBar.openFromComponent(NotificationTemplateComponent, {\n      data: {\n        message: msg,\n        icon,\n        type,\n        dismissible: true,\n        // you can add everything you want here\n      },\n      duration: type !== \"success\" ? 6000 : 3000,\n      horizontalPosition: \"right\", // 'start' | 'center' | 'end' | 'left' | 'right'\n      verticalPosition: \"bottom\", // 'top' | 'bottom'\n      panelClass: [\"notification-wrapper\"],\n    });\n    // this is to be able to close it from the NotificationComponent\n    this.mySnackBarRef.instance.snackBarRef = this.mySnackBarRef;\n  }\n}\n","const regexs = {\n  vin: /^[a-z,A-Z0-9]{6,17}$/,\n  zip: /^\\d{5}(?:[-\\s]\\d{4})?$/,\n  mongoId: /^(?=[a-f\\d]{24}$)(\\d+[a-f]|[a-f]+\\d)/i,\n  numbers: /^[0-9]{4,25}$/,\n};\n\nexport { regexs };\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { BehaviorSubject } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { User, UserBody } from '../models/user.models'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private baseUrl = environment.apiUrl\n\n  public users: BehaviorSubject<User[]> = new BehaviorSubject(null)\n\n  constructor(private http: HttpClient) {}\n\n  fetchUsers() {\n    return new Promise((resolve, reject) => {\n      this.http.get<User[]>(`${this.baseUrl}/users/admin`).subscribe(\n        (data) => {\n          this.users.next(data)\n          resolve(data)\n        },\n        (err) => {\n          reject(err)\n        }\n      )\n    })\n  }\n\n  getUserAuth() {\n    return this.http.get<User>(`${this.baseUrl}/users/me`)\n  }\n\n  saveUser(body: UserBody) {\n    return this.http.post<User>(`${this.baseUrl}/users/admin`, body).pipe(\n      map((res) => {\n        this.fetchUsers()\n        return res\n      })\n    )\n  }\n\n  updateUser(body: UserBody, id: string, isAdmin: boolean = true) {\n    const url = isAdmin ? `${this.baseUrl}/users/admin/${id}` : `${this.baseUrl}/users/me`\n    return this.http.put<User>(url, body).pipe(\n      map((res) => {\n        this.fetchUsers()\n        return res\n      })\n    )\n  }\n\n  deleteUser(id: string) {\n    return this.http.delete<User>(`${this.baseUrl}/users/admin/${id}`).pipe(\n      map((res) => {\n        this.fetchUsers()\n        return res\n      })\n    )\n  }\n\n  changePassword(body: { current_password: string; new_password: string }) {\n    return this.http.post(`${this.baseUrl}/users/me/changePassword`, body)\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { City, CurrentCities, State } from \"../models/geo.models\";\n\nconst STATES = [\n  { code: \"AL\", name: \"Alabama\" },\n  { code: \"AK\", name: \"Alaska\" },\n  { code: \"AZ\", name: \"Arizona\" },\n  { code: \"AR\", name: \"Arkansas\" },\n  { code: \"CA\", name: \"California\" },\n  { code: \"CO\", name: \"Colorado\" },\n  { code: \"CT\", name: \"Connecticut\" },\n  { code: \"DE\", name: \"Delaware\" },\n  { code: \"DC\", name: \"District of Columbia\" },\n  { code: \"FL\", name: \"Florida\" },\n  { code: \"GA\", name: \"Georgia\" },\n  { code: \"HI\", name: \"Hawaii\" },\n  { code: \"ID\", name: \"Idaho\" },\n  { code: \"IL\", name: \"Illinois\" },\n  { code: \"IN\", name: \"Indiana\" },\n  { code: \"IA\", name: \"Iowa\" },\n  { code: \"KS\", name: \"Kansas\" },\n  { code: \"KY\", name: \"Kentucky\" },\n  { code: \"LA\", name: \"Louisiana\" },\n  { code: \"ME\", name: \"Maine\" },\n  { code: \"MD\", name: \"Maryland\" },\n  { code: \"MA\", name: \"Massachusetts\" },\n  { code: \"MI\", name: \"Michigan\" },\n  { code: \"MN\", name: \"Minnesota\" },\n  { code: \"MS\", name: \"Mississippi\" },\n  { code: \"MO\", name: \"Missouri\" },\n  { code: \"MT\", name: \"Montana\" },\n  { code: \"NE\", name: \"Nebraska\" },\n  { code: \"NV\", name: \"Nevada\" },\n  { code: \"NH\", name: \"New Hampshire\" },\n  { code: \"NJ\", name: \"New Jersey\" },\n  { code: \"NM\", name: \"New Mexico\" },\n  { code: \"NY\", name: \"New York\" },\n  { code: \"NC\", name: \"North Carolina\" },\n  { code: \"ND\", name: \"North Dakota\" },\n  { code: \"OH\", name: \"Ohio\" },\n  { code: \"OK\", name: \"Oklahoma\" },\n  { code: \"OR\", name: \"Oregon\" },\n  { code: \"PA\", name: \"Pennsylvania\" },\n  { code: \"RI\", name: \"Rhode Island\" },\n  { code: \"SC\", name: \"South Carolina\" },\n  { code: \"SD\", name: \"South Dakota\" },\n  { code: \"TN\", name: \"Tennessee\" },\n  { code: \"TX\", name: \"Texas\" },\n  { code: \"UT\", name: \"Utah\" },\n  { code: \"VT\", name: \"Vermont\" },\n  { code: \"VA\", name: \"Virginia\" },\n  { code: \"WA\", name: \"Washington\" },\n  { code: \"WV\", name: \"West Virginia\" },\n  { code: \"WI\", name: \"Wisconsin\" },\n  { code: \"WY\", name: \"Wyoming\" },\n];\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GeoService {\n  private baseUrl = environment.apiUrl;\n\n  public states: State[] = STATES;\n  public currentCities: BehaviorSubject<CurrentCities> = new BehaviorSubject({});\n\n  constructor(private http: HttpClient) {}\n\n  fetchCitiesByState(state: string) {\n    if (this.currentCities.getValue()[state]) return;\n    this.http.get<City[]>(`${this.baseUrl}/general/cities/${state}`).subscribe((data) => {\n      this.currentCities.next(Object.assign(this.currentCities.getValue(), { [state]: data }));\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { ValidatorsService } from \"src/app/core/validators.service\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { User } from \"../../business/models/user.models\";\nimport { UserService } from \"../../business/services/user.service\";\nimport { regexs } from \"../../core/config/constants\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"./change-password.component.html\",\n  styleUrls: [\"./change-password.component.scss\"],\n})\nexport class ChangePasswordComponent {\n  passForm: FormGroup;\n  options: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  user: User;\n  selectedState: string;\n  isLoading = false;\n  showPass = false;\n\n  constructor(\n    private userService: UserService,\n    private fb: FormBuilder,\n    public notificationService: NotificationService,\n    private router: Router,\n    private validatorsService: ValidatorsService\n  ) {\n    this.buildForms();\n  }\n\n  toggleShowPass(event: any) {\n    this.showPass = event.target.checked\n  }\n\n  private buildForms() {\n    this.passForm = this.fb.group(\n      {\n        current_password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n        new_password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n        repeat_password: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n      },\n      {\n        validators: this.validatorsService.equalPasswords(\"new_password\", \"repeat_password\"),\n      }\n    );\n  }\n\n  onCancel() {\n    this.router.navigate([\"/\"]);\n  }\n\n  onSubmit() {\n    if (this.passForm.invalid) {\n      return Object.values(this.passForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n\n      const body = {\n        current_password: this.passForm.controls.current_password.value,\n        new_password: this.passForm.controls.new_password.value,\n      };\n      this.userService.changePassword(body).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Password updated\");\n          setTimeout(() => {\n            this.router.navigate([\"/\"]);\n          },700)\n        },\n        (err) => {\n          if (err.error?.message?.includes(\"Invalid current password\")) {\n            this.notificationService.error(\"Invalid current password\");\n          } else {\n            this.notificationService.error();\n          }\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n}\n","<div class=\"px-2 px-md-5 py-3\">\n  <div class=\"d-flex w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block\">Change password</h1>\n  </div>\n\n  <div class=\"mb-4\">\n    <div class=\"w-100 border-primary-2 rounded-xl\">\n      <div class=\"w-100 p-3 bg-primary text-white font-bold\">Passwords</div>\n      <div class=\"w-100 p-3 loader-container\">\n        <div *ngIf=\"isLoading\" class=\"loader\">\n          <mat-spinner [diameter]=\"50\"></mat-spinner>\n        </div>\n        <form class=\"form-group row mt-4 profile-form\" [formGroup]=\"passForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"col-12 mb-3\">\n            <label for=\"current_password\" class=\"text-dark text-base\">Current password</label>\n            <input\n              id=\"current_password\"\n              name=\"current_password\"\n              [type]=\"showPass ? 'text' : 'password'\"\n              class=\"form-control\"\n              formControlName=\"current_password\"\n              [class.is-invalid]=\"passForm.controls.current_password.touched && passForm.controls.current_password.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n              {{\n                passForm.controls.current_password.errors?.minlength || passForm.controls.current_password.errors?.maxlength\n                  ? \"Min 8 characters and max 20\"\n                  : \"Invalid field\"\n              }}\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"new_password\" class=\"text-dark text-base\">New password</label>\n            <input\n              id=\"new_password\"\n              name=\"new_password\"\n              [type]=\"showPass ? 'text' : 'password'\"\n              class=\"form-control\"\n              formControlName=\"new_password\"\n              [class.is-invalid]=\"passForm.controls.new_password.touched && passForm.controls.new_password.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n              {{\n                passForm.controls.new_password.errors?.minlength || passForm.controls.new_password.errors?.maxlength\n                  ? \"Min 8 characters and max 20\"\n                  : \"Invalid field\"\n              }}\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <label for=\"repeat_password\" class=\"text-dark text-base\">Repeat password</label>\n            <input\n              id=\"repeat_password\"\n              name=\"repeat_password\"\n              [type]=\"showPass ? 'text' : 'password'\"\n              class=\"form-control\"\n              formControlName=\"repeat_password\"\n              [class.is-invalid]=\"passForm.controls.repeat_password.touched && passForm.controls.repeat_password.invalid\"\n            />\n            <div class=\"form-text invalid-feedback\" *ngIf=\"true\">\n              {{\n                passForm.controls.repeat_password.errors?.minlength || passForm.controls.repeat_password.errors?.maxlength\n                  ? \"Min 8 characters and max 20\"\n                  : passForm.controls.repeat_password.errors?.notEqual ? \"Password does not match\" : \"Invalid field\"\n              }}\n            </div>\n          </div>\n\n          <div class=\"col-12 mb-3\">\n            <div class=\"custom-control custom-switch\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"showPass\" (change)=\"toggleShowPass($event)\"/>\n              <label class=\"custom-control-label cursor-pointer text-md\" for=\"showPass\">Show passwords</label>\n            </div>\n          </div>\n\n          <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\n            </div>\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { SharedModule } from \"../shared/shared.module\";\n\nimport { HomeComponent } from \"./home/home.component\";\nimport { UserProfileComponent } from \"./user-profile/user-profile.component\";\nimport { ChangePasswordComponent } from \"./change-password/change-password.component\";\n\nexport const generalRoutes = [\n  {\n    path: \"\",\n    component: HomeComponent,\n  },\n  {\n    path: \"profile\",\n    component: UserProfileComponent,\n  },\n  {\n    path: \"change-password\",\n    component: ChangePasswordComponent,\n  },\n];\n\n@NgModule({\n  declarations: [HomeComponent, UserProfileComponent, ChangePasswordComponent],\n  imports: [CommonModule, RouterModule.forChild(generalRoutes), SharedModule],\n})\nexport class GeneralModule {}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { GeoService } from \"src/app/business/services/geo.service\";\nimport { CurrentCities, State } from \"src/app/business/models/geo.models\";\nimport { NotificationService } from \"src/app/shared/notifications/notification.service\";\nimport { User } from \"../../business/models/user.models\";\nimport { UserService } from \"../../business/services/user.service\";\nimport { regexs } from \"../../core/config/constants\";\nimport { AuthenticationService } from \"src/app/authentication/authentication.service\";\n\n@Component({\n  selector: \"app-user-profile\",\n  templateUrl: \"./user-profile.component.html\",\n  styleUrls: [\"./user-profile.component.scss\"],\n})\nexport class UserProfileComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  userForm: FormGroup;\n  options: FormGroup;\n  states: State[] = [];\n  cities: CurrentCities = {};\n  user: User;\n  selectedState: string;\n  isLoading = false;\n  isAdmin = false;\n\n  constructor(\n    private userService: UserService,\n    private fb: FormBuilder,\n    private geoService: GeoService,\n    public notificationService: NotificationService,\n    private router: Router,\n    private authService: AuthenticationService\n  ) {\n    this.isAdmin = this.authService.isAdmin();\n    this.buildForms();\n    const sub = this.userService.getUserAuth().subscribe((data) => {\n      this.user = data;\n      if (data) {\n        this.loadFormData();\n      }\n    });\n    this.subscriptions.push(sub);\n  }\n\n  ngOnInit(): void {\n    this.states = this.geoService.states;\n    const sub = this.geoService.currentCities.subscribe((data) => {\n      this.cities = data;\n    });\n    this.subscriptions.push(sub);\n  }\n\n  private buildForms() {\n    this.userForm = this.fb.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      first_name: [\"\", [Validators.required]],\n      last_name: [\"\", [Validators.required]],\n      phone: [\"\", [Validators.required]],\n      office_phone: [\"\", [Validators.required]],\n      city: [\"\", [Validators.required, Validators.pattern(regexs.mongoId)]],\n      commission: [\"\", [Validators.required]],\n      canEmailInvoices: [false],\n      canModifyCustomers: [false],\n      isManager: [false],\n      isAdmin: [false],\n      isDriver: [false],\n      receiveEmail: [false],\n    });\n  }\n\n  loadFormData() {\n    if (this.user) {\n      this.userForm.setValue({\n        email: this.user.email,\n        first_name: this.user.first_name,\n        last_name: this.user.last_name,\n        phone: this.user.phone,\n        office_phone: this.user.office_phone,\n        city: this.user.city.id,\n        commission: this.user.commission,\n        canEmailInvoices: this.user.roles?.includes(\"INVOICE_EMAIL\"),\n        canModifyCustomers: this.user.roles?.includes(\"HANDLE_CUSTOMERS\"),\n        isManager: this.user.roles?.includes(\"MANAGER\"),\n        isAdmin: this.user.roles?.includes(\"ADMIN\"),\n        isDriver: this.user.roles?.includes(\"USER\"),\n        receiveEmail: false,\n      });\n\n      this.selectedState = this.user.city.state_code;\n      this.geoService.fetchCitiesByState(this.user.city.state_code);\n    }\n  }\n\n  onStateChange(event) {\n    this.selectedState = event.target.value;\n    this.geoService.fetchCitiesByState(this.selectedState);\n    this.userForm.controls.city.reset();\n  }\n\n  onCancel() {\n    this.router.navigate([\"/\"]);\n  }\n\n  onSubmit() {\n    if (this.userForm.invalid) {\n      return Object.values(this.userForm.controls).forEach((control) => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach((control) => control.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n      });\n    } else {\n      this.isLoading = true;\n      const { isManager, canModifyCustomers, canEmailInvoices, isDriver, isAdmin, receiveEmail, commission, ...rest } = this.userForm.value;\n\n      const body = rest;\n      if (this.isAdmin) {\n        body.commission = commission;\n        body.options = {\n          isManager,\n          canModifyCustomers,\n          canEmailInvoices,\n          isDriver,\n          isAdmin,\n          receiveEmail,\n        };\n      }\n\n      this.userService.updateUser(body, this.user.id, this.isAdmin).subscribe(\n        (res) => {\n          this.isLoading = false;\n          this.notificationService.success(\"Profile updated\");\n        },\n        (err) => {\n          this.notificationService.error();\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"px-2 px-md-5 py-3\">\n  <div class=\"d-flex w-100 justify-content-between align-items-center mb-3\">\n    <h1 class=\"text-dark d-inline-block\">User Profile</h1>\n  </div>\n\n  <div class=\"mb-4\">\n    <div class=\"w-100 border-primary-2 rounded-xl\">\n      <div class=\"w-100 p-3 bg-primary text-white font-bold\">Profile info</div>\n      <div class=\"w-100 p-3 loader-container\">\n        <div *ngIf=\"isLoading\" class=\"loader\">\n          <mat-spinner [diameter]=\"50\"></mat-spinner>\n        </div>\n          <form class=\"form-group row mt-4 profile-form\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"col-12 col-md-6 mb-3\">\n              <label for=\"first_name\" class=\"text-dark text-base\">First name</label>\n              <input\n                id=\"first_name\"\n                name=\"first_name\"\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"first_name\"\n                [class.is-invalid]=\"userForm.controls.first_name.touched && userForm.controls.first_name.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 col-md-6 mb-3\">\n              <label for=\"last_name\" class=\"text-dark text-base\">Last name</label>\n              <input\n                id=\"last_name\"\n                name=\"last_name\"\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"last_name\"\n                [class.is-invalid]=\"userForm.controls.last_name.touched && userForm.controls.last_name.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 mb-3\">\n              <label for=\"email\" class=\"text-dark text-base\">Email address</label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                class=\"form-control\"\n                formControlName=\"email\"\n                [class.is-invalid]=\"userForm.controls.email.touched && userForm.controls.email.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 mb-3\">\n              <label for=\"phone\" class=\"text-dark text-base\">Mobile phone</label>\n              <input\n                id=\"phone\"\n                name=\"phone\"\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"phone\"\n                [class.is-invalid]=\"userForm.controls.phone.touched && userForm.controls.phone.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 mb-3\">\n              <label for=\"office_phone\" class=\"text-dark text-base\">Office phone</label>\n              <input\n                id=\"office_phone\"\n                name=\"office_phone\"\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"office_phone\"\n                [class.is-invalid]=\"userForm.controls.office_phone.touched && userForm.controls.office_phone.invalid\"\n              />\n              <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n            </div>\n    \n            <div class=\"col-12 col-md-6 mb-3\">\n              <label for=\"address2\" class=\"text-dark text-base\">State</label>\n              <div class=\"custom-select-wrapper\">\n                <select class=\"custom-select form-control\" (change)=\"onStateChange($event)\">\n                  <option selected value=\"\">Select state...</option>\n                  <option *ngFor=\"let state of states\" [value]=\"state.code\" [selected]=\"state.code === user?.city?.state_code\">\n                    {{ state.name }}\n                  </option>\n                </select>\n                <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n              </div>\n            </div>\n    \n            <div class=\"col-12 col-md-6 mb-3\">\n              <label for=\"address2\" class=\"text-dark text-base\">City</label>\n              <div class=\"custom-select-wrapper\">\n                <select\n                  class=\"custom-select form-control\"\n                  formControlName=\"city\"\n                  [class.is-invalid]=\"userForm.controls.city.touched && userForm.controls.city.invalid\"\n                >\n                  <option *ngFor=\"let city of cities[selectedState]\" [value]=\"city.id\" [selected]=\"city.id === user.city.id\">\n                    {{ city.name }}\n                  </option>\n                </select>\n                <mat-icon class=\"half-arrow-icon\" svgIcon=\"half-arrow-down\"></mat-icon>\n              </div>\n            </div>\n    \n            <div class=\"col-12 mb-3\">\n              <label for=\"driver_commission\" class=\"text-dark text-base\">Driver commission</label>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">%</span>\n                </div>\n                <input\n                  id=\"commission\"\n                  name=\"commission\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"commission\"\n                  [class.is-invalid]=\"userForm.controls.commission.touched && userForm.controls.commission.invalid\"\n                />\n                <div class=\"form-text invalid-feedback\" *ngIf=\"true\">Invalid field</div>\n              </div>\n            </div>\n\n            <div *ngIf=\"isAdmin\" class=\"col-12 px-2 py-2 d-flex flex-wrap\">\n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"canEmailInvoices\" formControlName=\"canEmailInvoices\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"canEmailInvoices\">Can Email Invoices?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"canModifyCustomers\" formControlName=\"canModifyCustomers\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"canModifyCustomers\">Can Modify Customer List?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"isManager\" formControlName=\"isManager\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"isManager\">Is Manager?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"isAdmin\" formControlName=\"isAdmin\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"isAdmin\">Is Admin?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"isDriver\" formControlName=\"isDriver\" disabled/>\n                  <label class=\"custom-control-label cursor-pointer\" for=\"isDriver\">Is Driver?</label>\n                </div>\n              </div>\n    \n              <div class=\"col-12 col-md-6 col-lg-4 mb-3\">\n                <div class=\"custom-control custom-switch\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"receiveEmail\" formControlName=\"receiveEmail\" />\n                  <label class=\"custom-control-label cursor-pointer\" for=\"receiveEmail\">Receive Email After Submit </label>\n                </div>\n              </div>\n            </div>\n\n          <div class=\"d-flex w-100 px-0 px-md-4 pt-4 justify-content-between mt-2\">\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-secondary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\n            </div>\n            <div class=\"col-5\">\n              <button class=\"btn w-100 btn-success\" type=\"submit\">Save</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DashboardInfo } from \"src/app/business/models/company.models\";\nimport { CompanyService } from \"src/app/business/services/company.service\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  info: DashboardInfo;\n  time: \"week\" | \"month\" = \"week\";\n\n  constructor(private companyService: CompanyService) {\n    const sub = this.companyService.dashboardInfo.subscribe((data) => {\n      this.info = data;\n    });\n\n    this.subscriptions.push(sub);\n  }\n\n  ngOnInit(): void {\n    this.companyService.fetchDashboardInfo(this.time);\n  }\n\n  changeTime(time: \"week\" | \"month\") {\n    this.time = time;\n    this.companyService.fetchDashboardInfo(time);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"px-2 px-md-5 pt-3\">\n  <div class=\"d-flex justify-content-between col-12 align-items-end mb-4\">\n    <div>\n      <h1 class=\"text-dark content-title\">Dashboard</h1>\n      <span class=\"content-sub-title\"\n        >Data from <b>{{ info?.dateFrom || 0 | date: \"MM/dd/yyyy\" }}</b> to <b>{{ info?.dateTo | date: \"MM/dd/yyyy\" }}</b></span\n      >\n    </div>\n    <div>\n      <div class=\"d-flex\">\n        <button class=\"btn font-weight-bold time-btn rounded-sm\" [class.active]=\"time === 'week'\" (click)=\"changeTime('week')\">\n          Weekly\n        </button>\n        <button class=\"btn font-weight-bold time-btn rounded-sm\" [class.active]=\"time === 'month'\" (click)=\"changeTime('month')\">\n          Monthly\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row text-dark\">\n    <div class=\"col-12 p-3 rounded-lg\">\n      <div class=\"justify-content-between items-grid\">\n        <!-- MAIN INFO CARDS -->\n        <div class=\"item-card-big d-flex justify-content-between align-items-center px-3 py-4 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"text-3xl\">group</mat-icon>\n            <div class=\"ml-3 text-xl\">Total customers</div>\n          </div>\n          <span class=\"text-2xl\">{{ info?.customersCount || 0 }}</span>\n        </div>\n\n        <div class=\"item-card-big d-flex justify-content-between align-items-center px-3 py-4 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"text-3xl\">attach_money</mat-icon>\n            <div class=\"ml-3 text-xl\">Revenue</div>\n          </div>\n          <span class=\"text-2xl\">{{ info?.revenue || 0 | currency }}</span>\n        </div>\n\n        <!-- INFO LIST -->\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">settings</mat-icon>\n            <div class=\"ml-3\">Admins</div>\n          </div>\n          <span>{{ info?.userAdmins || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">group</mat-icon>\n            <div class=\"ml-3\">Drivers</div>\n          </div>\n          <span>{{ info?.userDriver || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">group</mat-icon>\n            <div class=\"ml-3\">Managers</div>\n          </div>\n          <span>{{ info?.userManager || 0 }}</span>\n        </div>\n        <!-- \n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">group</mat-icon>\n            <div class=\"ml-3\">Drivers(inactive)</div>\n          </div>\n          <span>12</span>\n        </div> -->\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">list_alt</mat-icon>\n            <div class=\"ml-3\">Driver draft invoices</div>\n          </div>\n          <span>{{ info?.draftInvoices || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">list_alt</mat-icon>\n            <div class=\"ml-3\">Submited for review invoices</div>\n          </div>\n          <span>{{ info?.reviewInvoices || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">list_alt</mat-icon>\n            <div class=\"ml-3\">Submited to customers invoices</div>\n          </div>\n          <span>{{ info?.submittedInvoices || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">directions_car</mat-icon>\n            <div class=\"ml-3\">Units</div>\n          </div>\n          <span>{{ info?.units || 0 }}</span>\n        </div>\n\n        <div class=\"item-card d-flex justify-content-between align-items-center p-3 rounded-lg font-weight-bold shadow-sm\">\n          <div class=\"d-flex align-items-center\">\n            <mat-icon class=\"h3\">directions_car</mat-icon>\n            <div class=\"ml-3\">Units YTD</div>\n          </div>\n          <span>{{ info?.unitsYTD || 0 }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}